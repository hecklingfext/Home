<refentry id="gdk-Pango-Interaction">
<refmeta>
<refentrytitle>Pango Interaction</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GDK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Pango Interaction</refname><refpurpose>Low-level access to Pango</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gdk/gdk.h&gt;


<link linkend="PangoContext">PangoContext</link>* <link linkend="gdk-pango-context-get">gdk_pango_context_get</link>         (void);
<link linkend="PangoContext">PangoContext</link>* <link linkend="gdk-pango-context-get-for-screen">gdk_pango_context_get_for_screen</link>
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="void">void</link>        <link linkend="gdk-pango-context-set-colormap">gdk_pango_context_set_colormap</link>  (<link linkend="PangoContext">PangoContext</link> *context,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap);
struct      <link linkend="GdkPangoAttrEmbossed">GdkPangoAttrEmbossed</link>;
struct      <link linkend="GdkPangoAttrStipple">GdkPangoAttrStipple</link>;
<link linkend="PangoAttribute">PangoAttribute</link>* <link linkend="gdk-pango-attr-embossed-new">gdk_pango_attr_embossed_new</link> (<link linkend="gboolean">gboolean</link> embossed);
<link linkend="PangoAttribute">PangoAttribute</link>* <link linkend="gdk-pango-attr-stipple-new">gdk_pango_attr_stipple_new</link>  (<link linkend="GdkBitmap">GdkBitmap</link> *stipple);
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="gdk-pango-layout-get-clip-region">gdk_pango_layout_get_clip_region</link>
                                            (<link linkend="PangoLayout">PangoLayout</link> *layout,
                                             <link linkend="gint">gint</link> x_origin,
                                             <link linkend="gint">gint</link> y_origin,
                                             <link linkend="gint">gint</link> *index_ranges,
                                             <link linkend="gint">gint</link> n_ranges);
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="gdk-pango-layout-line-get-clip-region">gdk_pango_layout_line_get_clip_region</link>
                                            (<link linkend="PangoLayoutLine">PangoLayoutLine</link> *line,
                                             <link linkend="gint">gint</link> x_origin,
                                             <link linkend="gint">gint</link> y_origin,
                                             <link linkend="gint">gint</link> *index_ranges,
                                             <link linkend="gint">gint</link> n_ranges);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="gdk-pango-context-get"/>gdk_pango_context_get ()</title>
<indexterm><primary>gdk_pango_context_get</primary></indexterm><programlisting><link linkend="PangoContext">PangoContext</link>* gdk_pango_context_get         (void);</programlisting>
<para>
Creates a <link linkend="PangoContext"><type>PangoContext</type></link> for the default GDK screen.
</para>
<para>
The context must be freed when you're finished with it.
</para>
<para>
When using GTK+, normally you should use <link linkend="gtk-widget-get-pango-context"><function>gtk_widget_get_pango_context()</function></link>
instead of this function, to get the appropriate context for
the widget you intend to render text onto.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="PangoContext"><type>PangoContext</type></link> for the default display
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pango-context-get-for-screen"/>gdk_pango_context_get_for_screen ()</title>
<indexterm><primary>gdk_pango_context_get_for_screen</primary></indexterm><programlisting><link linkend="PangoContext">PangoContext</link>* gdk_pango_context_get_for_screen
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Creates a <link linkend="PangoContext"><type>PangoContext</type></link> for <parameter>screen</parameter>.
</para>
<para>
The context must be freed when you're finished with it.
</para>
<para>
When using GTK+, normally you should use <link linkend="gtk-widget-get-pango-context"><function>gtk_widget_get_pango_context()</function></link>
instead of this function, to get the appropriate context for
the widget you intend to render text onto.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkScreen"><type>GdkScreen</type></link> for which the context is to be created.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="PangoContext"><type>PangoContext</type></link> for <parameter>screen</parameter>

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-pango-context-set-colormap"/>gdk_pango_context_set_colormap ()</title>
<indexterm><primary>gdk_pango_context_set_colormap</primary></indexterm><programlisting><link linkend="void">void</link>        gdk_pango_context_set_colormap  (<link linkend="PangoContext">PangoContext</link> *context,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap);</programlisting>
<para>
Sets the colormap to be used for drawing with <parameter>context</parameter>.
</para>
<para>
If you obtained your context from <link linkend="gtk-widget-get-pango-context"><function>gtk_widget_get_pango_context()</function></link> or
<link linkend="gtk-widget-create-pango-context"><function>gtk_widget_create_pango_context()</function></link>, the colormap will already be set
to the colormap for the widget, so you shouldn't need this
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoContext"><type>PangoContext</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>colormap</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkColormap"><type>GdkColormap</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkPangoAttrEmbossed"/>struct GdkPangoAttrEmbossed</title>
<indexterm><primary>GdkPangoAttrEmbossed</primary></indexterm><programlisting>struct GdkPangoAttrEmbossed {

  PangoAttribute attr;
  gboolean embossed;
};
</programlisting>
<para>
A Pango text attribute containing a embossed bitmap to be used when
rendering the text.
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="PangoAttribute">PangoAttribute</link> <structfield>attr</structfield></term>
<listitem><simpara>the <link linkend="PangoAttribute"><type>PangoAttribute</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gboolean">gboolean</link> <structfield>embossed</structfield></term>
<listitem><simpara>the embossed bitmap.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkPangoAttrStipple"/>struct GdkPangoAttrStipple</title>
<indexterm><primary>GdkPangoAttrStipple</primary></indexterm><programlisting>struct GdkPangoAttrStipple {

  PangoAttribute attr;
  GdkBitmap *stipple;
};
</programlisting>
<para>
A Pango text attribute containing a stipple bitmap to be used when
rendering the text.
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="PangoAttribute">PangoAttribute</link> <structfield>attr</structfield></term>
<listitem><simpara>the <link linkend="PangoAttribute"><type>PangoAttribute</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="GdkBitmap">GdkBitmap</link> *<structfield>stipple</structfield></term>
<listitem><simpara>the stipple bitmap.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pango-attr-embossed-new"/>gdk_pango_attr_embossed_new ()</title>
<indexterm><primary>gdk_pango_attr_embossed_new</primary></indexterm><programlisting><link linkend="PangoAttribute">PangoAttribute</link>* gdk_pango_attr_embossed_new (<link linkend="gboolean">gboolean</link> embossed);</programlisting>
<para>
Creates a new attribute containing a embossed bitmap to be used when
rendering the text.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>embossed</parameter>&nbsp;:</term>
<listitem><simpara> a bitmap to be set as embossed
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> new <link linkend="PangoAttribute"><type>PangoAttribute</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pango-attr-stipple-new"/>gdk_pango_attr_stipple_new ()</title>
<indexterm><primary>gdk_pango_attr_stipple_new</primary></indexterm><programlisting><link linkend="PangoAttribute">PangoAttribute</link>* gdk_pango_attr_stipple_new  (<link linkend="GdkBitmap">GdkBitmap</link> *stipple);</programlisting>
<para>
Creates a new attribute containing a stipple bitmap to be used when
rendering the text.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>stipple</parameter>&nbsp;:</term>
<listitem><simpara> a bitmap to be set as stipple
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> new <link linkend="PangoAttribute"><type>PangoAttribute</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pango-layout-get-clip-region"/>gdk_pango_layout_get_clip_region ()</title>
<indexterm><primary>gdk_pango_layout_get_clip_region</primary></indexterm><programlisting><link linkend="GdkRegion">GdkRegion</link>*  gdk_pango_layout_get_clip_region
                                            (<link linkend="PangoLayout">PangoLayout</link> *layout,
                                             <link linkend="gint">gint</link> x_origin,
                                             <link linkend="gint">gint</link> y_origin,
                                             <link linkend="gint">gint</link> *index_ranges,
                                             <link linkend="gint">gint</link> n_ranges);</programlisting>
<para>
Obtains a clip region which contains the areas where the given ranges
of text would be drawn. <parameter>x_origin</parameter> and <parameter>y_origin</parameter> are the same position
you would pass to <link linkend="gdk-draw-layout-line"><function>gdk_draw_layout_line()</function></link>. <parameter>index_ranges</parameter> should contain
ranges of bytes in the layout's text.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>layout</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoLayout"><type>PangoLayout</type></link> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_origin</parameter>&nbsp;:</term>
<listitem><simpara> X pixel where you intend to draw the layout with this clip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_origin</parameter>&nbsp;:</term>
<listitem><simpara> Y pixel where you intend to draw the layout with this clip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index_ranges</parameter>&nbsp;:</term>
<listitem><simpara> array of byte indexes into the layout, where even members of array are start indexes and odd elements are end indexes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_ranges</parameter>&nbsp;:</term>
<listitem><simpara> number of ranges in <parameter>index_ranges</parameter>, i.e. half the size of <parameter>index_ranges</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a clip region containing the given ranges
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pango-layout-line-get-clip-region"/>gdk_pango_layout_line_get_clip_region ()</title>
<indexterm><primary>gdk_pango_layout_line_get_clip_region</primary></indexterm><programlisting><link linkend="GdkRegion">GdkRegion</link>*  gdk_pango_layout_line_get_clip_region
                                            (<link linkend="PangoLayoutLine">PangoLayoutLine</link> *line,
                                             <link linkend="gint">gint</link> x_origin,
                                             <link linkend="gint">gint</link> y_origin,
                                             <link linkend="gint">gint</link> *index_ranges,
                                             <link linkend="gint">gint</link> n_ranges);</programlisting>
<para>
Obtains a clip region which contains the areas where the given
ranges of text would be drawn. <parameter>x_origin</parameter> and <parameter>y_origin</parameter> are the same
position you would pass to <link linkend="gdk-draw-layout-line"><function>gdk_draw_layout_line()</function></link>. <parameter>index_ranges</parameter>
should contain ranges of bytes in the layout's text. The clip
region will include space to the left or right of the line (to the
layout bounding box) if you have indexes above or below the indexes
contained inside the line. This is to draw the selection all the way
to the side of the layout. However, the clip region is in line coordinates,
not layout coordinates.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>line</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoLayoutLine"><type>PangoLayoutLine</type></link> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_origin</parameter>&nbsp;:</term>
<listitem><simpara> X pixel where you intend to draw the layout line with this clip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_origin</parameter>&nbsp;:</term>
<listitem><simpara> baseline pixel where you intend to draw the layout line with this clip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index_ranges</parameter>&nbsp;:</term>
<listitem><simpara> array of byte indexes into the layout, where even members of array are start indexes and odd elements are end indexes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_ranges</parameter>&nbsp;:</term>
<listitem><simpara> number of ranges in <parameter>index_ranges</parameter>, i.e. half the size of <parameter>index_ranges</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a clip region containing the given ranges
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
