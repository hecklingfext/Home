<refentry id="gtk-gtkfilefilter">
<refmeta>
<refentrytitle>GtkFileFilter</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkFileFilter</refname><refpurpose>A filter for selecting a file subset</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<anchor id="GtkFileFilter"/>
<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkFileFilter-struct">GtkFileFilter</link>;
struct      <link linkend="GtkFileFilterInfo">GtkFileFilterInfo</link>;
enum        <link linkend="GtkFileFilterFlags">GtkFileFilterFlags</link>;
<link linkend="gboolean">gboolean</link>    (<link linkend="GtkFileFilterFunc">*GtkFileFilterFunc</link>)            (const <link linkend="GtkFileFilterInfo">GtkFileFilterInfo</link> *filter_info,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="GtkFileFilter">GtkFileFilter</link>* <link linkend="gtk-file-filter-new">gtk_file_filter_new</link>          (void);
<link linkend="void">void</link>        <link linkend="gtk-file-filter-set-name">gtk_file_filter_set_name</link>        (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="gchar">gchar</link> *name);
G_CONST_RETURN <link linkend="gchar">gchar</link>* <link linkend="gtk-file-filter-get-name">gtk_file_filter_get_name</link>
                                            (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter);
<link linkend="void">void</link>        <link linkend="gtk-file-filter-add-mime-type">gtk_file_filter_add_mime_type</link>   (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="gchar">gchar</link> *mime_type);
<link linkend="void">void</link>        <link linkend="gtk-file-filter-add-pattern">gtk_file_filter_add_pattern</link>     (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="gchar">gchar</link> *pattern);
<link linkend="void">void</link>        <link linkend="gtk-file-filter-add-custom">gtk_file_filter_add_custom</link>      (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             <link linkend="GtkFileFilterFlags">GtkFileFilterFlags</link> needed,
                                             <link linkend="GtkFileFilterFunc">GtkFileFilterFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> notify);
<link linkend="GtkFileFilterFlags">GtkFileFilterFlags</link> <link linkend="gtk-file-filter-get-needed">gtk_file_filter_get_needed</link>
                                            (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-file-filter-filter">gtk_file_filter_filter</link>          (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="GtkFileFilterInfo">GtkFileFilterInfo</link> *filter_info);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----GtkFileFilter
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkFileFilter-struct"/>struct GtkFileFilter</title>
<indexterm><primary>GtkFileFilter</primary></indexterm><programlisting>struct GtkFileFilter;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkFileFilterInfo"/>struct GtkFileFilterInfo</title>
<indexterm><primary>GtkFileFilterInfo</primary></indexterm><programlisting>struct GtkFileFilterInfo {

  GtkFileFilterFlags contains;
  
  const gchar *filename;
  const gchar *uri;
  const gchar *display_name;
  const gchar *mime_type;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkFileFilterFlags"/>enum GtkFileFilterFlags</title>
<indexterm><primary>GtkFileFilterFlags</primary></indexterm><programlisting>typedef enum {
  GTK_FILE_FILTER_FILENAME     = 1 &lt;&lt; 0,
  GTK_FILE_FILTER_URI          = 1 &lt;&lt; 1,
  GTK_FILE_FILTER_DISPLAY_NAME = 1 &lt;&lt; 2,
  GTK_FILE_FILTER_MIME_TYPE    = 1 &lt;&lt; 3
} GtkFileFilterFlags;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkFileFilterFunc"/>GtkFileFilterFunc ()</title>
<indexterm><primary>GtkFileFilterFunc</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    (*GtkFileFilterFunc)            (const <link linkend="GtkFileFilterInfo">GtkFileFilterInfo</link> *filter_info,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter_info</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-new"/>gtk_file_filter_new ()</title>
<indexterm><primary>gtk_file_filter_new</primary></indexterm><programlisting><link linkend="GtkFileFilter">GtkFileFilter</link>* gtk_file_filter_new          (void);</programlisting>
<para>
Creates a new <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link> with no rules added to it.
Such a filter doesn't accept any files, so is not
particularly useful until you add rules with
<link linkend="gtk-file-filter-add-mime-type"><function>gtk_file_filter_add_mime_type()</function></link>, <link linkend="gtk-file-filter-add-pattern"><function>gtk_file_filter_add_pattern()</function></link>,
or <link linkend="gtk-file-filter-add-custom"><function>gtk_file_filter_add_custom()</function></link>. To create a filter
that accepts any file, use:
</para>
<para>
<informalexample><programlisting>
GtkFileFilter *filter = gtk_file_filter_new (<!-- -->);
gtk_file_filter_add_pattern (filter, "*");
</programlisting></informalexample></para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-set-name"/>gtk_file_filter_set_name ()</title>
<indexterm><primary>gtk_file_filter_set_name</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_file_filter_set_name        (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Sets the human-readable name of the filter; this is the string
that will be displayed in the file selector user interface if
there is a selectable list of filters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the human-readable-name for the filter, or <literal>NULL</literal>
  to remove any existing name.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-get-name"/>gtk_file_filter_get_name ()</title>
<indexterm><primary>gtk_file_filter_get_name</primary></indexterm><programlisting>G_CONST_RETURN <link linkend="gchar">gchar</link>* gtk_file_filter_get_name
                                            (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter);</programlisting>
<para>
Gets the human-readable name for the filter. See <link linkend="gtk-file-filter-set-name"><function>gtk_file_filter_set_name()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The human-readable name of the filter,
  or <literal>NULL</literal>. This value is owned by GTK+ and must not
  be modified or freed.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-add-mime-type"/>gtk_file_filter_add_mime_type ()</title>
<indexterm><primary>gtk_file_filter_add_mime_type</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_file_filter_add_mime_type   (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="gchar">gchar</link> *mime_type);</programlisting>
<para>
Adds a rule allowing a given mime type to <parameter>filter</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mime_type</parameter>&nbsp;:</term>
<listitem><simpara> name of a MIME type
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-add-pattern"/>gtk_file_filter_add_pattern ()</title>
<indexterm><primary>gtk_file_filter_add_pattern</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_file_filter_add_pattern     (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="gchar">gchar</link> *pattern);</programlisting>
<para>
Adds a rule allowing a shell style glob to a filter.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pattern</parameter>&nbsp;:</term>
<listitem><simpara> a shell style glob
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-add-custom"/>gtk_file_filter_add_custom ()</title>
<indexterm><primary>gtk_file_filter_add_custom</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_file_filter_add_custom      (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             <link linkend="GtkFileFilterFlags">GtkFileFilterFlags</link> needed,
                                             <link linkend="GtkFileFilterFunc">GtkFileFilterFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> notify);</programlisting>
<para>
Adds rule to a filter that allows files based on a custom callback
function. The bitfield <parameter>needed</parameter> which is passed in provides information
about what sorts of information that the filter function needs;
this allows GTK+ to avoid retrieving expensive information when
it isn't needed by the filter.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>needed</parameter>&nbsp;:</term>
<listitem><simpara> bitfield of flags indicating the information that the custom
         filter function needs.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> callback function; if the function returns <literal>TRUE</literal>, then
  the file will be displayed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> data to pass to <parameter>func</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>notify</parameter>&nbsp;:</term>
<listitem><simpara> function to call to free <parameter>data</parameter> when it is no longer needed.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-get-needed"/>gtk_file_filter_get_needed ()</title>
<indexterm><primary>gtk_file_filter_get_needed</primary></indexterm><programlisting><link linkend="GtkFileFilterFlags">GtkFileFilterFlags</link> gtk_file_filter_get_needed
                                            (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter);</programlisting>
<para>
Gets the fields that need to be filled in for the structure
passed to <link linkend="gtk-file-filter-filter"><function>gtk_file_filter_filter()</function></link>
</para>
<para>
This function will not typically be used by applications; it
is intended principally for use in the implementation of
<link linkend="GtkFileChooser"><type>GtkFileChooser</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> bitfield of flags indicating needed fields when
  calling <link linkend="gtk-file-filter-filter"><function>gtk_file_filter_filter()</function></link>

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-file-filter-filter"/>gtk_file_filter_filter ()</title>
<indexterm><primary>gtk_file_filter_filter</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_file_filter_filter          (<link linkend="GtkFileFilter">GtkFileFilter</link> *filter,
                                             const <link linkend="GtkFileFilterInfo">GtkFileFilterInfo</link> *filter_info);</programlisting>
<para>
Tests whether a file should be displayed according to <parameter>filter</parameter>.
The <link linkend="GtkFileFilterInfo"><type>GtkFileFilterInfo</type></link> structure <parameter>filter_info</parameter> should include
the fields returned feom <link linkend="gtk-file-filter-get-needed"><function>gtk_file_filter_get_needed()</function></link>.
</para>
<para>
This function will not typically be used by applications; it
is intended principally for use in the implementation of
<link linkend="GtkFileChooser"><type>GtkFileChooser</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilter"><type>GtkFileFilter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filter_info</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkFileFilterInfo"><type>GtkFileFilterInfo</type></link> structure containing information
 about a file.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the file should be displayed

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>

</refsect1>




</refentry>
