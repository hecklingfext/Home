<refentry id="GtkEntry">
<refmeta>
<refentrytitle>GtkEntry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkEntry</refname><refpurpose>a single line text entry field.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkEntry-struct">GtkEntry</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-entry-new">gtk_entry_new</link>                   (void);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-entry-new-with-max-length">gtk_entry_new_with_max_length</link>   (<link linkend="gint">gint</link> max);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-text">gtk_entry_set_text</link>              (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>        <link linkend="gtk-entry-append-text">gtk_entry_append_text</link>           (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>        <link linkend="gtk-entry-prepend-text">gtk_entry_prepend_text</link>          (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-position">gtk_entry_set_position</link>          (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> position);
G_CONST_RETURN <link linkend="gchar">gchar</link>* <link linkend="gtk-entry-get-text">gtk_entry_get_text</link>    (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="void">void</link>        <link linkend="gtk-entry-select-region">gtk_entry_select_region</link>         (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> start,
                                             <link linkend="gint">gint</link> end);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-visibility">gtk_entry_set_visibility</link>        (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> visible);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-invisible-char">gtk_entry_set_invisible_char</link>    (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gunichar">gunichar</link> ch);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-editable">gtk_entry_set_editable</link>          (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> editable);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-max-length">gtk_entry_set_max_length</link>        (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> max);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-entry-get-activates-default">gtk_entry_get_activates_default</link> (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-entry-get-has-frame">gtk_entry_get_has_frame</link>         (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="gint">gint</link>        <link linkend="gtk-entry-get-width-chars">gtk_entry_get_width_chars</link>       (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-activates-default">gtk_entry_set_activates_default</link> (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> setting);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-has-frame">gtk_entry_set_has_frame</link>         (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> setting);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-width-chars">gtk_entry_set_width_chars</link>       (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> n_chars);
<link linkend="gunichar">gunichar</link>    <link linkend="gtk-entry-get-invisible-char">gtk_entry_get_invisible_char</link>    (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-alignment">gtk_entry_set_alignment</link>         (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gfloat">gfloat</link> xalign);
<link linkend="gfloat">gfloat</link>      <link linkend="gtk-entry-get-alignment">gtk_entry_get_alignment</link>         (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="PangoLayout">PangoLayout</link>* <link linkend="gtk-entry-get-layout">gtk_entry_get_layout</link>           (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="void">void</link>        <link linkend="gtk-entry-get-layout-offsets">gtk_entry_get_layout_offsets</link>    (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> *x,
                                             <link linkend="gint">gint</link> *y);
<link linkend="gint">gint</link>        <link linkend="gtk-entry-get-max-length">gtk_entry_get_max_length</link>        (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-entry-get-visibility">gtk_entry_get_visibility</link>        (<link linkend="GtkEntry">GtkEntry</link> *entry);
<link linkend="void">void</link>        <link linkend="gtk-entry-set-completion">gtk_entry_set_completion</link>        (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="GtkEntryCompletion">GtkEntryCompletion</link> *completion);
<link linkend="GtkEntryCompletion">GtkEntryCompletion</link>* <link linkend="gtk-entry-get-completion">gtk_entry_get_completion</link>
                                            (<link linkend="GtkEntry">GtkEntry</link> *entry);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----GtkEntry
                     +----<link linkend="GtkSpinButton">GtkSpinButton</link>
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GtkEntry implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>,  <link linkend="GtkEditable">GtkEditable</link> and  <link linkend="GtkCellEditable">GtkCellEditable</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkEntry--activates-default">activates-default</link>&quot;    <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkEntry--cursor-position">cursor-position</link>&quot;      <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkEntry--editable">editable</link>&quot;             <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkEntry--has-frame">has-frame</link>&quot;            <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkEntry--invisible-char">invisible-char</link>&quot;       <link linkend="guint">guint</link>                : Read / Write
  &quot;<link linkend="GtkEntry--max-length">max-length</link>&quot;           <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkEntry--scroll-offset">scroll-offset</link>&quot;        <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkEntry--selection-bound">selection-bound</link>&quot;      <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkEntry--text">text</link>&quot;                 <link linkend="gchararray">gchararray</link>           : Read / Write
  &quot;<link linkend="GtkEntry--visibility">visibility</link>&quot;           <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkEntry--width-chars">width-chars</link>&quot;          <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkEntry--xalign">xalign</link>&quot;               <link linkend="gfloat">gfloat</link>               : Read / Write
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GtkEntry-activate">activate</link>&quot;  <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-copy-clipboard">copy-clipboard</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-cut-clipboard">cut-clipboard</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-delete-from-cursor">delete-from-cursor</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="GtkDeleteType">GtkDeleteType</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-insert-at-cursor">insert-at-cursor</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gchar">gchar</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-move-cursor">move-cursor</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="GtkMovementStep">GtkMovementStep</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gboolean">gboolean</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-paste-clipboard">paste-clipboard</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-populate-popup">populate-popup</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="GtkMenu">GtkMenu</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkEntry-toggle-overwrite">toggle-overwrite</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
The <link linkend="GtkEntry"><type>GtkEntry</type></link> widget is a single line text entry
widget. A fairly large set of key bindings are supported
by default. If the entered text is longer than the allocation
of the widget, the widget will scroll so that the cursor
position is visible. 
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkEntry-struct"/>struct GtkEntry</title>
<indexterm><primary>GtkEntry</primary></indexterm><programlisting>struct GtkEntry;</programlisting>
<para>
The <link linkend="GtkEntry-struct"><type>GtkEntry-struct</type></link> struct contains only private data.
</para></refsect2>
<refsect2>
<title><anchor id="gtk-entry-new"/>gtk_entry_new ()</title>
<indexterm><primary>gtk_entry_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_entry_new                   (void);</programlisting>
<para>
Creates a new <link linkend="GtkEntry"><type>GtkEntry</type></link> widget.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new <link linkend="GtkEntry"><type>GtkEntry</type></link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-new-with-max-length"/>gtk_entry_new_with_max_length ()</title>
<indexterm><primary>gtk_entry_new_with_max_length</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_entry_new_with_max_length   (<link linkend="gint">gint</link> max);</programlisting>
<warning><para><literal>gtk_entry_new_with_max_length</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Creates a new <link linkend="GtkEntry"><type>GtkEntry</type></link> widget with the given maximum length.
</para>
<para>
Note: the existence of this function is inconsistent
with the rest of the GTK+ API. The normal setup would
be to just require the user to make an extra call
to <link linkend="gtk-entry-set-max-length"><function>gtk_entry_set_max_length()</function></link> instead. It is not
expected that this function will be removed, but
it would be better practice not to use it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>max</parameter>&nbsp;:</term>
<listitem><simpara> the maximum length of the entry, or 0 for no maximum.
  (other than the maximum length of entries.) The value passed in will
  be clamped to the range 0-65536.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-text"/>gtk_entry_set_text ()</title>
<indexterm><primary>gtk_entry_set_text</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_text              (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Sets the text in the widget to the given
value, replacing the current contents.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the new text.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-append-text"/>gtk_entry_append_text ()</title>
<indexterm><primary>gtk_entry_append_text</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_append_text           (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *text);</programlisting>
<warning><para><literal>gtk_entry_append_text</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Appends the given text to the contents of the widget.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the text to append.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-prepend-text"/>gtk_entry_prepend_text ()</title>
<indexterm><primary>gtk_entry_prepend_text</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_prepend_text          (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *text);</programlisting>
<warning><para><literal>gtk_entry_prepend_text</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Prepends the given text to the contents of th ewidget.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the text to prepend.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-position"/>gtk_entry_set_position ()</title>
<indexterm><primary>gtk_entry_set_position</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_position          (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_entry_set_position</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the cursor position in an entry to the given 
value. This function is obsolete. You should use
<link linkend="gtk-editable-set-position"><function>gtk_editable_set_position()</function></link> instead.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara>the position of the cursor. The cursor is displayed
           before the character with the given (base 0) index
           in the widget. The value must be less than or
           equal to the number of characters in the widget.
           A value of -1 indicates that the position should
           be set after the last character in the entry.
           Note that this position is in characters, not in
           bytes.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-text"/>gtk_entry_get_text ()</title>
<indexterm><primary>gtk_entry_get_text</primary></indexterm><programlisting>G_CONST_RETURN <link linkend="gchar">gchar</link>* gtk_entry_get_text    (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Retrieves the contents of the entry widget.
See also <link linkend="gtk-editable-get-chars"><function>gtk_editable_get_chars()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a pointer to the contents of the widget as a
     string.  This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-select-region"/>gtk_entry_select_region ()</title>
<indexterm><primary>gtk_entry_select_region</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_select_region         (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> start,
                                             <link linkend="gint">gint</link> end);</programlisting>
<warning><para><literal>gtk_entry_select_region</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Selects a region of text. The characters that
are selected are those characters at positions from
<parameter>start_pos</parameter> up to, but not including <parameter>end_pos</parameter>. If 
<parameter>end_pos</parameter> is negative, then the the characters selected
will be those characters from <parameter>start_pos</parameter> to the end
of the text. This function is obsolete. You should
use <link linkend="gtk-editable-select-region"><function>gtk_editable_select_region()</function></link> instead.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start</parameter>&nbsp;:</term>
<listitem><simpara>the starting position.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end</parameter>&nbsp;:</term>
<listitem><simpara>the end position.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-visibility"/>gtk_entry_set_visibility ()</title>
<indexterm><primary>gtk_entry_set_visibility</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_visibility        (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> visible);</programlisting>
<para>
Sets whether the contents of the entry are visible or
not. When visibility is set to <literal>FALSE</literal>, characters
are displayed as the invisible char, and will also appear
that way when the text in the entry widget is copied
elsewhere.
</para>
<para>
The default invisible char is the asterisk '*', but it can
be changed with <link linkend="gtk-entry-set-invisible-char"><function>gtk_entry_set_invisible_char()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>visible</parameter>&nbsp;:</term>
<listitem><simpara><literal>TRUE</literal> if the contents of the entry are displayed
          as plaintext.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-invisible-char"/>gtk_entry_set_invisible_char ()</title>
<indexterm><primary>gtk_entry_set_invisible_char</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_invisible_char    (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gunichar">gunichar</link> ch);</programlisting>
<para>
Sets the character to use in place of the actual text when
<link linkend="gtk-entry-set-visibility"><function>gtk_entry_set_visibility()</function></link> has been called to set text visibility
to <literal>FALSE</literal>. i.e. this is the character used in "password mode" to
show the user how many characters have been typed. The default
invisible char is an asterisk ('*').  If you set the invisible char
to 0, then the user will get no feedback at all; there will be
no text on the screen as they type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ch</parameter>&nbsp;:</term>
<listitem><simpara> a Unicode character
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-editable"/>gtk_entry_set_editable ()</title>
<indexterm><primary>gtk_entry_set_editable</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_editable          (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> editable);</programlisting>
<warning><para><literal>gtk_entry_set_editable</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Determines if the user can edit the text in the editable
widget or not. This function is obsolete. You should
use <link linkend="gtk-editable-set-editable"><function>gtk_editable_set_editable()</function></link> instead.
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>editable</parameter>&nbsp;:</term>
<listitem><simpara><literal>TRUE</literal> if the user is allowed to edit the text
  in the widget.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-max-length"/>gtk_entry_set_max_length ()</title>
<indexterm><primary>gtk_entry_set_max_length</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_max_length        (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> max);</programlisting>
<para>
Sets the maximum allowed length of the contents of the widget. If
the current contents are longer than the given length, then they
will be truncated to fit.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max</parameter>&nbsp;:</term>
<listitem><simpara> the maximum length of the entry, or 0 for no maximum.
  (other than the maximum length of entries.) The value passed in will
  be clamped to the range 0-65536.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-activates-default"/>gtk_entry_get_activates_default ()</title>
<indexterm><primary>gtk_entry_get_activates_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_entry_get_activates_default (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Retrieves the value set by <link linkend="gtk-entry-set-activates-default"><function>gtk_entry_set_activates_default()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the entry will activate the default widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-has-frame"/>gtk_entry_get_has_frame ()</title>
<indexterm><primary>gtk_entry_get_has_frame</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_entry_get_has_frame         (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Gets the value set by <link linkend="gtk-entry-set-has-frame"><function>gtk_entry_set_has_frame()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> whether the entry has a beveled frame
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-width-chars"/>gtk_entry_get_width_chars ()</title>
<indexterm><primary>gtk_entry_get_width_chars</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_entry_get_width_chars       (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Gets the value set by <link linkend="gtk-entry-set-width-chars"><function>gtk_entry_set_width_chars()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> number of chars to request space for, or negative if unset
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-activates-default"/>gtk_entry_set_activates_default ()</title>
<indexterm><primary>gtk_entry_set_activates_default</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_activates_default (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
If <parameter>setting</parameter> is <literal>TRUE</literal>, pressing Enter in the <parameter>entry</parameter> will activate the default
widget for the window containing the entry. This usually means that
the dialog box containing the entry will be closed, since the default
widget is usually one of the dialog buttons.
</para>
<para>
(For experts: if <parameter>setting</parameter> is <literal>TRUE</literal>, the entry calls
<link linkend="gtk-window-activate-default"><function>gtk_window_activate_default()</function></link> on the window containing the entry, in
the default handler for the "activate" signal.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> to activate window's default widget on Enter keypress
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-has-frame"/>gtk_entry_set_has_frame ()</title>
<indexterm><primary>gtk_entry_set_has_frame</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_has_frame         (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
Sets whether the entry has a beveled frame around it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&nbsp;:</term>
<listitem><simpara> new value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-width-chars"/>gtk_entry_set_width_chars ()</title>
<indexterm><primary>gtk_entry_set_width_chars</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_width_chars       (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> n_chars);</programlisting>
<para>
Changes the size request of the entry to be about the right size
for <parameter>n_chars</parameter> characters. Note that it changes the size
<emphasis>request</emphasis>, the size can still be affected by
how you pack the widget into containers. If <parameter>n_chars</parameter> is -1, the
size reverts to the default entry size.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_chars</parameter>&nbsp;:</term>
<listitem><simpara> width in chars
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-invisible-char"/>gtk_entry_get_invisible_char ()</title>
<indexterm><primary>gtk_entry_get_invisible_char</primary></indexterm><programlisting><link linkend="gunichar">gunichar</link>    gtk_entry_get_invisible_char    (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Retrieves the character displayed in place of the real characters
for entries with visisbility set to false. See <link linkend="gtk-entry-set-invisible-char"><function>gtk_entry_set_invisible_char()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the current invisible char, or 0, if the entry does not
              show invisible text at all. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-alignment"/>gtk_entry_set_alignment ()</title>
<indexterm><primary>gtk_entry_set_alignment</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_alignment         (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gfloat">gfloat</link> xalign);</programlisting>
<para>
Sets the alignment for the contents of the entry. This controls
the horizontal positioning of the contents when the displayed
text is shorter than the width of the entry.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xalign</parameter>&nbsp;:</term>
<listitem><simpara> The horizontal alignment, from 0 (left) to 1 (right).
         Reversed for RTL layouts
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-alignment"/>gtk_entry_get_alignment ()</title>
<indexterm><primary>gtk_entry_get_alignment</primary></indexterm><programlisting><link linkend="gfloat">gfloat</link>      gtk_entry_get_alignment         (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Gets the value set by <link linkend="gtk-entry-set-alignment"><function>gtk_entry_set_alignment()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the alignment
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-layout"/>gtk_entry_get_layout ()</title>
<indexterm><primary>gtk_entry_get_layout</primary></indexterm><programlisting><link linkend="PangoLayout">PangoLayout</link>* gtk_entry_get_layout           (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Gets the <link linkend="PangoLayout"><type>PangoLayout</type></link> used to display the entry.
The layout is useful to e.g. convert text positions to
pixel positions, in combination with <link linkend="gtk-entry-get-layout-offsets"><function>gtk_entry_get_layout_offsets()</function></link>.
The returned layout is owned by the entry so need not be
freed by the caller.
</para>
<para>
Keep in mind that the layout text may contain a preedit string, so
<link linkend="gtk-entry-layout-index-to-text-index"><function>gtk_entry_layout_index_to_text_index()</function></link> and
<link linkend="gtk-entry-text-index-to-layout-index"><function>gtk_entry_text_index_to_layout_index()</function></link> are needed to convert byte
indices in the layout to byte indices in the entry contents.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the <link linkend="PangoLayout"><type>PangoLayout</type></link> for this entry
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-layout-offsets"/>gtk_entry_get_layout_offsets ()</title>
<indexterm><primary>gtk_entry_get_layout_offsets</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_get_layout_offsets    (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="gint">gint</link> *x,
                                             <link linkend="gint">gint</link> *y);</programlisting>
<para>
Obtains the position of the <link linkend="PangoLayout"><type>PangoLayout</type></link> used to render text
in the entry, in widget coordinates. Useful if you want to line
up the text in an entry with some other text, e.g. when using the
entry to implement editable cells in a sheet widget.
</para>
<para>
Also useful to convert mouse events into coordinates inside the
<link linkend="PangoLayout"><type>PangoLayout</type></link>, e.g. to take some action if some part of the entry text
is clicked.
</para>
<para>
Note that as the user scrolls around in the entry the offsets will
change; you'll need to connect to the "notify::scroll_offset"
signal to track this. Remember when using the <link linkend="PangoLayout"><type>PangoLayout</type></link>
functions you need to convert to and from pixels using
<link linkend="PANGO-PIXELS-CAPS"><function>PANGO_PIXELS()</function></link> or <link linkend="PANGO-SCALE-CAPS"><type>PANGO_SCALE</type></link>.
</para>
<para>
Keep in mind that the layout text may contain a preedit string, so
<link linkend="gtk-entry-layout-index-to-text-index"><function>gtk_entry_layout_index_to_text_index()</function></link> and
<link linkend="gtk-entry-text-index-to-layout-index"><function>gtk_entry_text_index_to_layout_index()</function></link> are needed to convert byte
indices in the layout to byte indices in the entry contents.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> location to store X offset of layout, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> location to store Y offset of layout, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-max-length"/>gtk_entry_get_max_length ()</title>
<indexterm><primary>gtk_entry_get_max_length</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_entry_get_max_length        (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Retrieves the maximum allowed length of the text in
<parameter>entry</parameter>. See <link linkend="gtk-entry-set-max-length"><function>gtk_entry_set_max_length()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the maximum allowed number of characters
              in <link linkend="GtkEntry"><type>GtkEntry</type></link>, or 0 if there is no maximum.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-visibility"/>gtk_entry_get_visibility ()</title>
<indexterm><primary>gtk_entry_get_visibility</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_entry_get_visibility        (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Retrieves whether the text in <parameter>entry</parameter> is visible. See
<link linkend="gtk-entry-set-visibility"><function>gtk_entry_set_visibility()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkEntry"><type>GtkEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the text is currently visible
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-entry-set-completion"/>gtk_entry_set_completion ()</title>
<indexterm><primary>gtk_entry_set_completion</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_entry_set_completion        (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                             <link linkend="GtkEntryCompletion">GtkEntryCompletion</link> *completion);</programlisting>
<para>
Sets <parameter>completion</parameter> to be the auxiliary completion object to use with <parameter>entry</parameter>.
All further configuration of the completion mechanism is done on
<parameter>completion</parameter> using the <link linkend="GtkEntryCompletion"><type>GtkEntryCompletion</type></link> API.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>completion</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkEntryCompletion"><type>GtkEntryCompletion</type></link>.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-entry-get-completion"/>gtk_entry_get_completion ()</title>
<indexterm><primary>gtk_entry_get_completion</primary></indexterm><programlisting><link linkend="GtkEntryCompletion">GtkEntryCompletion</link>* gtk_entry_get_completion
                                            (<link linkend="GtkEntry">GtkEntry</link> *entry);</programlisting>
<para>
Returns the auxiliary completion object currently in use by <parameter>entry</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkEntry"><type>GtkEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The auxiliary completion object currently in use by <parameter>entry</parameter>.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkEntry--activates-default"/>&quot;<literal>activates-default</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Whether to activate the default widget (such as the default button in a dialog) when Enter is pressed.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--cursor-position"/>&quot;<literal>cursor-position</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>The current position of the insertion cursor in chars.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--editable"/>&quot;<literal>editable</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Whether the entry contents can be edited.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--has-frame"/>&quot;<literal>has-frame</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>FALSE removes outside bevel from entry.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--invisible-char"/>&quot;<literal>invisible-char</literal>&quot; (<link linkend="guint">guint</link> : Read / Write)</term>
<listitem>
<para>The character to use when masking entry contents (in "password mode").</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--max-length"/>&quot;<literal>max-length</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>Maximum number of characters for this entry. Zero if no maximum.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--scroll-offset"/>&quot;<literal>scroll-offset</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Number of pixels of the entry scrolled off the screen to the left.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--selection-bound"/>&quot;<literal>selection-bound</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>The position of the opposite end of the selection from the cursor in chars.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--text"/>&quot;<literal>text</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>The contents of the entry.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--visibility"/>&quot;<literal>visibility</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>FALSE displays the "invisible char" instead of the actual text (password mode).</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--width-chars"/>&quot;<literal>width-chars</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>Number of characters to leave space for in the entry.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkEntry--xalign"/>&quot;<literal>xalign</literal>&quot; (<link linkend="gfloat">gfloat</link> : Read / Write)</term>
<listitem>
<para>The horizontal alignment, from 0 (left) to 1 (right). Reversed for RTL layouts.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GtkEntry-activate"/>The &quot;activate&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-copy-clipboard"/>The &quot;copy-clipboard&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-cut-clipboard"/>The &quot;cut-clipboard&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-delete-from-cursor"/>The &quot;delete-from-cursor&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="GtkDeleteType">GtkDeleteType</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-insert-at-cursor"/>The &quot;insert-at-cursor&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gchar">gchar</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-move-cursor"/>The &quot;move-cursor&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="GtkMovementStep">GtkMovementStep</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gboolean">gboolean</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-paste-clipboard"/>The &quot;paste-clipboard&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-populate-popup"/>The &quot;populate-popup&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="GtkMenu">GtkMenu</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkEntry-toggle-overwrite"/>The &quot;toggle-overwrite&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkEntry">GtkEntry</link> *entry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<variablelist>

<varlistentry>
<term><link linkend="GtkText"><type>GtkText</type></link></term>
<listitem><para>a widget for handling multi-line text entry.</para></listitem>
</varlistentry>

</variablelist>
</para>
</refsect1>

</refentry>
