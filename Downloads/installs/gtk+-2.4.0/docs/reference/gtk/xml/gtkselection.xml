<refentry id="gtk-Selections">
<refmeta>
<refentrytitle>Selections</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Selections</refname><refpurpose>Functions for handling inter-process communication via selections</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkTargetEntry">GtkTargetEntry</link>;
struct      <link linkend="GtkTargetList">GtkTargetList</link>;
struct      <link linkend="GtkTargetPair">GtkTargetPair</link>;
<link linkend="GtkTargetList">GtkTargetList</link>* <link linkend="gtk-target-list-new">gtk_target_list_new</link>          (const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="guint">guint</link> ntargets);
<link linkend="void">void</link>        <link linkend="gtk-target-list-ref">gtk_target_list_ref</link>             (<link linkend="GtkTargetList">GtkTargetList</link> *list);
<link linkend="void">void</link>        <link linkend="gtk-target-list-unref">gtk_target_list_unref</link>           (<link linkend="GtkTargetList">GtkTargetList</link> *list);
<link linkend="void">void</link>        <link linkend="gtk-target-list-add">gtk_target_list_add</link>             (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint">guint</link> flags,
                                             <link linkend="guint">guint</link> info);
<link linkend="void">void</link>        <link linkend="gtk-target-list-add-table">gtk_target_list_add_table</link>       (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="guint">guint</link> ntargets);
<link linkend="void">void</link>        <link linkend="gtk-target-list-remove">gtk_target_list_remove</link>          (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             <link linkend="GdkAtom">GdkAtom</link> target);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-target-list-find">gtk_target_list_find</link>            (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint">guint</link> *info);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-owner-set">gtk_selection_owner_set</link>         (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="guint32">guint32</link> time_);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-owner-set-for-display">gtk_selection_owner_set_for_display</link>
                                            (<link linkend="GdkDisplay">GdkDisplay</link> *display,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="guint32">guint32</link> time_);
<link linkend="void">void</link>        <link linkend="gtk-selection-add-target">gtk_selection_add_target</link>        (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint">guint</link> info);
<link linkend="void">void</link>        <link linkend="gtk-selection-add-targets">gtk_selection_add_targets</link>       (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="guint">guint</link> ntargets);
<link linkend="void">void</link>        <link linkend="gtk-selection-clear-targets">gtk_selection_clear_targets</link>     (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-convert">gtk_selection_convert</link>           (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint32">guint32</link> time_);
<link linkend="void">void</link>        <link linkend="gtk-selection-data-set">gtk_selection_data_set</link>          (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data,
                                             <link linkend="GdkAtom">GdkAtom</link> type,
                                             <link linkend="gint">gint</link> format,
                                             const <link linkend="guchar">guchar</link> *data,
                                             <link linkend="gint">gint</link> length);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-data-set-text">gtk_selection_data_set_text</link>     (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data,
                                             const <link linkend="gchar">gchar</link> *str,
                                             <link linkend="gint">gint</link> len);
<link linkend="guchar">guchar</link>*     <link linkend="gtk-selection-data-get-text">gtk_selection_data_get_text</link>     (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-data-get-targets">gtk_selection_data_get_targets</link>  (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data,
                                             <link linkend="GdkAtom">GdkAtom</link> **targets,
                                             <link linkend="gint">gint</link> *n_atoms);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-data-targets-include-text">gtk_selection_data_targets_include_text</link>
                                            (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data);
<link linkend="void">void</link>        <link linkend="gtk-selection-remove-all">gtk_selection_remove_all</link>        (<link linkend="GtkWidget">GtkWidget</link> *widget);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-selection-clear">gtk_selection_clear</link>             (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkEventSelection">GdkEventSelection</link> *event);
<link linkend="GtkSelectionData">GtkSelectionData</link>* <link linkend="gtk-selection-data-copy">gtk_selection_data_copy</link>   (<link linkend="GtkSelectionData">GtkSelectionData</link> *data);
<link linkend="void">void</link>        <link linkend="gtk-selection-data-free">gtk_selection_data_free</link>         (<link linkend="GtkSelectionData">GtkSelectionData</link> *data);


</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>

<para>
The selection mechanism provides the basis for different types
of communication between processes. In particular, drag and drop and
<link linkend="GtkClipboard"><type>GtkClipboard</type></link> work via selections. You will very seldom or
never need to use most of the functions in this section directly;
<link linkend="GtkClipboard"><type>GtkClipboard</type></link> provides a nicer interface to the same functionality.
</para>
<para>
Some of the datatypes defined this section are used in
the <link linkend="GtkClipboard"><type>GtkClipboard</type></link> and drag-and-drop API's as well. The
<link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link> structure and <link linkend="GtkTargetList"><type>GtkTargetList</type></link> objects represent
lists of data types that are supported when sending or
receiving data. The <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> object is used to
store a chunk of data along with the data type and other
associated information.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkTargetEntry"/>struct GtkTargetEntry</title>
<indexterm><primary>GtkTargetEntry</primary></indexterm><programlisting>struct GtkTargetEntry {

  gchar *target;
  guint  flags;
  guint  info;
};
</programlisting>
<para>
A <link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link> structure represents a single type of
data than can be supplied for by a widget for a selection
or for supplied or received during drag-and-drop. It 
contains a string representing the drag type, a flags
field (used only for drag and drop - see <link linkend="GtkTargetFlags"><type>GtkTargetFlags</type></link>),
and an application assigned integer ID. The integer
ID will later be passed as a signal parameter for signals
like "selection_get". It allows the application to identify
the target type without extensive string compares.
</para></refsect2>
<refsect2>
<title><anchor id="GtkTargetList"/>struct GtkTargetList</title>
<indexterm><primary>GtkTargetList</primary></indexterm><programlisting>struct GtkTargetList {

  GList *list;
  guint ref_count;
};
</programlisting>
<para>
A <link linkend="GtkTargetList"><type>GtkTargetList</type></link> structure is a reference counted list
of <link linkend="GtkTargetPair"><type>GtkTargetPair</type></link>. It is used to represent the same
information as a table of <link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link>, but in
an efficient form. This structure should be treated as
opaque.
</para></refsect2>
<refsect2>
<title><anchor id="GtkTargetPair"/>struct GtkTargetPair</title>
<indexterm><primary>GtkTargetPair</primary></indexterm><programlisting>struct GtkTargetPair {

  GdkAtom   target;
  guint     flags;
  guint     info;
};
</programlisting>
<para>
Internally used structure in the drag-and-drop and 
selection handling code.
</para></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-new"/>gtk_target_list_new ()</title>
<indexterm><primary>gtk_target_list_new</primary></indexterm><programlisting><link linkend="GtkTargetList">GtkTargetList</link>* gtk_target_list_new          (const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="guint">guint</link> ntargets);</programlisting>
<para>
Creates a new <link linkend="GtkTargetList"><type>GtkTargetList</type></link> from an array of <link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara>Pointer to an array of <link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ntargets</parameter>&nbsp;:</term>
<listitem><simpara>number of entries in <parameter>targets</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the new <link linkend="GtkTargetList"><type>GtkTargetList</type></link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-ref"/>gtk_target_list_ref ()</title>
<indexterm><primary>gtk_target_list_ref</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_target_list_ref             (<link linkend="GtkTargetList">GtkTargetList</link> *list);</programlisting>
<para>
Increases the reference count of a <link linkend="GtkTargetList"><type>GtkTargetList</type></link> by one.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-unref"/>gtk_target_list_unref ()</title>
<indexterm><primary>gtk_target_list_unref</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_target_list_unref           (<link linkend="GtkTargetList">GtkTargetList</link> *list);</programlisting>
<para>
Decreases the reference count of a <link linkend="GtkTargetList"><type>GtkTargetList</type></link> by one.
If the resulting reference count is zero, frees the list.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-add"/>gtk_target_list_add ()</title>
<indexterm><primary>gtk_target_list_add</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_target_list_add             (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint">guint</link> flags,
                                             <link linkend="guint">guint</link> info);</programlisting>
<para>
Adds another target to a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara>the interned atom representing the target
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>the flags for this target
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&nbsp;:</term>
<listitem><simpara>an ID that will be passed back to the application


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-add-table"/>gtk_target_list_add_table ()</title>
<indexterm><primary>gtk_target_list_add_table</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_target_list_add_table       (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="guint">guint</link> ntargets);</programlisting>
<para>
Adds a table of <link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link> into a target list.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara>the table of <link linkend="GtkTargetEntry"><type>GtkTargetEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ntargets</parameter>&nbsp;:</term>
<listitem><simpara>number of targets in the table


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-remove"/>gtk_target_list_remove ()</title>
<indexterm><primary>gtk_target_list_remove</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_target_list_remove          (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             <link linkend="GdkAtom">GdkAtom</link> target);</programlisting>
<para>
Removes a target from a target list.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara>the interned atom representing the target


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-target-list-find"/>gtk_target_list_find ()</title>
<indexterm><primary>gtk_target_list_find</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_target_list_find            (<link linkend="GtkTargetList">GtkTargetList</link> *list,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint">guint</link> *info);</programlisting>
<para>
Looks up a given target in a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTargetList"><type>GtkTargetList</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara>an interned atom representing the target to search for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to the location to store application info for target
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the target was found, otherwise <literal>FALSE</literal>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-owner-set"/>gtk_selection_owner_set ()</title>
<indexterm><primary>gtk_selection_owner_set</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_owner_set         (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="guint32">guint32</link> time_);</programlisting>
<para>
Claims ownership of a given selection for a particular widget,
or, if <parameter>widget</parameter> is <literal>NULL</literal>, release ownership of the selection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="GtkWidget"><type>GtkWidget</type></link>, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara>  an interned atom representing the selection to claim
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time_</parameter>&nbsp;:</term>
<listitem><simpara> timestamp with which to claim the selection
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the operation succeeded
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-owner-set-for-display"/>gtk_selection_owner_set_for_display ()</title>
<indexterm><primary>gtk_selection_owner_set_for_display</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_owner_set_for_display
                                            (<link linkend="GdkDisplay">GdkDisplay</link> *display,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="guint32">guint32</link> time_);</programlisting>
<para>
Claim ownership of a given selection for a particular widget, or,
if <parameter>widget</parameter> is <literal>NULL</literal>, release ownership of the selection.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="Gdkdisplay"><type>Gdkdisplay</type></link> where the selection is set 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> new selection owner (a <link linkend="GdkWidget"><type>GdkWidget</type></link>), or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> an interned atom representing the selection to claim.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time_</parameter>&nbsp;:</term>
<listitem><simpara> timestamp with which to claim the selection
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the operation succeeded 

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gtk-selection-add-target"/>gtk_selection_add_target ()</title>
<indexterm><primary>gtk_selection_add_target</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_selection_add_target        (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint">guint</link> info);</programlisting>
<para>
Adds specified target to the list of supported targets for a 
given widget and selection.
</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTarget"><type>GtkTarget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara>the selection
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara>target to add.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&nbsp;:</term>
<listitem><simpara>A unsigned integer which will be passed back to the application.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-add-targets"/>gtk_selection_add_targets ()</title>
<indexterm><primary>gtk_selection_add_targets</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_selection_add_targets       (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="guint">guint</link> ntargets);</programlisting>
<para>
Adds a table of targets to the list of supported targets
for a given widget and selection.
</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkWidget"><type>GtkWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara>the selection
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara>a table of targets to add
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ntargets</parameter>&nbsp;:</term>
<listitem><simpara>number of entries in <parameter>targets</parameter>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-clear-targets"/>gtk_selection_clear_targets ()</title>
<indexterm><primary>gtk_selection_clear_targets</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_selection_clear_targets     (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection);</programlisting>
<para>
Remove all targets registered for the given selection for the
widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>    a <link linkend="GtkWidget"><type>GtkWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara> an atom representing a selection
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-convert"/>gtk_selection_convert ()</title>
<indexterm><primary>gtk_selection_convert</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_convert           (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkAtom">GdkAtom</link> selection,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint32">guint32</link> time_);</programlisting>
<para>
Requests the contents of a selection. When received, 
a "selection_received" signal will be generated.
</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>The widget which acts as requestor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selection</parameter>&nbsp;:</term>
<listitem><simpara>Which selection to get
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara>Form of information desired (e.g., STRING)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time_</parameter>&nbsp;:</term>
<listitem><simpara>Time of request (usually of triggering event)
       In emergency, you could use <link linkend="GDK-CURRENT-TIME-CAPS"><type>GDK_CURRENT_TIME</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if requested succeeded. <literal>FALSE</literal> if we could not process
          request. (e.g., there was already a request in process for
          this widget).


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-set"/>gtk_selection_data_set ()</title>
<indexterm><primary>gtk_selection_data_set</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_selection_data_set          (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data,
                                             <link linkend="GdkAtom">GdkAtom</link> type,
                                             <link linkend="gint">gint</link> format,
                                             const <link linkend="guchar">guchar</link> *data,
                                             <link linkend="gint">gint</link> length);</programlisting>
<para>
Stores new data into a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> object. Should
<emphasis>only</emphasis> be called from a selection handler callback.
Zero-terminates the stored data.
</para><variablelist role="params">
<varlistentry><term><parameter>selection_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>the type of selection data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>format (number of bits in a unit)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>pointer to the data (will be copied)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&nbsp;:</term>
<listitem><simpara>length of the data


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-set-text"/>gtk_selection_data_set_text ()</title>
<indexterm><primary>gtk_selection_data_set_text</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_data_set_text     (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data,
                                             const <link linkend="gchar">gchar</link> *str,
                                             <link linkend="gint">gint</link> len);</programlisting>
<para>
Sets the contents of the selection from a UTF-8 encoded string.
The string is converted to the form determined by
<parameter>selection_data->target</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection_data</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara> a UTF-8 string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> the length of <parameter>str</parameter>, or -1 if <parameter>str</parameter> is nul-terminated.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the selection was successfully set,
  otherwise <literal>FALSE</literal>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-get-text"/>gtk_selection_data_get_text ()</title>
<indexterm><primary>gtk_selection_data_get_text</primary></indexterm><programlisting><link linkend="guchar">guchar</link>*     gtk_selection_data_get_text     (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data);</programlisting>
<para>
Gets the contents of the selection data as a UTF-8 string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection_data</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> if the selection data contained a recognized
  text type and it could be converted to UTF-8, a newly allocated
  string containing the converted text, otherwise <literal>NULL</literal>.
  If the result is non-<literal>NULL</literal> it must be freed with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-get-targets"/>gtk_selection_data_get_targets ()</title>
<indexterm><primary>gtk_selection_data_get_targets</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_data_get_targets  (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data,
                                             <link linkend="GdkAtom">GdkAtom</link> **targets,
                                             <link linkend="gint">gint</link> *n_atoms);</programlisting>
<para>
Gets the contents of <parameter>selection_data</parameter> as an array of targets.
This can be used to interpret the results of getting
the standard TARGETS target that is always supplied for
any selection.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection_data</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara> location to store an array of targets. The result
          stored here must be freed with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_atoms</parameter>&nbsp;:</term>
<listitem><simpara> location to store number of items in <parameter>targets</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if <parameter>selection_data</parameter> contains a valid
   array of targets, otherwise <literal>FALSE</literal>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-targets-include-text"/>gtk_selection_data_targets_include_text ()</title>
<indexterm><primary>gtk_selection_data_targets_include_text</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_data_targets_include_text
                                            (<link linkend="GtkSelectionData">GtkSelectionData</link> *selection_data);</programlisting>
<para>
Given a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> object holding a list of targets,
determines if any of the targets in <parameter>targets</parameter> can be used to
provide text.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>selection_data</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if <parameter>selection_data</parameter> holds a list of targets,
  and a suitable target for text is included, otherwise <literal>FALSE</literal>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-remove-all"/>gtk_selection_remove_all ()</title>
<indexterm><primary>gtk_selection_remove_all</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_selection_remove_all        (<link linkend="GtkWidget">GtkWidget</link> *widget);</programlisting>
<para>
Removes all handlers and unsets ownership of all 
selections for a widget. Called when widget is being
destroyed. This function will not generally be
called by applications.
</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkWidget"><type>GtkWidget</type></link>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-clear"/>gtk_selection_clear ()</title>
<indexterm><primary>gtk_selection_clear</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_selection_clear             (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkEventSelection">GdkEventSelection</link> *event);</programlisting>
<warning><para><literal>gtk_selection_clear</literal> is deprecated and should not be used in newly-written code. Instead of calling this function, chain up from
your selection_clear_event handler. Calling this function
from any other context is illegal.</para></warning>
<para>
The default handler for the GtkWidget::selection_clear_event
signal.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the event was handled, otherwise false

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2

</para></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-copy"/>gtk_selection_data_copy ()</title>
<indexterm><primary>gtk_selection_data_copy</primary></indexterm><programlisting><link linkend="GtkSelectionData">GtkSelectionData</link>* gtk_selection_data_copy   (<link linkend="GtkSelectionData">GtkSelectionData</link> *data);</programlisting>
<para>
Makes a copy of a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> structure and its data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> structure.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a pointer to a copy of <parameter>data</parameter>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-selection-data-free"/>gtk_selection_data_free ()</title>
<indexterm><primary>gtk_selection_data_free</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_selection_data_free         (<link linkend="GtkSelectionData">GtkSelectionData</link> *data);</programlisting>
<para>
Frees a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> structure returned from
<link linkend="gtk-selection-data-copy"><function>gtk_selection_data_copy()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to a <link linkend="GtkSelectionData"><type>GtkSelectionData</type></link> structure.


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
<variablelist>

<varlistentry>
<term><link linkend="GtkWidget"><type>GtkWidget</type></link></term>
<listitem><para>Much of the operation of selections happens via
             signals for <link linkend="GtkWidget"><type>GtkWidget</type></link>. In particular, if you are
             using the functions in this section, you may need
             to pay attention to ::selection_get,
             ::selection_received,  and :selection_clear_event
             signals.</para></listitem>
</varlistentry>

</variablelist>

</para>
</refsect1>

</refentry>
