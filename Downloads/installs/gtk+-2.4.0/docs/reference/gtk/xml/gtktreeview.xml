<refentry id="GtkTreeView">
<refmeta>
<refentrytitle>GtkTreeView</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkTreeView</refname><refpurpose>A widget for displaying both trees and lists.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkTreeView-struct">GtkTreeView</link>;
enum        <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link>;
struct      <link linkend="GtkTreeViewPrivate">GtkTreeViewPrivate</link>;
<link linkend="gboolean">gboolean</link>    (<link linkend="GtkTreeViewColumnDropFunc">*GtkTreeViewColumnDropFunc</link>)    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *prev_column,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *next_column,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="void">void</link>        (<link linkend="GtkTreeViewMappingFunc">*GtkTreeViewMappingFunc</link>)       (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>    (<link linkend="GtkTreeViewSearchEqualFunc">*GtkTreeViewSearchEqualFunc</link>)   (<link linkend="GtkTreeModel">GtkTreeModel</link> *model,
                                             <link linkend="gint">gint</link> column,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GtkTreeIter">GtkTreeIter</link> *iter,
                                             <link linkend="gpointer">gpointer</link> search_data);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-tree-view-new">gtk_tree_view_new</link>               (void);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-tree-view-new-with-model">gtk_tree_view_new_with_model</link>    (<link linkend="GtkTreeModel">GtkTreeModel</link> *model);
<link linkend="GtkTreeModel">GtkTreeModel</link>* <link linkend="gtk-tree-view-get-model">gtk_tree_view_get_model</link>       (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-model">gtk_tree_view_set_model</link>         (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeModel">GtkTreeModel</link> *model);
<link linkend="GtkTreeSelection">GtkTreeSelection</link>* <link linkend="gtk-tree-view-get-selection">gtk_tree_view_get_selection</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="GtkAdjustment">GtkAdjustment</link>* <link linkend="gtk-tree-view-get-hadjustment">gtk_tree_view_get_hadjustment</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-hadjustment">gtk_tree_view_set_hadjustment</link>   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *adjustment);
<link linkend="GtkAdjustment">GtkAdjustment</link>* <link linkend="gtk-tree-view-get-vadjustment">gtk_tree_view_get_vadjustment</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-vadjustment">gtk_tree_view_set_vadjustment</link>   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *adjustment);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-get-headers-visible">gtk_tree_view_get_headers_visible</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-headers-visible">gtk_tree_view_set_headers_visible</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> headers_visible);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-columns-autosize">gtk_tree_view_columns_autosize</link>  (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-headers-clickable">gtk_tree_view_set_headers_clickable</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> setting);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-rules-hint">gtk_tree_view_set_rules_hint</link>    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> setting);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-get-rules-hint">gtk_tree_view_get_rules_hint</link>    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="gint">gint</link>        <link linkend="gtk-tree-view-append-column">gtk_tree_view_append_column</link>     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);
<link linkend="gint">gint</link>        <link linkend="gtk-tree-view-remove-column">gtk_tree_view_remove_column</link>     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);
<link linkend="gint">gint</link>        <link linkend="gtk-tree-view-insert-column">gtk_tree_view_insert_column</link>     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="gint">gint</link> position);
<link linkend="gint">gint</link>        <link linkend="gtk-tree-view-insert-column-with-attributes">gtk_tree_view_insert_column_with_attributes</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> position,
                                             const <link linkend="gchar">gchar</link> *title,
                                             <link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             ...);
<link linkend="gint">gint</link>        <link linkend="gtk-tree-view-insert-column-with-data-func">gtk_tree_view_insert_column_with_data_func</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> position,
                                             const <link linkend="gchar">gchar</link> *title,
                                             <link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GtkTreeCellDataFunc">GtkTreeCellDataFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> dnotify);
<link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link>* <link linkend="gtk-tree-view-get-column">gtk_tree_view_get_column</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> n);
<link linkend="GList">GList</link>*      <link linkend="gtk-tree-view-get-columns">gtk_tree_view_get_columns</link>       (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-move-column-after">gtk_tree_view_move_column_after</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *base_column);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-expander-column">gtk_tree_view_set_expander_column</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);
<link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link>* <link linkend="gtk-tree-view-get-expander-column">gtk_tree_view_get_expander_column</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-column-drag-function">gtk_tree_view_set_column_drag_function</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumnDropFunc">GtkTreeViewColumnDropFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="GtkDestroyNotify">GtkDestroyNotify</link> destroy);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-scroll-to-point">gtk_tree_view_scroll_to_point</link>   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> tree_x,
                                             <link linkend="gint">gint</link> tree_y);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-scroll-to-cell">gtk_tree_view_scroll_to_cell</link>    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="gboolean">gboolean</link> use_align,
                                             <link linkend="gfloat">gfloat</link> row_align,
                                             <link linkend="gfloat">gfloat</link> col_align);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-cursor">gtk_tree_view_set_cursor</link>        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *focus_column,
                                             <link linkend="gboolean">gboolean</link> start_editing);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-cursor-on-cell">gtk_tree_view_set_cursor_on_cell</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *focus_column,
                                             <link linkend="GtkCellRenderer">GtkCellRenderer</link> *focus_cell,
                                             <link linkend="gboolean">gboolean</link> start_editing);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-get-cursor">gtk_tree_view_get_cursor</link>        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> **focus_column);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-row-activated">gtk_tree_view_row_activated</link>     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-expand-all">gtk_tree_view_expand_all</link>        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-collapse-all">gtk_tree_view_collapse_all</link>      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-expand-to-path">gtk_tree_view_expand_to_path</link>    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-expand-row">gtk_tree_view_expand_row</link>        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="gboolean">gboolean</link> open_all);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-collapse-row">gtk_tree_view_collapse_row</link>      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-map-expanded-rows">gtk_tree_view_map_expanded_rows</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewMappingFunc">GtkTreeViewMappingFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-row-expanded">gtk_tree_view_row_expanded</link>      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-reorderable">gtk_tree_view_set_reorderable</link>   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> reorderable);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-get-reorderable">gtk_tree_view_get_reorderable</link>   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-get-path-at-pos">gtk_tree_view_get_path_at_pos</link>   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> **column,
                                             <link linkend="gint">gint</link> *cell_x,
                                             <link linkend="gint">gint</link> *cell_y);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-get-cell-area">gtk_tree_view_get_cell_area</link>     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-get-background-area">gtk_tree_view_get_background_area</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-get-visible-rect">gtk_tree_view_get_visible_rect</link>  (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *visible_rect);
<link linkend="GdkWindow">GdkWindow</link>*  <link linkend="gtk-tree-view-get-bin-window">gtk_tree_view_get_bin_window</link>    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-widget-to-tree-coords">gtk_tree_view_widget_to_tree_coords</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> wx,
                                             <link linkend="gint">gint</link> wy,
                                             <link linkend="gint">gint</link> *tx,
                                             <link linkend="gint">gint</link> *ty);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-tree-to-widget-coords">gtk_tree_view_tree_to_widget_coords</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> tx,
                                             <link linkend="gint">gint</link> ty,
                                             <link linkend="gint">gint</link> *wx,
                                             <link linkend="gint">gint</link> *wy);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-enable-model-drag-dest">gtk_tree_view_enable_model_drag_dest</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-enable-model-drag-source">gtk_tree_view_enable_model_drag_source</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GdkModifierType">GdkModifierType</link> start_button_mask,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-unset-rows-drag-source">gtk_tree_view_unset_rows_drag_source</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-unset-rows-drag-dest">gtk_tree_view_unset_rows_drag_dest</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-drag-dest-row">gtk_tree_view_set_drag_dest_row</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link> pos);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-get-drag-dest-row">gtk_tree_view_get_drag_dest_row</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link> *pos);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-get-dest-row-at-pos">gtk_tree_view_get_dest_row_at_pos</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> drag_x,
                                             <link linkend="gint">gint</link> drag_y,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link> *pos);
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gtk-tree-view-create-row-drag-icon">gtk_tree_view_create_row_drag_icon</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-enable-search">gtk_tree_view_set_enable_search</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> enable_search);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-tree-view-get-enable-search">gtk_tree_view_get_enable_search</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="gint">gint</link>        <link linkend="gtk-tree-view-get-search-column">gtk_tree_view_get_search_column</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-search-column">gtk_tree_view_set_search_column</link> (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> column);
<link linkend="GtkTreeViewSearchEqualFunc">GtkTreeViewSearchEqualFunc</link> <link linkend="gtk-tree-view-get-search-equal-func">gtk_tree_view_get_search_equal_func</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-search-equal-func">gtk_tree_view_set_search_equal_func</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewSearchEqualFunc">GtkTreeViewSearchEqualFunc</link> search_equal_func,
                                             <link linkend="gpointer">gpointer</link> search_user_data,
                                             <link linkend="GtkDestroyNotify">GtkDestroyNotify</link> search_destroy);
<link linkend="void">void</link>        (<link linkend="GtkTreeDestroyCountFunc">*GtkTreeDestroyCountFunc</link>)      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="gint">gint</link> children,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>        <link linkend="gtk-tree-view-set-destroy-count-func">gtk_tree_view_set_destroy_count_func</link>
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeDestroyCountFunc">GtkTreeDestroyCountFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GtkDestroyNotify">GtkDestroyNotify</link> destroy);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----GtkTreeView
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GtkTreeView implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkTreeView--enable-search">enable-search</link>&quot;        <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkTreeView--expander-column">expander-column</link>&quot;      <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link>    : Read / Write
  &quot;<link linkend="GtkTreeView--fixed-height-mode">fixed-height-mode</link>&quot;    <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkTreeView--hadjustment">hadjustment</link>&quot;          <link linkend="GtkAdjustment">GtkAdjustment</link>        : Read / Write
  &quot;<link linkend="GtkTreeView--headers-clickable">headers-clickable</link>&quot;    <link linkend="gboolean">gboolean</link>             : Write
  &quot;<link linkend="GtkTreeView--headers-visible">headers-visible</link>&quot;      <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkTreeView--model">model</link>&quot;                <link linkend="GtkTreeModel">GtkTreeModel</link>         : Read / Write
  &quot;<link linkend="GtkTreeView--reorderable">reorderable</link>&quot;          <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkTreeView--rules-hint">rules-hint</link>&quot;           <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkTreeView--search-column">search-column</link>&quot;        <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkTreeView--vadjustment">vadjustment</link>&quot;          <link linkend="GtkAdjustment">GtkAdjustment</link>        : Read / Write
</synopsis>
</refsect1>
<refsect1>
<title>Style Properties</title>
<synopsis>

  &quot;<link linkend="GtkTreeView--allow-rules">allow-rules</link>&quot;          <link linkend="gboolean">gboolean</link>             : Read
  &quot;<link linkend="GtkTreeView--even-row-color">even-row-color</link>&quot;       <link linkend="GdkColor">GdkColor</link>             : Read
  &quot;<link linkend="GtkTreeView--expander-size">expander-size</link>&quot;        <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkTreeView--horizontal-separator">horizontal-separator</link>&quot; <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkTreeView--indent-expanders">indent-expanders</link>&quot;     <link linkend="gboolean">gboolean</link>             : Read
  &quot;<link linkend="GtkTreeView--odd-row-color">odd-row-color</link>&quot;        <link linkend="GdkColor">GdkColor</link>             : Read
  &quot;<link linkend="GtkTreeView--vertical-separator">vertical-separator</link>&quot;   <link linkend="gint">gint</link>                 : Read
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GtkTreeView-columns-changed">columns-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-cursor-changed">cursor-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-expand-collapse-cursor-row">expand-collapse-cursor-row</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gboolean">gboolean</link> arg1,
                                            <link linkend="gboolean">gboolean</link> arg2,
                                            <link linkend="gboolean">gboolean</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-move-cursor">move-cursor</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkMovementStep">GtkMovementStep</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-row-activated">row-activated</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg1,
                                            <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-row-collapsed">row-collapsed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-row-expanded">row-expanded</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-select-all">select-all</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-select-cursor-parent">select-cursor-parent</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-select-cursor-row">select-cursor-row</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gboolean">gboolean</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-set-scroll-adjustments">set-scroll-adjustments</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg1,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-start-interactive-search">start-interactive-search</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-test-collapse-row">test-collapse-row</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-test-expand-row">test-expand-row</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-toggle-cursor-row">toggle-cursor-row</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkTreeView-unselect-all">unselect-all</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
Widget that displays any object that implements the <link
linkend="GtkTreeModel">GtkTreeModel</link> interface.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkTreeView-struct"/>struct GtkTreeView</title>
<indexterm><primary>GtkTreeView</primary></indexterm><programlisting>struct GtkTreeView;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkTreeViewDropPosition"/>enum GtkTreeViewDropPosition</title>
<indexterm><primary>GtkTreeViewDropPosition</primary></indexterm><programlisting>typedef enum
{
  /* drop before/after this row */
  GTK_TREE_VIEW_DROP_BEFORE,
  GTK_TREE_VIEW_DROP_AFTER,
  /* drop as a child of this row (with fallback to before or after
   * if into is not possible)
   */
  GTK_TREE_VIEW_DROP_INTO_OR_BEFORE,
  GTK_TREE_VIEW_DROP_INTO_OR_AFTER
} GtkTreeViewDropPosition;
</programlisting>
<para>
An enum for determining where a dropped row goes.
</para></refsect2>
<refsect2>
<title><anchor id="GtkTreeViewPrivate"/>struct GtkTreeViewPrivate</title>
<indexterm><primary>GtkTreeViewPrivate</primary></indexterm><programlisting>struct GtkTreeViewPrivate;</programlisting>
<para>
A private struct for internal use only.  The definition of this
structure is not publically available.
</para></refsect2>
<refsect2>
<title><anchor id="GtkTreeViewColumnDropFunc"/>GtkTreeViewColumnDropFunc ()</title>
<indexterm><primary>GtkTreeViewColumnDropFunc</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    (*GtkTreeViewColumnDropFunc)    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *prev_column,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *next_column,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Function type for determining whether <parameter>column</parameter> can be dropped in a
particular spot (as determined by <parameter>prev_column</parameter> and <parameter>next_column</parameter>).  In
left to right locales, <parameter>prev_column</parameter> is on the left of the potential drop
spot, and <parameter>next_column</parameter> is on the right.  In right to left mode, this is
reversed.  This function should return <literal>TRUE</literal> if the spot is a valid drop
spot.  Please note that returning <literal>TRUE</literal> does not actually indicate that
the column drop was made, but is meant only to indicate a possible drop
spot to the user.
</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara>A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara>The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> being dragged
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prev_column</parameter>&nbsp;:</term>
<listitem><simpara>A <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> on one side of <parameter>column</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>next_column</parameter>&nbsp;:</term>
<listitem><simpara>A <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> on the other side of <parameter>column</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>user data
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal>, if <link linkend="column"><type>column</type></link> can be dropped in this spot


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkTreeViewMappingFunc"/>GtkTreeViewMappingFunc ()</title>
<indexterm><primary>GtkTreeViewMappingFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*GtkTreeViewMappingFunc)       (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Function used for <link linkend="gtk-tree-view-map-expanded-rows"><type>gtk_tree_view_map_expanded_rows</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara>A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>The path that's expanded
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkTreeViewSearchEqualFunc"/>GtkTreeViewSearchEqualFunc ()</title>
<indexterm><primary>GtkTreeViewSearchEqualFunc</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    (*GtkTreeViewSearchEqualFunc)   (<link linkend="GtkTreeModel">GtkTreeModel</link> *model,
                                             <link linkend="gint">gint</link> column,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GtkTreeIter">GtkTreeIter</link> *iter,
                                             <link linkend="gpointer">gpointer</link> search_data);</programlisting>
<para>
A function used for checking whether a row in <parameter>model</parameter> matches
a search key string entered by the user. Note the return value
is reversed from what you would normally expect, though it
has some similarity to <link linkend="strcmp"><function>strcmp()</function></link> returning 0 for equal strings.
</para><variablelist role="params">
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkTreeModel"><type>GtkTreeModel</type></link> being searched
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara>the search column set by <link linkend="gtk-tree-view-set-search-column"><function>gtk_tree_view_set_search_column()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>the key string to compare with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iter</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkTreeIter"><type>GtkTreeIter</type></link> pointing the row of <parameter>model</parameter> that should be compared
  with <parameter>key</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>search_data</parameter>&nbsp;:</term>
<listitem><simpara>user data from <link linkend="gtk-tree-view-set-search-equal-func"><function>gtk_tree_view_set_search_equal_func()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>FALSE</literal> if the row matches, <literal>TRUE</literal> otherwise.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-new"/>gtk_tree_view_new ()</title>
<indexterm><primary>gtk_tree_view_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_tree_view_new               (void);</programlisting>
<para>
Creates a new <link linkend="GtkTreeView"><type>GtkTreeView</type></link> widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly created <link linkend="GtkTreeView"><type>GtkTreeView</type></link> widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-new-with-model"/>gtk_tree_view_new_with_model ()</title>
<indexterm><primary>gtk_tree_view_new_with_model</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_tree_view_new_with_model    (<link linkend="GtkTreeModel">GtkTreeModel</link> *model);</programlisting>
<para>
Creates a new <link linkend="GtkTreeView"><type>GtkTreeView</type></link> widget with the model initialized to <parameter>model</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> the model.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly created <link linkend="GtkTreeView"><type>GtkTreeView</type></link> widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-model"/>gtk_tree_view_get_model ()</title>
<indexterm><primary>gtk_tree_view_get_model</primary></indexterm><programlisting><link linkend="GtkTreeModel">GtkTreeModel</link>* gtk_tree_view_get_model       (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns the model the the <link linkend="GtkTreeView"><type>GtkTreeView</type></link> is based on.  Returns <literal>NULL</literal> if the
model is unset.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A <link linkend="GtkTreeModel"><type>GtkTreeModel</type></link>, or <literal>NULL</literal> if none is currently being used.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-model"/>gtk_tree_view_set_model ()</title>
<indexterm><primary>gtk_tree_view_set_model</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_model         (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeModel">GtkTreeModel</link> *model);</programlisting>
<para>
Sets the model for a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.  If the <parameter>tree_view</parameter> already has a model
set, it will remove it before setting the new model.  If <parameter>model</parameter> is <literal>NULL</literal>, then
it will unset the old model.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeNode"><type>GtkTreeNode</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> The model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-selection"/>gtk_tree_view_get_selection ()</title>
<indexterm><primary>gtk_tree_view_get_selection</primary></indexterm><programlisting><link linkend="GtkTreeSelection">GtkTreeSelection</link>* gtk_tree_view_get_selection
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Gets the <link linkend="GtkTreeSelection"><type>GtkTreeSelection</type></link> associated with <parameter>tree_view</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A <link linkend="GtkTreeSelection"><type>GtkTreeSelection</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-hadjustment"/>gtk_tree_view_get_hadjustment ()</title>
<indexterm><primary>gtk_tree_view_get_hadjustment</primary></indexterm><programlisting><link linkend="GtkAdjustment">GtkAdjustment</link>* gtk_tree_view_get_hadjustment
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Gets the <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> currently being used for the horizontal aspect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> object, or <literal>NULL</literal> if none is currently being
used.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-hadjustment"/>gtk_tree_view_set_hadjustment ()</title>
<indexterm><primary>gtk_tree_view_set_hadjustment</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_hadjustment   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *adjustment);</programlisting>
<para>
Sets the <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> for the current horizontal aspect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adjustment</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> to set, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-vadjustment"/>gtk_tree_view_get_vadjustment ()</title>
<indexterm><primary>gtk_tree_view_get_vadjustment</primary></indexterm><programlisting><link linkend="GtkAdjustment">GtkAdjustment</link>* gtk_tree_view_get_vadjustment
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Gets the <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> currently being used for the vertical aspect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> object, or <literal>NULL</literal> if none is currently being
used.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-vadjustment"/>gtk_tree_view_set_vadjustment ()</title>
<indexterm><primary>gtk_tree_view_set_vadjustment</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_vadjustment   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *adjustment);</programlisting>
<para>
Sets the <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> for the current vertical aspect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adjustment</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> to set, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-headers-visible"/>gtk_tree_view_get_headers_visible ()</title>
<indexterm><primary>gtk_tree_view_get_headers_visible</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_get_headers_visible
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns <literal>TRUE</literal> if the headers on the <parameter>tree_view</parameter> are visible.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> Whether the headers are visible or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-headers-visible"/>gtk_tree_view_set_headers_visible ()</title>
<indexterm><primary>gtk_tree_view_set_headers_visible</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_headers_visible
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> headers_visible);</programlisting>
<para>
Sets the the visibility state of the headers.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>headers_visible</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the headers are visible
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-columns-autosize"/>gtk_tree_view_columns_autosize ()</title>
<indexterm><primary>gtk_tree_view_columns_autosize</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_columns_autosize  (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Resizes all columns to their optimal width. Only works after the
treeview has been realized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-headers-clickable"/>gtk_tree_view_set_headers_clickable ()</title>
<indexterm><primary>gtk_tree_view_set_headers_clickable</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_headers_clickable
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
Allow the column title buttons to be clicked.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the columns are clickable.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-rules-hint"/>gtk_tree_view_set_rules_hint ()</title>
<indexterm><primary>gtk_tree_view_set_rules_hint</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_rules_hint    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
This function tells GTK+ that the user interface for your
application requires users to read across tree rows and associate
cells with one another. By default, GTK+ will then render the tree
with alternating row colors. Do <emphasis>not</emphasis> use it
just because you prefer the appearance of the ruled tree; that's a
question for the theme. Some themes will draw tree rows in
alternating colors even when rules are turned off, and users who
prefer that appearance all the time can choose those themes. You
should call this function only as a <emphasis>semantic</emphasis>
hint to the theme engine that your tree makes alternating colors
useful from a functional standpoint (since it has lots of columns,
generally).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the tree requires reading across rows
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-rules-hint"/>gtk_tree_view_get_rules_hint ()</title>
<indexterm><primary>gtk_tree_view_get_rules_hint</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_get_rules_hint    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Gets the setting set by <link linkend="gtk-tree-view-set-rules-hint"><function>gtk_tree_view_set_rules_hint()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if rules are useful for the user of this tree
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-append-column"/>gtk_tree_view_append_column ()</title>
<indexterm><primary>gtk_tree_view_append_column</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_tree_view_append_column     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);</programlisting>
<para>
Appends <parameter>column</parameter> to the list of columns. If <parameter>tree_view</parameter> has "fixed_height"
mode enbabled, then <parameter>column</parameter> must have its "sizing" property set to be
GTK_TREE_VIEW_COLUMN_FIXED.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to add.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The number of columns in <parameter>tree_view</parameter> after appending.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-remove-column"/>gtk_tree_view_remove_column ()</title>
<indexterm><primary>gtk_tree_view_remove_column</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_tree_view_remove_column     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);</programlisting>
<para>
Removes <parameter>column</parameter> from <parameter>tree_view</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to remove.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The number of columns in <parameter>tree_view</parameter> after removing.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-insert-column"/>gtk_tree_view_insert_column ()</title>
<indexterm><primary>gtk_tree_view_insert_column</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_tree_view_insert_column     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="gint">gint</link> position);</programlisting>
<para>
This inserts the <parameter>column</parameter> into the <parameter>tree_view</parameter> at <parameter>position</parameter>.  If <parameter>position</parameter> is
-1, then the column is inserted at the end. If <parameter>tree_view</parameter> has
"fixed_height" mode enabled, then <parameter>column</parameter> must have its "sizing" property
set to be GTK_TREE_VIEW_COLUMN_FIXED.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to be inserted.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> The position to insert <parameter>column</parameter> in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The number of columns in <parameter>tree_view</parameter> after insertion.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-insert-column-with-attributes"/>gtk_tree_view_insert_column_with_attributes ()</title>
<indexterm><primary>gtk_tree_view_insert_column_with_attributes</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_tree_view_insert_column_with_attributes
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> position,
                                             const <link linkend="gchar">gchar</link> *title,
                                             <link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             ...);</programlisting>
<para>
Creates a new <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> and inserts it into the <parameter>tree_view</parameter> at
<parameter>position</parameter>.  If <parameter>position</parameter> is -1, then the newly created column is inserted at
the end.  The column is initialized with the attributes given. If <parameter>tree_view</parameter>
has "fixed_height" mode enabled, then <parameter>column</parameter> must have its sizing
property set to be GTK_TREE_VIEW_COLUMN_FIXED.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> The position to insert the new column in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> The title to set the header to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> A <literal>NULL</literal>-terminated list of attributes.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The number of columns in <parameter>tree_view</parameter> after insertion.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-insert-column-with-data-func"/>gtk_tree_view_insert_column_with_data_func ()</title>
<indexterm><primary>gtk_tree_view_insert_column_with_data_func</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_tree_view_insert_column_with_data_func
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> position,
                                             const <link linkend="gchar">gchar</link> *title,
                                             <link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GtkTreeCellDataFunc">GtkTreeCellDataFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> dnotify);</programlisting>
<para>
Convenience function that inserts a new column into the <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
with the given cell renderer and a <link linkend="GtkCellDataFunc"><type>GtkCellDataFunc</type></link> to set cell renderer
attributes (normally using data from the model). See also
<link linkend="gtk-tree-view-column-set-cell-data-func"><function>gtk_tree_view_column_set_cell_data_func()</function></link>, <link linkend="gtk-tree-view-column-pack-start"><function>gtk_tree_view_column_pack_start()</function></link>.
If <parameter>tree_view</parameter> has "fixed_height" mode enabled, then <parameter>column</parameter> must have its
"sizing" property set to be GTK_TREE_VIEW_COLUMN_FIXED.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> Position to insert, -1 for append
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> column title
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> cell renderer for column
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> function to set attributes of cell renderer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> data for <parameter>func</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dnotify</parameter>&nbsp;:</term>
<listitem><simpara> destroy notifier for <parameter>data</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> number of columns in the tree view post-insert
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-column"/>gtk_tree_view_get_column ()</title>
<indexterm><primary>gtk_tree_view_get_column</primary></indexterm><programlisting><link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link>* gtk_tree_view_get_column (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> n);</programlisting>
<para>
Gets the <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> at the given position in the <link linkend="tree-view"><type>tree_view</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara> The position of the column, counting from 0.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link>, or <literal>NULL</literal> if the position is outside the
range of columns.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-columns"/>gtk_tree_view_get_columns ()</title>
<indexterm><primary>gtk_tree_view_get_columns</primary></indexterm><programlisting><link linkend="GList">GList</link>*      gtk_tree_view_get_columns       (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns a <link linkend="GList"><type>GList</type></link> of all the <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> s currently in <parameter>tree_view</parameter>.
The returned list must be freed with <link linkend="g-list-free"><function>g_list_free()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A list of <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> s
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-move-column-after"/>gtk_tree_view_move_column_after ()</title>
<indexterm><primary>gtk_tree_view_move_column_after</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_move_column_after (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *base_column);</programlisting>
<para>
Moves <parameter>column</parameter> to be after to <parameter>base_column</parameter>.  If <parameter>base_column</parameter> is <literal>NULL</literal>, then
<parameter>column</parameter> is placed in the first position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to be moved.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>base_column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to be moved relative to, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-expander-column"/>gtk_tree_view_set_expander_column ()</title>
<indexterm><primary>gtk_tree_view_set_expander_column</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_expander_column
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);</programlisting>
<para>
Sets the column to draw the expander arrow at. It must be in <parameter>tree_view</parameter>.  If
<parameter>column</parameter> is <literal>NULL</literal>, then the expander arrow is always at the first visible
column.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> <literal>NULL</literal>, or the column to draw the expander arrow at.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-expander-column"/>gtk_tree_view_get_expander_column ()</title>
<indexterm><primary>gtk_tree_view_get_expander_column</primary></indexterm><programlisting><link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link>* gtk_tree_view_get_expander_column
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns the column that is the current expander column.  This
column has the expander arrow drawn next to it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The expander column.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-column-drag-function"/>gtk_tree_view_set_column_drag_function ()</title>
<indexterm><primary>gtk_tree_view_set_column_drag_function</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_column_drag_function
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewColumnDropFunc">GtkTreeViewColumnDropFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="GtkDestroyNotify">GtkDestroyNotify</link> destroy);</programlisting>
<para>
Sets a user function for determining where a column may be dropped when
dragged.  This function is called on every column pair in turn at the
beginning of a column drag to determine where a drop can take place.  The
arguments passed to <parameter>func</parameter> are: the <parameter>tree_view</parameter>, the <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> being
dragged, the two <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> s determining the drop spot, and
<parameter>user_data</parameter>.  If either of the <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> arguments for the drop spot
are <literal>NULL</literal>, then they indicate an edge.  If <parameter>func</parameter> is set to be <literal>NULL</literal>, then
<parameter>tree_view</parameter> reverts to the default behavior of allowing all columns to be
dropped everywhere.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> A function to determine which columns are reorderable, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> User data to be passed to <parameter>func</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&nbsp;:</term>
<listitem><simpara> Destroy notifier for <parameter>user_data</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-scroll-to-point"/>gtk_tree_view_scroll_to_point ()</title>
<indexterm><primary>gtk_tree_view_scroll_to_point</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_scroll_to_point   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> tree_x,
                                             <link linkend="gint">gint</link> tree_y);</programlisting>
<para>
Scrolls the tree view such that the top-left corner of the visible
area is <parameter>tree_x</parameter>, <parameter>tree_y</parameter>, where <parameter>tree_x</parameter> and <parameter>tree_y</parameter> are specified
in tree window coordinates.  The <parameter>tree_view</parameter> must be realized before
this function is called.  If it isn't, you probably want to be
using <link linkend="gtk-tree-view-scroll-to-cell"><function>gtk_tree_view_scroll_to_cell()</function></link>.
</para>
<para>
If either <parameter>tree_x</parameter> or <parameter>tree_y</parameter> are -1, then that direction isn't scrolled.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree_x</parameter>&nbsp;:</term>
<listitem><simpara> X coordinate of new top-left pixel of visible area, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree_y</parameter>&nbsp;:</term>
<listitem><simpara> Y coordinate of new top-left pixel of visible area, or -1
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-scroll-to-cell"/>gtk_tree_view_scroll_to_cell ()</title>
<indexterm><primary>gtk_tree_view_scroll_to_cell</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_scroll_to_cell    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="gboolean">gboolean</link> use_align,
                                             <link linkend="gfloat">gfloat</link> row_align,
                                             <link linkend="gfloat">gfloat</link> col_align);</programlisting>
<para>
Moves the alignments of <parameter>tree_view</parameter> to the position specified by <parameter>column</parameter> and
<parameter>path</parameter>.  If <parameter>column</parameter> is <literal>NULL</literal>, then no horizontal scrolling occurs.  Likewise,
if <parameter>path</parameter> is <literal>NULL</literal> no vertical scrolling occurs.  At a minimum, one of <parameter>column</parameter>
or <parameter>path</parameter> need to be non-<literal>NULL</literal>.  <parameter>row_align</parameter> determines where the row is
placed, and <parameter>col_align</parameter> determines where <parameter>column</parameter> is placed.  Both are expected
to be between 0.0 and 1.0. 0.0 means left/top alignment, 1.0 means
right/bottom alignment, 0.5 means center.
</para>
<para>
If <parameter>use_align</parameter> is <literal>FALSE</literal>, then the alignment arguments are ignored, and the
tree does the minimum amount of work to scroll the cell onto the screen.
This means that the cell will be scrolled to the edge closest to its current
position.  If the cell is currently visible on the screen, nothing is done.
</para>
<para>
This function only works if the model is set, and <parameter>path</parameter> is a valid row on the
model.  If the model changes before the <parameter>tree_view</parameter> is realized, the centered
path will be modified to reflect this change.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> The path of the row to move to, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to move horizontally to, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_align</parameter>&nbsp;:</term>
<listitem><simpara> whether to use alignment arguments, or <literal>FALSE</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row_align</parameter>&nbsp;:</term>
<listitem><simpara> The vertical alignment of the row specified by <parameter>path</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col_align</parameter>&nbsp;:</term>
<listitem><simpara> The horizontal alignment of the column specified by <parameter>column</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-cursor"/>gtk_tree_view_set_cursor ()</title>
<indexterm><primary>gtk_tree_view_set_cursor</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_cursor        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *focus_column,
                                             <link linkend="gboolean">gboolean</link> start_editing);</programlisting>
<para>
Sets the current keyboard focus to be at <parameter>path</parameter>, and selects it.  This is
useful when you want to focus the user's attention on a particular row.  If
<parameter>focus_column</parameter> is not <literal>NULL</literal>, then focus is given to the column specified by 
it. Additionally, if <parameter>focus_column</parameter> is specified, and <parameter>start_editing</parameter> is 
<literal>TRUE</literal>, then editing should be started in the specified cell.  
This function is often followed by <parameter>gtk_widget_grab_focus</parameter> (<parameter>tree_view</parameter>) 
in order to give keyboard focus to the widget.  Please note that editing 
can only happen when the widget is realized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreePath"><type>GtkTreePath</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>focus_column</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_editing</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the specified cell should start being edited.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-cursor-on-cell"/>gtk_tree_view_set_cursor_on_cell ()</title>
<indexterm><primary>gtk_tree_view_set_cursor_on_cell</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_cursor_on_cell
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *focus_column,
                                             <link linkend="GtkCellRenderer">GtkCellRenderer</link> *focus_cell,
                                             <link linkend="gboolean">gboolean</link> start_editing);</programlisting>
<para>
Sets the current keyboard focus to be at <parameter>path</parameter>, and selects it.  This is
useful when you want to focus the user's attention on a particular row.  If
<parameter>focus_column</parameter> is not <literal>NULL</literal>, then focus is given to the column specified by
it. If <parameter>focus_column</parameter> and <parameter>focus_cell</parameter> are not <literal>NULL</literal>, and <parameter>focus_column</parameter>
contains 2 or more editable or activatable cells, then focus is given to
the cell specified by <parameter>focus_cell</parameter>. Additionally, if <parameter>focus_column</parameter> is
specified, and <parameter>start_editing</parameter> is <literal>TRUE</literal>, then editing should be started in
the specified cell.  This function is often followed by
<parameter>gtk_widget_grab_focus</parameter> (<parameter>tree_view</parameter>) in order to give keyboard focus to the
widget.  Please note that editing can only happen when the widget is
realized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreePath"><type>GtkTreePath</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>focus_column</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>focus_cell</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_editing</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the specified cell should start being edited.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-cursor"/>gtk_tree_view_get_cursor ()</title>
<indexterm><primary>gtk_tree_view_get_cursor</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_get_cursor        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> **focus_column);</programlisting>
<para>
Fills in <parameter>path</parameter> and <parameter>focus_column</parameter> with the current path and focus column.  If
the cursor isn't currently set, then *<parameter>path</parameter> will be <literal>NULL</literal>.  If no column
currently has focus, then *<parameter>focus_column</parameter> will be <literal>NULL</literal>.
</para>
<para>
The returned <link linkend="GtkTreePath"><type>GtkTreePath</type></link> must be freed with <link linkend="gtk-tree-path-free"><function>gtk_tree_path_free()</function></link> when
you are done with it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to be filled with the current cursor path, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>focus_column</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to be filled with the current focus column, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-row-activated"/>gtk_tree_view_row_activated ()</title>
<indexterm><primary>gtk_tree_view_row_activated</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_row_activated     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column);</programlisting>
<para>
Activates the cell determined by <parameter>path</parameter> and <parameter>column</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreePath"><type>GtkTreePath</type></link> to be activated.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> to be activated.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-expand-all"/>gtk_tree_view_expand_all ()</title>
<indexterm><primary>gtk_tree_view_expand_all</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_expand_all        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Recursively expands all nodes in the <parameter>tree_view</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-collapse-all"/>gtk_tree_view_collapse_all ()</title>
<indexterm><primary>gtk_tree_view_collapse_all</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_collapse_all      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Recursively collapses all visible, expanded nodes in <parameter>tree_view</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-expand-to-path"/>gtk_tree_view_expand_to_path ()</title>
<indexterm><primary>gtk_tree_view_expand_to_path</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_expand_to_path    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);</programlisting>
<para>
Expands the row at <parameter>path</parameter>. This will also expand all parent rows of
<parameter>path</parameter> as necessary.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> path to a row.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-expand-row"/>gtk_tree_view_expand_row ()</title>
<indexterm><primary>gtk_tree_view_expand_row</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_expand_row        (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="gboolean">gboolean</link> open_all);</programlisting>
<para>
Opens the row so its children are visible.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> path to a row
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>open_all</parameter>&nbsp;:</term>
<listitem><simpara> whether to recursively expand, or just expand immediate children
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the row existed and had children
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-collapse-row"/>gtk_tree_view_collapse_row ()</title>
<indexterm><primary>gtk_tree_view_collapse_row</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_collapse_row      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);</programlisting>
<para>
Collapses a row (hides its child rows, if they exist).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> path to a row in the <parameter>tree_view</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the row was collapsed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-map-expanded-rows"/>gtk_tree_view_map_expanded_rows ()</title>
<indexterm><primary>gtk_tree_view_map_expanded_rows</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_map_expanded_rows (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewMappingFunc">GtkTreeViewMappingFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Calls <parameter>func</parameter> on all expanded rows.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> A function to be called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> User data to be passed to the function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-row-expanded"/>gtk_tree_view_row_expanded ()</title>
<indexterm><primary>gtk_tree_view_row_expanded</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_row_expanded      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);</programlisting>
<para>
Returns <literal>TRUE</literal> if the node pointed to by <parameter>path</parameter> is expanded in <parameter>tree_view</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreePath"><type>GtkTreePath</type></link> to test expansion state.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if <link linkend="path"><type>path</type></link> is expanded.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-reorderable"/>gtk_tree_view_set_reorderable ()</title>
<indexterm><primary>gtk_tree_view_set_reorderable</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_reorderable   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> reorderable);</programlisting>
<para>
This function is a convenience function to allow you to reorder models that
support the <link linkend="GtkDragSourceIface"><type>GtkDragSourceIface</type></link> and the <link linkend="GtkDragDestIface"><type>GtkDragDestIface</type></link>.  Both
<link linkend="GtkTreeStore"><type>GtkTreeStore</type></link> and <link linkend="GtkListStore"><type>GtkListStore</type></link> support these.  If <parameter>reorderable</parameter> is <literal>TRUE</literal>, then
the user can reorder the model by dragging and dropping rows.  The
developer can listen to these changes by connecting to the model's
row_inserted and row_deleted signals.
</para>
<para>
This function does not give you any degree of control over the order -- any
reordering is allowed.  If more control is needed, you should probably
handle drag and drop manually.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reorderable</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal>, if the tree can be reordered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-reorderable"/>gtk_tree_view_get_reorderable ()</title>
<indexterm><primary>gtk_tree_view_get_reorderable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_get_reorderable   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Retrieves whether the user can reorder the tree via drag-and-drop. See
<link linkend="gtk-tree-view-set-reorderable"><function>gtk_tree_view_set_reorderable()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the tree can be reordered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-path-at-pos"/>gtk_tree_view_get_path_at_pos ()</title>
<indexterm><primary>gtk_tree_view_get_path_at_pos</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_get_path_at_pos   (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> **column,
                                             <link linkend="gint">gint</link> *cell_x,
                                             <link linkend="gint">gint</link> *cell_y);</programlisting>
<para>
Finds the path at the point (<parameter>x</parameter>, <parameter>y</parameter>), relative to widget coordinates.  That
is, <parameter>x</parameter> and <parameter>y</parameter> are relative to an events coordinates. <parameter>x</parameter> and <parameter>y</parameter> must come
from an event on the <parameter>tree_view</parameter> only where event->window ==
<link linkend="gtk-tree-view-get-bin"><function>gtk_tree_view_get_bin()</function></link>. It is primarily for things like popup menus.
If <parameter>path</parameter> is non-<literal>NULL</literal>, then it will be filled with the <link linkend="GtkTreePath"><type>GtkTreePath</type></link> at that
point.  This path should be freed with <link linkend="gtk-tree-path-free"><function>gtk_tree_path_free()</function></link>.  If <parameter>column</parameter>
is non-<literal>NULL</literal>, then it will be filled with the column at that point.
<parameter>cell_x</parameter> and <parameter>cell_y</parameter> return the coordinates relative to the cell background
(i.e. the <parameter>background_area</parameter> passed to <link linkend="gtk-cell-renderer-render"><function>gtk_cell_renderer_render()</function></link>).  This
function is only meaningful if <parameter>tree_view</parameter> is realized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> The x position to be identified.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> The y position to be identified.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to a <link linkend="GtkTreePath"><type>GtkTreePath</type></link> pointer to be filled in, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to a <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> pointer to be filled in, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell_x</parameter>&nbsp;:</term>
<listitem><simpara> A pointer where the X coordinate relative to the cell can be placed, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell_y</parameter>&nbsp;:</term>
<listitem><simpara> A pointer where the Y coordinate relative to the cell can be placed, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if a row exists at that coordinate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-cell-area"/>gtk_tree_view_get_cell_area ()</title>
<indexterm><primary>gtk_tree_view_get_cell_area</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_get_cell_area     (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);</programlisting>
<para>
Fills the bounding rectangle in tree window coordinates for the cell at the
row specified by <parameter>path</parameter> and the column specified by <parameter>column</parameter>.  If <parameter>path</parameter> is
<literal>NULL</literal>, or points to a path not currently displayed, the <parameter>y</parameter> and <parameter>height</parameter> fields
of the rectangle will be filled with 0. If <parameter>column</parameter> is <literal>NULL</literal>, the <parameter>x</parameter> and <parameter>width</parameter>
fields will be filled with 0.  The sum of all cell rects does not cover the
entire tree; there are extra pixels in between rows, for example. The
returned rectangle is equivalent to the <parameter>cell_area</parameter> passed to
<link linkend="gtk-cell-renderer-render"><function>gtk_cell_renderer_render()</function></link>.  This function is only valid if <link linkend="tree-view"><type>tree_view</type></link> is
realized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreePath"><type>GtkTreePath</type></link> for the row, or <literal>NULL</literal> to get only horizontal coordinates
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> for the column, or <literal>NULL</literal> to get only vertical coordiantes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rect</parameter>&nbsp;:</term>
<listitem><simpara> rectangle to fill with cell rect
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-background-area"/>gtk_tree_view_get_background_area ()</title>
<indexterm><primary>gtk_tree_view_get_background_area</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_get_background_area
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *column,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);</programlisting>
<para>
Fills the bounding rectangle in tree window coordinates for the cell at the
row specified by <parameter>path</parameter> and the column specified by <parameter>column</parameter>.  If <parameter>path</parameter> is
<literal>NULL</literal>, or points to a node not found in the tree, the <parameter>y</parameter> and <parameter>height</parameter> fields of
the rectangle will be filled with 0. If <parameter>column</parameter> is <literal>NULL</literal>, the <parameter>x</parameter> and <parameter>width</parameter>
fields will be filled with 0.  The returned rectangle is equivalent to the
<parameter>background_area</parameter> passed to <link linkend="gtk-cell-renderer-render"><function>gtk_cell_renderer_render()</function></link>.  These background
areas tile to cover the entire tree window (except for the area used for
header buttons). Contrast with the <parameter>cell_area</parameter>, returned by
<link linkend="gtk-tree-view-get-cell-area"><function>gtk_tree_view_get_cell_area()</function></link>, which returns only the cell itself, excluding
surrounding borders and the tree expander area.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreePath"><type>GtkTreePath</type></link> for the row, or <literal>NULL</literal> to get only horizontal coordinates
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link> for the column, or <literal>NULL</literal> to get only vertical coordiantes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rect</parameter>&nbsp;:</term>
<listitem><simpara> rectangle to fill with cell background rect
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-visible-rect"/>gtk_tree_view_get_visible_rect ()</title>
<indexterm><primary>gtk_tree_view_get_visible_rect</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_get_visible_rect  (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *visible_rect);</programlisting>
<para>
Fills <parameter>visible_rect</parameter> with the currently-visible region of the
buffer, in tree coordinates. Convert to widget coordinates with
<link linkend="gtk-tree-view-tree-to-widget-coords"><function>gtk_tree_view_tree_to_widget_coords()</function></link>. Tree coordinates start at
0,0 for row 0 of the tree, and cover the entire scrollable area of
the tree.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>visible_rect</parameter>&nbsp;:</term>
<listitem><simpara> rectangle to fill
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-bin-window"/>gtk_tree_view_get_bin_window ()</title>
<indexterm><primary>gtk_tree_view_get_bin_window</primary></indexterm><programlisting><link linkend="GdkWindow">GdkWindow</link>*  gtk_tree_view_get_bin_window    (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns the window that <parameter>tree_view</parameter> renders to.  This is used primarily to
compare to <literal>event->window</literal> to confirm that the event on
<parameter>tree_view</parameter> is on the right window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A <link linkend="GdkWindow"><type>GdkWindow</type></link>, or <literal>NULL</literal> when <parameter>tree_view</parameter> hasn't been realized yet
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-widget-to-tree-coords"/>gtk_tree_view_widget_to_tree_coords ()</title>
<indexterm><primary>gtk_tree_view_widget_to_tree_coords</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_widget_to_tree_coords
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> wx,
                                             <link linkend="gint">gint</link> wy,
                                             <link linkend="gint">gint</link> *tx,
                                             <link linkend="gint">gint</link> *ty);</programlisting>
<para>
Converts widget coordinates to coordinates for the
tree window (the full scrollable area of the tree).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wx</parameter>&nbsp;:</term>
<listitem><simpara> widget X coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wy</parameter>&nbsp;:</term>
<listitem><simpara> widget Y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tx</parameter>&nbsp;:</term>
<listitem><simpara> return location for tree X coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ty</parameter>&nbsp;:</term>
<listitem><simpara> return location for tree Y coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-tree-to-widget-coords"/>gtk_tree_view_tree_to_widget_coords ()</title>
<indexterm><primary>gtk_tree_view_tree_to_widget_coords</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_tree_to_widget_coords
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> tx,
                                             <link linkend="gint">gint</link> ty,
                                             <link linkend="gint">gint</link> *wx,
                                             <link linkend="gint">gint</link> *wy);</programlisting>
<para>
Converts tree coordinates (coordinates in full scrollable area of the tree)
to widget coordinates.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tx</parameter>&nbsp;:</term>
<listitem><simpara> tree X coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ty</parameter>&nbsp;:</term>
<listitem><simpara> tree Y coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wx</parameter>&nbsp;:</term>
<listitem><simpara> return location for widget X coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wy</parameter>&nbsp;:</term>
<listitem><simpara> return location for widget Y coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-enable-model-drag-dest"/>gtk_tree_view_enable_model_drag_dest ()</title>
<indexterm><primary>gtk_tree_view_enable_model_drag_dest</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_enable_model_drag_dest
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);</programlisting>
<para>
Turns <parameter>tree_view</parameter> into a drop destination for automatic DND.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara> the table of targets that the drag will support
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_targets</parameter>&nbsp;:</term>
<listitem><simpara> the number of items in <parameter>targets</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actions</parameter>&nbsp;:</term>
<listitem><simpara> the bitmask of possible actions for a drag from this
   widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-enable-model-drag-source"/>gtk_tree_view_enable_model_drag_source ()</title>
<indexterm><primary>gtk_tree_view_enable_model_drag_source</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_enable_model_drag_source
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GdkModifierType">GdkModifierType</link> start_button_mask,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);</programlisting>
<para>
Turns <parameter>tree_view</parameter> into a drag source for automatic DND.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_button_mask</parameter>&nbsp;:</term>
<listitem><simpara> Mask of allowed buttons to start drag
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara> the table of targets that the drag will support
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_targets</parameter>&nbsp;:</term>
<listitem><simpara> the number of items in <parameter>targets</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actions</parameter>&nbsp;:</term>
<listitem><simpara> the bitmask of possible actions for a drag from this
   widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-unset-rows-drag-source"/>gtk_tree_view_unset_rows_drag_source ()</title>
<indexterm><primary>gtk_tree_view_unset_rows_drag_source</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_unset_rows_drag_source
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Undoes the effect of <link linkend="gtk-tree-view-enable-model-drag-source"><function>gtk_tree_view_enable_model_drag_source()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-unset-rows-drag-dest"/>gtk_tree_view_unset_rows_drag_dest ()</title>
<indexterm><primary>gtk_tree_view_unset_rows_drag_dest</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_unset_rows_drag_dest
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Undoes the effect of <link linkend="gtk-tree-view-enable-model-drag-dest"><function>gtk_tree_view_enable_model_drag_dest()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-drag-dest-row"/>gtk_tree_view_set_drag_dest_row ()</title>
<indexterm><primary>gtk_tree_view_set_drag_dest_row</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_drag_dest_row (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link> pos);</programlisting>
<para>
Sets the row that is highlighted for feedback.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> The path of the row to highlight, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&nbsp;:</term>
<listitem><simpara> Specifies whether to drop before, after or into the row
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-drag-dest-row"/>gtk_tree_view_get_drag_dest_row ()</title>
<indexterm><primary>gtk_tree_view_get_drag_dest_row</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_get_drag_dest_row (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link> *pos);</programlisting>
<para>
Gets information about the row that is highlighted for feedback.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> Return location for the path of the highlighted row, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&nbsp;:</term>
<listitem><simpara> Return location for the drop position, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-dest-row-at-pos"/>gtk_tree_view_get_dest_row_at_pos ()</title>
<indexterm><primary>gtk_tree_view_get_dest_row_at_pos</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_get_dest_row_at_pos
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> drag_x,
                                             <link linkend="gint">gint</link> drag_y,
                                             <link linkend="GtkTreePath">GtkTreePath</link> **path,
                                             <link linkend="GtkTreeViewDropPosition">GtkTreeViewDropPosition</link> *pos);</programlisting>
<para>
Determines the destination row for a given position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>drag_x</parameter>&nbsp;:</term>
<listitem><simpara> the position to determine the destination row for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>drag_y</parameter>&nbsp;:</term>
<listitem><simpara> the position to determine the destination row for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> Return location for the path of the highlighted row, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&nbsp;:</term>
<listitem><simpara> Return location for the drop position, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> whether there is a row at the given postiion,
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-create-row-drag-icon"/>gtk_tree_view_create_row_drag_icon ()</title>
<indexterm><primary>gtk_tree_view_create_row_drag_icon</primary></indexterm><programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gtk_tree_view_create_row_drag_icon
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path);</programlisting>
<para>
Creates a <link linkend="GdkPixmap"><type>GdkPixmap</type></link> representation of the row at <parameter>path</parameter>.  This image is used
for a drag icon.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTreePath"><type>GtkTreePath</type></link> in <parameter>tree_view</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a newly-allocated pixmap of the drag icon.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-enable-search"/>gtk_tree_view_set_enable_search ()</title>
<indexterm><primary>gtk_tree_view_set_enable_search</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_enable_search (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gboolean">gboolean</link> enable_search);</programlisting>
<para>
If <parameter>enable_search</parameter> is set, then the user can type in text to search through
the tree interactively.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enable_search</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal>, if the user can search interactively
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-enable-search"/>gtk_tree_view_get_enable_search ()</title>
<indexterm><primary>gtk_tree_view_get_enable_search</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_tree_view_get_enable_search (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns whether or not the tree allows interactive searching.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> whether or not to let the user search interactively
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-search-column"/>gtk_tree_view_get_search_column ()</title>
<indexterm><primary>gtk_tree_view_get_search_column</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_tree_view_get_search_column (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Gets the column searched on by the interactive search code.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the column the interactive search code searches in.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-search-column"/>gtk_tree_view_set_search_column ()</title>
<indexterm><primary>gtk_tree_view_set_search_column</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_search_column (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="gint">gint</link> column);</programlisting>
<para>
Sets <parameter>column</parameter> as the column where the interactive search code should
search in.  Additionally, turns on interactive searching. Note that
<parameter>column</parameter> refers to a column of the model.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>column</parameter>&nbsp;:</term>
<listitem><simpara> the column of the model to search in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-get-search-equal-func"/>gtk_tree_view_get_search_equal_func ()</title>
<indexterm><primary>gtk_tree_view_get_search_equal_func</primary></indexterm><programlisting><link linkend="GtkTreeViewSearchEqualFunc">GtkTreeViewSearchEqualFunc</link> gtk_tree_view_get_search_equal_func
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view);</programlisting>
<para>
Returns the compare function currently in use.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the currently used compare function for the search code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-search-equal-func"/>gtk_tree_view_set_search_equal_func ()</title>
<indexterm><primary>gtk_tree_view_set_search_equal_func</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_search_equal_func
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeViewSearchEqualFunc">GtkTreeViewSearchEqualFunc</link> search_equal_func,
                                             <link linkend="gpointer">gpointer</link> search_user_data,
                                             <link linkend="GtkDestroyNotify">GtkDestroyNotify</link> search_destroy);</programlisting>
<para>
Sets the compare function for the interactive search capabilities; note
that somewhat like <link linkend="strcmp"><function>strcmp()</function></link> returning 0 for equality
<link linkend="GtkTreeViewSearchEqualFunc"><type>GtkTreeViewSearchEqualFunc</type></link> returns <literal>FALSE</literal> on matches.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>search_equal_func</parameter>&nbsp;:</term>
<listitem><simpara> the compare function to use during the search
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>search_user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data to pass to <parameter>search_equal_func</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>search_destroy</parameter>&nbsp;:</term>
<listitem><simpara> Destroy notifier for <parameter>search_user_data</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkTreeDestroyCountFunc"/>GtkTreeDestroyCountFunc ()</title>
<indexterm><primary>GtkTreeDestroyCountFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*GtkTreeDestroyCountFunc)      (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreePath">GtkTreePath</link> *path,
                                             <link linkend="gint">gint</link> children,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>children</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-tree-view-set-destroy-count-func"/>gtk_tree_view_set_destroy_count_func ()</title>
<indexterm><primary>gtk_tree_view_set_destroy_count_func</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_tree_view_set_destroy_count_func
                                            (<link linkend="GtkTreeView">GtkTreeView</link> *tree_view,
                                             <link linkend="GtkTreeDestroyCountFunc">GtkTreeDestroyCountFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GtkDestroyNotify">GtkDestroyNotify</link> destroy);</programlisting>
<para>
This function should almost never be used.  It is meant for private use by
ATK for determining the number of visible children that are removed when the
user collapses a row, or a row is deleted.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tree_view</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkTreeView"><type>GtkTreeView</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> Function to be called when a view row is destroyed, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> User data to be passed to <parameter>func</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&nbsp;:</term>
<listitem><simpara> Destroy notifier for <parameter>data</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkTreeView--enable-search"/>&quot;<literal>enable-search</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>View allows user to search through columns interactively.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--expander-column"/>&quot;<literal>expander-column</literal>&quot; (<link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> : Read / Write)</term>
<listitem>
<para>Set the column for the expander column.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--fixed-height-mode"/>&quot;<literal>fixed-height-mode</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Speeds up GtkTreeView by assuming that all rows have the same height.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--hadjustment"/>&quot;<literal>hadjustment</literal>&quot; (<link linkend="GtkAdjustment">GtkAdjustment</link> : Read / Write)</term>
<listitem>
<para>Horizontal Adjustment for the widget.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--headers-clickable"/>&quot;<literal>headers-clickable</literal>&quot; (<link linkend="gboolean">gboolean</link> : Write)</term>
<listitem>
<para>Column headers respond to click events.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--headers-visible"/>&quot;<literal>headers-visible</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Show the column header buttons.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--model"/>&quot;<literal>model</literal>&quot; (<link linkend="GtkTreeModel">GtkTreeModel</link> : Read / Write)</term>
<listitem>
<para>The model for the tree view.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--reorderable"/>&quot;<literal>reorderable</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>View is reorderable.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--rules-hint"/>&quot;<literal>rules-hint</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Set a hint to the theme engine to draw rows in alternating colors.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--search-column"/>&quot;<literal>search-column</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>Model column to search through when searching through code.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--vadjustment"/>&quot;<literal>vadjustment</literal>&quot; (<link linkend="GtkAdjustment">GtkAdjustment</link> : Read / Write)</term>
<listitem>
<para>Vertical Adjustment for the widget.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>
<refsect1>
<title>Style Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkTreeView--allow-rules"/>&quot;<literal>allow-rules</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read)</term>
<listitem>
<para>Allow drawing of alternating color rows.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--even-row-color"/>&quot;<literal>even-row-color</literal>&quot; (<link linkend="GdkColor">GdkColor</link> : Read)</term>
<listitem>
<para>Color to use for even rows.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--expander-size"/>&quot;<literal>expander-size</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Size of the expander arrow.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--horizontal-separator"/>&quot;<literal>horizontal-separator</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Horizontal space between cells.  Must be an even number.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--indent-expanders"/>&quot;<literal>indent-expanders</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read)</term>
<listitem>
<para>Make the expanders indented.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--odd-row-color"/>&quot;<literal>odd-row-color</literal>&quot; (<link linkend="GdkColor">GdkColor</link> : Read)</term>
<listitem>
<para>Color to use for odd rows.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkTreeView--vertical-separator"/>&quot;<literal>vertical-separator</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Vertical space between cells.  Must be an even number.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GtkTreeView-columns-changed"/>The &quot;columns-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-cursor-changed"/>The &quot;cursor-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-expand-collapse-cursor-row"/>The &quot;expand-collapse-cursor-row&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gboolean">gboolean</link> arg1,
                                            <link linkend="gboolean">gboolean</link> arg2,
                                            <link linkend="gboolean">gboolean</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-move-cursor"/>The &quot;move-cursor&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkMovementStep">GtkMovementStep</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-row-activated"/>The &quot;row-activated&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg1,
                                            <link linkend="GtkTreeViewColumn">GtkTreeViewColumn</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-row-collapsed"/>The &quot;row-collapsed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-row-expanded"/>The &quot;row-expanded&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-select-all"/>The &quot;select-all&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-select-cursor-parent"/>The &quot;select-cursor-parent&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-select-cursor-row"/>The &quot;select-cursor-row&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gboolean">gboolean</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-set-scroll-adjustments"/>The &quot;set-scroll-adjustments&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg1,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-start-interactive-search"/>The &quot;start-interactive-search&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-test-collapse-row"/>The &quot;test-collapse-row&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-test-expand-row"/>The &quot;test-expand-row&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="GtkTreeIter">GtkTreeIter</link> *arg1,
                                            <link linkend="GtkTreePath">GtkTreePath</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-toggle-cursor-row"/>The &quot;toggle-cursor-row&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkTreeView-unselect-all"/>The &quot;unselect-all&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkTreeView">GtkTreeView</link> *treeview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>treeview</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<link linkend="GtkTreeViewColumn"><type>GtkTreeViewColumn</type></link>, <link linkend="GtkTreeSelection"><type>GtkTreeSelection</type></link>, <link linkend="GtkTreeDnd"><type>GtkTreeDnd</type></link>, <link linkend="GtkTreeMode"><type>GtkTreeMode</type></link>, <link linkend="GtkTreeSortable"><type>GtkTreeSortable</type></link>, <link linkend="GtkTreeModelSort"><type>GtkTreeModelSort</type></link>, <link linkend="GtkListStore"><type>GtkListStore</type></link>, <link linkend="GtkTreeStore"><type>GtkTreeStore</type></link>, <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>, <link linkend="GtkCellEditable"><type>GtkCellEditable</type></link>, <link linkend="GtkCellRendererPixbuf"><type>GtkCellRendererPixbuf</type></link>, <link linkend="GtkCellRendererText"><type>GtkCellRendererText</type></link>, <link linkend="GtkCellRendererToggle"><type>GtkCellRendererToggle</type></link>
</para>
</refsect1>

</refentry>
