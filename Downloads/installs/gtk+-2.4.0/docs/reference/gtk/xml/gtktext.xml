<refentry id="GtkText">
<refmeta>
<refentrytitle>GtkText</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkText</refname><refpurpose>a text widget.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkText-struct">GtkText</link>;
struct      <link linkend="GtkTextFont">GtkTextFont</link>;
struct      <link linkend="GtkPropertyMark">GtkPropertyMark</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-text-new">gtk_text_new</link>                    (<link linkend="GtkAdjustment">GtkAdjustment</link> *hadj,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *vadj);
<link linkend="void">void</link>        <link linkend="gtk-text-set-editable">gtk_text_set_editable</link>           (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="gboolean">gboolean</link> editable);
<link linkend="void">void</link>        <link linkend="gtk-text-set-word-wrap">gtk_text_set_word_wrap</link>          (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="gboolean">gboolean</link> word_wrap);
<link linkend="void">void</link>        <link linkend="gtk-text-set-line-wrap">gtk_text_set_line_wrap</link>          (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="gboolean">gboolean</link> line_wrap);
<link linkend="void">void</link>        <link linkend="gtk-text-set-adjustments">gtk_text_set_adjustments</link>        (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *hadj,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *vadj);
<link linkend="void">void</link>        <link linkend="gtk-text-set-point">gtk_text_set_point</link>              (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="guint">guint</link> index);
<link linkend="guint">guint</link>       <link linkend="gtk-text-get-point">gtk_text_get_point</link>              (<link linkend="GtkText">GtkText</link> *text);
<link linkend="guint">guint</link>       <link linkend="gtk-text-get-length">gtk_text_get_length</link>             (<link linkend="GtkText">GtkText</link> *text);
<link linkend="void">void</link>        <link linkend="gtk-text-freeze">gtk_text_freeze</link>                 (<link linkend="GtkText">GtkText</link> *text);
<link linkend="void">void</link>        <link linkend="gtk-text-thaw">gtk_text_thaw</link>                   (<link linkend="GtkText">GtkText</link> *text);
<link linkend="void">void</link>        <link linkend="gtk-text-insert">gtk_text_insert</link>                 (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="GdkFont">GdkFont</link> *font,
                                             const <link linkend="GdkColor">GdkColor</link> *fore,
                                             const <link linkend="GdkColor">GdkColor</link> *back,
                                             const <link linkend="char">char</link> *chars,
                                             <link linkend="gint">gint</link> length);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-text-backward-delete">gtk_text_backward_delete</link>        (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="guint">guint</link> nchars);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-text-forward-delete">gtk_text_forward_delete</link>         (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="guint">guint</link> nchars);
#define     <link linkend="GTK-TEXT-INDEX-CAPS">GTK_TEXT_INDEX</link>                  (t, index)



</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkOldEditable">GtkOldEditable</link>
                     +----GtkText
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GtkText implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link> and  <link linkend="GtkEditable">GtkEditable</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkText--hadjustment">hadjustment</link>&quot;          <link linkend="GtkAdjustment">GtkAdjustment</link>        : Read / Write
  &quot;<link linkend="GtkText--line-wrap">line-wrap</link>&quot;            <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkText--vadjustment">vadjustment</link>&quot;          <link linkend="GtkAdjustment">GtkAdjustment</link>        : Read / Write
  &quot;<link linkend="GtkText--word-wrap">word-wrap</link>&quot;            <link linkend="gboolean">gboolean</link>             : Read / Write
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GtkText-set-scroll-adjustments">set-scroll-adjustments</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkText">GtkText</link> *text,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg1,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
<warning>
<para>
<link linkend="GtkText"><type>GtkText</type></link> is deprecated and unsupported. It is known to be
buggy. To use it, you must define the symbol <literal>GTK_ENABLE_BROKEN</literal>
prior to including the GTK+ header files. Use <link linkend="GtkTextView"><type>GtkTextView</type></link> instead.
</para>
</warning>
A <link linkend="GtkText"><type>GtkText</type></link> widget allows one to display any given text and manipulate it
by deleting from one point to another, selecting a region, and various
other functions as outlined below.  It is inherited from <link linkend="GtkEditable"><type>GtkEditable</type></link>.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkText-struct"/>struct GtkText</title>
<indexterm><primary>GtkText</primary></indexterm><programlisting>struct GtkText;</programlisting>
<warning><para><literal>GtkText</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Most of the <link linkend="GtkText-struct"><type>GtkText-struct</type></link> struct members should not be accessed directly.
Listed below are a few exceptions and how to use them.
</para></refsect2>
<refsect2>
<title><anchor id="GtkTextFont"/>struct GtkTextFont</title>
<indexterm><primary>GtkTextFont</primary></indexterm><programlisting>struct GtkTextFont;</programlisting>
<warning><para><literal>GtkTextFont</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Internal <link linkend="GtkText"><type>GtkText</type></link> data type.
<!-- Pretty sure.. declared in gtktext.c -->
</para></refsect2>
<refsect2>
<title><anchor id="GtkPropertyMark"/>struct GtkPropertyMark</title>
<indexterm><primary>GtkPropertyMark</primary></indexterm><programlisting>struct GtkPropertyMark {

  /* Position in list. */
  GList* property;

  /* Offset into that property. */
  guint offset;

  /* Current index. */
  guint index;
};
</programlisting>
<warning><para><literal>GtkPropertyMark</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Internal <link linkend="GtkText"><type>GtkText</type></link> data type.  Should not be accessed directly.
<!-- FIXME: unsure about this  -->
</para></refsect2>
<refsect2>
<title><anchor id="gtk-text-new"/>gtk_text_new ()</title>
<indexterm><primary>gtk_text_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_text_new                    (<link linkend="GtkAdjustment">GtkAdjustment</link> *hadj,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *vadj);</programlisting>
<warning><para><literal>gtk_text_new</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Creates a new <link linkend="GtkText"><type>GtkText</type></link> widget, initialized with the given pointers to
<link linkend="GtkAdjustments"><type>GtkAdjustments</type></link>.  These pointers can be used to track the viewing position
of the <link linkend="GtkText"><type>GtkText</type></link> widget.  Passing <literal>NULL</literal> to either or both of them will make
the <link linkend="GtkText"><type>GtkText</type></link> create its own.  You can set these later with the function
<link linkend="gtk-text-set-adjustment"><function>gtk_text_set_adjustment()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>hadj</parameter>&nbsp;:</term>
<listitem><simpara>horizontal adjustment.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vadj</parameter>&nbsp;:</term>
<listitem><simpara>vertical adjustment.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the new <link linkend="GtkText"><type>GtkText</type></link> widget.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-set-editable"/>gtk_text_set_editable ()</title>
<indexterm><primary>gtk_text_set_editable</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_set_editable           (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="gboolean">gboolean</link> editable);</programlisting>
<warning><para><literal>gtk_text_set_editable</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets whether the <link linkend="GtkText"><type>GtkText</type></link> widget can be edited by the user or not.  This
still allows you the programmer to make changes with the various <link linkend="GtkText"><type>GtkText</type></link>
functions.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>editable</parameter>&nbsp;:</term>
<listitem><simpara><literal>TRUE</literal> makes it editable, <literal>FALSE</literal> makes it immutable by the user


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-set-word-wrap"/>gtk_text_set_word_wrap ()</title>
<indexterm><primary>gtk_text_set_word_wrap</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_set_word_wrap          (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="gboolean">gboolean</link> word_wrap);</programlisting>
<warning><para><literal>gtk_text_set_word_wrap</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets whether the <link linkend="GtkText"><type>GtkText</type></link> widget wraps words down to the next line if it
can't be completed on the current line.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>word_wrap</parameter>&nbsp;:</term>
<listitem><simpara><literal>TRUE</literal> makes it word wrap, <literal>FALSE</literal> disables word wrapping


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-set-line-wrap"/>gtk_text_set_line_wrap ()</title>
<indexterm><primary>gtk_text_set_line_wrap</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_set_line_wrap          (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="gboolean">gboolean</link> line_wrap);</programlisting>
<warning><para><literal>gtk_text_set_line_wrap</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Controls how <link linkend="GtkText"><type>GtkText</type></link> handles long lines of continuous text.  If line wrap
is on, the line is broken when it reaches the extent of the <link linkend="GtkText"><type>GtkText</type></link> widget
viewing area and the rest is displayed on the next line.  If it is not set,
the line continues regardless size of current viewing area.  Similar to word
wrap but it disregards word boundaries.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>line_wrap</parameter>&nbsp;:</term>
<listitem><simpara><literal>TRUE</literal> turns line wrap on, <literal>FALSE</literal> turns it off


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-set-adjustments"/>gtk_text_set_adjustments ()</title>
<indexterm><primary>gtk_text_set_adjustments</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_set_adjustments        (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *hadj,
                                             <link linkend="GtkAdjustment">GtkAdjustment</link> *vadj);</programlisting>
<warning><para><literal>gtk_text_set_adjustments</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Allows you to set <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> pointers which in turn allows you to
keep track of the viewing position of the <link linkend="GtkText"><type>GtkText</type></link> widget.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hadj</parameter>&nbsp;:</term>
<listitem><simpara>the horizontal adjustment
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vadj</parameter>&nbsp;:</term>
<listitem><simpara>the vertical adjustment


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-set-point"/>gtk_text_set_point ()</title>
<indexterm><primary>gtk_text_set_point</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_set_point              (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="guint">guint</link> index);</programlisting>
<warning><para><literal>gtk_text_set_point</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the cursor at the given point.  In this case a point constitutes
the number of characters from the extreme upper left corner of the <link linkend="GtkText"><type>GtkText</type></link>
widget.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&nbsp;:</term>
<listitem><simpara>the number of characters from the upper left corner


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-get-point"/>gtk_text_get_point ()</title>
<indexterm><primary>gtk_text_get_point</primary></indexterm><programlisting><link linkend="guint">guint</link>       gtk_text_get_point              (<link linkend="GtkText">GtkText</link> *text);</programlisting>
<warning><para><literal>gtk_text_get_point</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Gets the current position of the cursor as the number of characters from
the upper left corner of the <link linkend="GtkText"><type>GtkText</type></link> widget.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the number of characters from the upper left corner


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-get-length"/>gtk_text_get_length ()</title>
<indexterm><primary>gtk_text_get_length</primary></indexterm><programlisting><link linkend="guint">guint</link>       gtk_text_get_length             (<link linkend="GtkText">GtkText</link> *text);</programlisting>
<warning><para><literal>gtk_text_get_length</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns the length of the all the text contained within the <link linkend="GtkText"><type>GtkText</type></link> widget;
disregards current point position.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the length of the text


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-freeze"/>gtk_text_freeze ()</title>
<indexterm><primary>gtk_text_freeze</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_freeze                 (<link linkend="GtkText">GtkText</link> *text);</programlisting>
<warning><para><literal>gtk_text_freeze</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Freezes the <link linkend="GtkText"><type>GtkText</type></link> widget which disallows redrawing of the widget until
it is thawed.  This is useful if a large number of changes are going to
made to the text within the widget, reducing the amount of flicker seen
by the user.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-thaw"/>gtk_text_thaw ()</title>
<indexterm><primary>gtk_text_thaw</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_thaw                   (<link linkend="GtkText">GtkText</link> *text);</programlisting>
<warning><para><literal>gtk_text_thaw</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Allows the <link linkend="GtkText"><type>GtkText</type></link> widget to be redrawn again by GTK.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-insert"/>gtk_text_insert ()</title>
<indexterm><primary>gtk_text_insert</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_text_insert                 (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="GdkFont">GdkFont</link> *font,
                                             const <link linkend="GdkColor">GdkColor</link> *fore,
                                             const <link linkend="GdkColor">GdkColor</link> *back,
                                             const <link linkend="char">char</link> *chars,
                                             <link linkend="gint">gint</link> length);</programlisting>
<warning><para><literal>gtk_text_insert</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts given text into the <link linkend="GtkText"><type>GtkText</type></link> widget with the given properties as
outlined below.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GdkFont"><type>GdkFont</type></link> to use
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fore</parameter>&nbsp;:</term>
<listitem><simpara>the foreground color to insert with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>back</parameter>&nbsp;:</term>
<listitem><simpara>the background color to insert with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>chars</parameter>&nbsp;:</term>
<listitem><simpara>the actual text to be inserted
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&nbsp;:</term>
<listitem><simpara>the length of the text to be inserted, passing -1 makes it insert
all the text.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-backward-delete"/>gtk_text_backward_delete ()</title>
<indexterm><primary>gtk_text_backward_delete</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_text_backward_delete        (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="guint">guint</link> nchars);</programlisting>
<warning><para><literal>gtk_text_backward_delete</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deletes from the current point position backward the given number of
characters.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nchars</parameter>&nbsp;:</term>
<listitem><simpara>the number of characters to delete
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the operation was successful, otherwise returns <literal>FALSE</literal>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-text-forward-delete"/>gtk_text_forward_delete ()</title>
<indexterm><primary>gtk_text_forward_delete</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_text_forward_delete         (<link linkend="GtkText">GtkText</link> *text,
                                             <link linkend="guint">guint</link> nchars);</programlisting>
<warning><para><literal>gtk_text_forward_delete</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deletes from the current point position forward the given number of
characters.
</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nchars</parameter>&nbsp;:</term>
<listitem><simpara>the number of characters to delete
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the operation was successful, otherwise returns <literal>FALSE</literal>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GTK-TEXT-INDEX-CAPS"/>GTK_TEXT_INDEX()</title>
<indexterm><primary>GTK_TEXT_INDEX</primary></indexterm><programlisting>#define     GTK_TEXT_INDEX(t, index)</programlisting>
<warning><para><literal>GTK_TEXT_INDEX</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns the character at the given index within the <link linkend="GtkText"><type>GtkText</type></link> widget.
</para><variablelist role="params">
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GtkText"><type>GtkText</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&nbsp;:</term>
<listitem><simpara>the number of characters from the upper left corner


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkText--hadjustment"/>&quot;<literal>hadjustment</literal>&quot; (<link linkend="GtkAdjustment">GtkAdjustment</link> : Read / Write)</term>
<listitem>
<para>
Used by the <link linkend="GtkText"><type>GtkText</type></link> widget to keep track of the size of its horizontal
text.
</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkText--line-wrap"/>&quot;<literal>line-wrap</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>
Boolean value indicating whether line wrap is enabled or not.
</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkText--vadjustment"/>&quot;<literal>vadjustment</literal>&quot; (<link linkend="GtkAdjustment">GtkAdjustment</link> : Read / Write)</term>
<listitem>
<para>
Used by the <link linkend="GtkText"><type>GtkText</type></link> widget to keep track of the size of its vertical
text.
</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkText--word-wrap"/>&quot;<literal>word-wrap</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>
Boolean value indicated whether word wrap is enabled or not.
</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GtkText-set-scroll-adjustments"/>The &quot;set-scroll-adjustments&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkText">GtkText</link> *text,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg1,
                                            <link linkend="GtkAdjustment">GtkAdjustment</link> *arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
