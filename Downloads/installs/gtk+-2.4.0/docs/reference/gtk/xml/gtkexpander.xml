<refentry id="GtkExpander">
<refmeta>
<refentrytitle>GtkExpander</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkExpander</refname><refpurpose>A container which can hide its child</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkExpander-struct">GtkExpander</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-expander-new">gtk_expander_new</link>                (const <link linkend="gchar">gchar</link> *label);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-expander-new-with-mnemonic">gtk_expander_new_with_mnemonic</link>  (const <link linkend="gchar">gchar</link> *label);
<link linkend="void">void</link>        <link linkend="gtk-expander-set-expanded">gtk_expander_set_expanded</link>       (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gboolean">gboolean</link> expanded);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-expander-get-expanded">gtk_expander_get_expanded</link>       (<link linkend="GtkExpander">GtkExpander</link> *expander);
<link linkend="void">void</link>        <link linkend="gtk-expander-set-spacing">gtk_expander_set_spacing</link>        (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gint">gint</link> spacing);
<link linkend="gint">gint</link>        <link linkend="gtk-expander-get-spacing">gtk_expander_get_spacing</link>        (<link linkend="GtkExpander">GtkExpander</link> *expander);
<link linkend="void">void</link>        <link linkend="gtk-expander-set-label">gtk_expander_set_label</link>          (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             const <link linkend="gchar">gchar</link> *label);
G_CONST_RETURN <link linkend="gchar">gchar</link>* <link linkend="gtk-expander-get-label">gtk_expander_get_label</link>
                                            (<link linkend="GtkExpander">GtkExpander</link> *expander);
<link linkend="void">void</link>        <link linkend="gtk-expander-set-use-underline">gtk_expander_set_use_underline</link>  (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gboolean">gboolean</link> use_underline);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-expander-get-use-underline">gtk_expander_get_use_underline</link>  (<link linkend="GtkExpander">GtkExpander</link> *expander);
<link linkend="void">void</link>        <link linkend="gtk-expander-set-use-markup">gtk_expander_set_use_markup</link>     (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gboolean">gboolean</link> use_markup);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-expander-get-use-markup">gtk_expander_get_use_markup</link>     (<link linkend="GtkExpander">GtkExpander</link> *expander);
<link linkend="void">void</link>        <link linkend="gtk-expander-set-label-widget">gtk_expander_set_label_widget</link>   (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="GtkWidget">GtkWidget</link> *label_widget);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-expander-get-label-widget">gtk_expander_get_label_widget</link>   (<link linkend="GtkExpander">GtkExpander</link> *expander);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBin">GtkBin</link>
                           +----GtkExpander
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GtkExpander implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkExpander--expanded">expanded</link>&quot;             <link linkend="gboolean">gboolean</link>             : Read / Write / Construct
  &quot;<link linkend="GtkExpander--label">label</link>&quot;                <link linkend="gchararray">gchararray</link>           : Read / Write / Construct
  &quot;<link linkend="GtkExpander--label-widget">label-widget</link>&quot;         <link linkend="GtkWidget">GtkWidget</link>            : Read / Write
  &quot;<link linkend="GtkExpander--spacing">spacing</link>&quot;              <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkExpander--use-markup">use-markup</link>&quot;           <link linkend="gboolean">gboolean</link>             : Read / Write / Construct
  &quot;<link linkend="GtkExpander--use-underline">use-underline</link>&quot;        <link linkend="gboolean">gboolean</link>             : Read / Write / Construct
</synopsis>
</refsect1>
<refsect1>
<title>Style Properties</title>
<synopsis>

  &quot;<link linkend="GtkExpander--expander-size">expander-size</link>&quot;        <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkExpander--expander-spacing">expander-spacing</link>&quot;     <link linkend="gint">gint</link>                 : Read
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GtkExpander-activate">activate</link>&quot;  <link linkend="void">void</link>        user_function      (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
A <link linkend="GtkExpander"><type>GtkExpander</type></link> allows the user to hide or show its child by clicking on an expander triangle similar to 
the triangles used in a <link linkend="GtkTreeView"><type>GtkTreeView</type></link>.
</para>

  <para>
    Normally you use an expander as you would use any other descendant
    of <link linkend="GtkBin"><type>GtkBin</type></link>; you create the child widget and use
    <link linkend="gtk-container-add"><function>gtk_container_add()</function></link> to add it to the expander.  When the expander
    is toggled, it will take care of showing and hiding the child
    automatically.
  </para>

  <section id="expander-special-usage">
    <title>Special Usage</title>

    <para>
      There there are situations in which you may prefer to show and
      hide the expanded widget yourself, such as when you want to
      actually create the widget at expansion time.  In this case,
      create a <link linkend="GtkExpander"><type>GtkExpander</type></link> but do not add a child to it.  The
      expander widget has an <literal>expanded</literal> property
      which can be used to monitor its expansion state.  You should
      watch this property with a signal connection as follows:
    </para>

    <programlisting id="expander-callback-example">
expander = gtk_expander_new_with_mnemonic ("_More Options");
g_signal_connect (expander, "notify::expanded",
                  G_CALLBACK (expander_callback), NULL);

...

static void
expander_callback (GObject    *object,
                   GParamSpec *param_spec,
                   gpointer    user_data)
{
  GtkExpander *expander;

  expander = GTK_EXPANDER (object);

  if (gtk_expander_get_expanded (expander))
    {
      /* Show or create widgets */
    }
  else
    {
      /* Hide or destroy widgets */
    }
}

    </programlisting>
  </section>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkExpander-struct"/>struct GtkExpander</title>
<indexterm><primary>GtkExpander</primary></indexterm><programlisting>struct GtkExpander;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-new"/>gtk_expander_new ()</title>
<indexterm><primary>gtk_expander_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_expander_new                (const <link linkend="gchar">gchar</link> *label);</programlisting>
<para>
Creates a new expander using <parameter>label</parameter> as the text of the label.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&nbsp;:</term>
<listitem><simpara> the text of the label
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkExpander"><type>GtkExpander</type></link> widget.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-new-with-mnemonic"/>gtk_expander_new_with_mnemonic ()</title>
<indexterm><primary>gtk_expander_new_with_mnemonic</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_expander_new_with_mnemonic  (const <link linkend="gchar">gchar</link> *label);</programlisting>
<para>
Creates a new expander using <parameter>label</parameter> as the text of the label.
If characters in <parameter>label</parameter> are preceded by an underscore, they are underlined.
If you need a literal underscore character in a label, use '__' (two 
underscores). The first underlined character represents a keyboard 
accelerator called a mnemonic.
Pressing Alt and that key activates the button.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&nbsp;:</term>
<listitem><simpara> the text of the label with an underscore in front of the
        mnemonic character
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkExpander"><type>GtkExpander</type></link> widget.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-set-expanded"/>gtk_expander_set_expanded ()</title>
<indexterm><primary>gtk_expander_set_expanded</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_expander_set_expanded       (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gboolean">gboolean</link> expanded);</programlisting>
<para>
Sets the state of the expander. Set to <literal>TRUE</literal>, if you want
the child widget to be revealed, and <literal>FALSE</literal> if you want the
child widget to be hidden.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expanded</parameter>&nbsp;:</term>
<listitem><simpara> whether the child widget is revealed
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-get-expanded"/>gtk_expander_get_expanded ()</title>
<indexterm><primary>gtk_expander_get_expanded</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_expander_get_expanded       (<link linkend="GtkExpander">GtkExpander</link> *expander);</programlisting>
<para>
Queries a <link linkend="GtkExpander"><type>GtkExpander</type></link> and returns its current state. Returns <literal>TRUE</literal>
if the child widget is revealed.
</para>
<para>
See <link linkend="gtk-expander-set-expanded"><function>gtk_expander_set_expanded()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the current state of the expander.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-set-spacing"/>gtk_expander_set_spacing ()</title>
<indexterm><primary>gtk_expander_set_spacing</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_expander_set_spacing        (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gint">gint</link> spacing);</programlisting>
<para>
Sets the spacing field of <parameter>expander</parameter>, which is the number of pixels to
place between expander and the child.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spacing</parameter>&nbsp;:</term>
<listitem><simpara> distance between the expander and child in pixels.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-get-spacing"/>gtk_expander_get_spacing ()</title>
<indexterm><primary>gtk_expander_get_spacing</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_expander_get_spacing        (<link linkend="GtkExpander">GtkExpander</link> *expander);</programlisting>
<para>
Gets the value set by <link linkend="gtk-expander-set-spacing"><function>gtk_expander_set_spacing()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> spacing between the expander and child.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-set-label"/>gtk_expander_set_label ()</title>
<indexterm><primary>gtk_expander_set_label</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_expander_set_label          (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             const <link linkend="gchar">gchar</link> *label);</programlisting>
<para>
Sets the text of the label of the expander to <parameter>label</parameter>.
</para>
<para>
This will also clear any previously set labels.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label</parameter>&nbsp;:</term>
<listitem><simpara> a string
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-get-label"/>gtk_expander_get_label ()</title>
<indexterm><primary>gtk_expander_get_label</primary></indexterm><programlisting>G_CONST_RETURN <link linkend="gchar">gchar</link>* gtk_expander_get_label
                                            (<link linkend="GtkExpander">GtkExpander</link> *expander);</programlisting>
<para>
Fetches the text from the label of the expander, as set by
<link linkend="gtk-expander-set-label"><function>gtk_expander_set_label()</function></link>. If the label text has not
been set the return value will be <literal>NULL</literal>. This will be the
case if you create an empty button with <link linkend="gtk-button-new"><function>gtk_button_new()</function></link> to
use as a container.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The text of the label widget. This string is owned
by the widget and must not be modified or freed.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-set-use-underline"/>gtk_expander_set_use_underline ()</title>
<indexterm><primary>gtk_expander_set_use_underline</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_expander_set_use_underline  (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gboolean">gboolean</link> use_underline);</programlisting>
<para>
If true, an underline in the text of the expander label indicates
the next character should be used for the mnemonic accelerator key.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_underline</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if underlines in the text indicate mnemonics
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-get-use-underline"/>gtk_expander_get_use_underline ()</title>
<indexterm><primary>gtk_expander_get_use_underline</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_expander_get_use_underline  (<link linkend="GtkExpander">GtkExpander</link> *expander);</programlisting>
<para>
Returns whether an embedded underline in the expander label indicates a
mnemonic. See <link linkend="gtk-expander-set-use-underline"><function>gtk_expander_set_use_underline()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if an embedded underline in the expander label
              indicates the mnemonic accelerator keys.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-set-use-markup"/>gtk_expander_set_use_markup ()</title>
<indexterm><primary>gtk_expander_set_use_markup</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_expander_set_use_markup     (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="gboolean">gboolean</link> use_markup);</programlisting>
<para>
Sets whether the text of the label contains markup in <link
linkend="PangoMarkupFormat">Pango's text markup
language</link>. See <link linkend="gtk-label-set-markup"><function>gtk_label_set_markup()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_markup</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the label's text should be parsed for markup
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-get-use-markup"/>gtk_expander_get_use_markup ()</title>
<indexterm><primary>gtk_expander_get_use_markup</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_expander_get_use_markup     (<link linkend="GtkExpander">GtkExpander</link> *expander);</programlisting>
<para>
Returns whether the label's text is interpreted as marked up with
the <link linkend="PangoMarkupFormat">Pango text markup
language</link>. See <link linkend="gtk-expander-set-use-markup"><function>gtk_expander_set_use_markup()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the label's text will be parsed for markup

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-set-label-widget"/>gtk_expander_set_label_widget ()</title>
<indexterm><primary>gtk_expander_set_label_widget</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_expander_set_label_widget   (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                             <link linkend="GtkWidget">GtkWidget</link> *label_widget);</programlisting>
<para>
Set the label widget for the expander. This is the widget
that will appear embedded alongside the expander arrow.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>label_widget</parameter>&nbsp;:</term>
<listitem><simpara> the new label widget
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-expander-get-label-widget"/>gtk_expander_get_label_widget ()</title>
<indexterm><primary>gtk_expander_get_label_widget</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_expander_get_label_widget   (<link linkend="GtkExpander">GtkExpander</link> *expander);</programlisting>
<para>
Retrieves the label widget for the frame. See
<link linkend="gtk-expander-set-label-widget"><function>gtk_expander_set_label_widget()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkExpander"><type>GtkExpander</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the label widget, or <literal>NULL</literal> if there is none.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkExpander--expanded"/>&quot;<literal>expanded</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write / Construct)</term>
<listitem>
<para>Whether the expander has been opened to reveal the child widget.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkExpander--label"/>&quot;<literal>label</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write / Construct)</term>
<listitem>
<para>Text of the expander's label.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkExpander--label-widget"/>&quot;<literal>label-widget</literal>&quot; (<link linkend="GtkWidget">GtkWidget</link> : Read / Write)</term>
<listitem>
<para>A widget to display in place of the usual expander label.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkExpander--spacing"/>&quot;<literal>spacing</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>Space to put between the label and the child.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkExpander--use-markup"/>&quot;<literal>use-markup</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write / Construct)</term>
<listitem>
<para>The text of the label includes XML markup. See pango_parse_markup().</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkExpander--use-underline"/>&quot;<literal>use-underline</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write / Construct)</term>
<listitem>
<para>If set, an underline in the text indicates the next character should be used for the mnemonic accelerator key.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>
<refsect1>
<title>Style Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkExpander--expander-size"/>&quot;<literal>expander-size</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Size of the expander arrow.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkExpander--expander-spacing"/>&quot;<literal>expander-spacing</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Spacing around expander arrow.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GtkExpander-activate"/>The &quot;activate&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkExpander">GtkExpander</link> *expander,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>expander</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
