<refentry id="GtkCellRenderer">
<refmeta>
<refentrytitle>GtkCellRenderer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkCellRenderer</refname><refpurpose>An object for rendering a single cell on a <link linkend="GdkDrawable"><type>GdkDrawable</type></link></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


enum        <link linkend="GtkCellRendererState">GtkCellRendererState</link>;
enum        <link linkend="GtkCellRendererMode">GtkCellRendererMode</link>;
struct      <link linkend="GtkCellRenderer-struct">GtkCellRenderer</link>;
<link linkend="void">void</link>        <link linkend="gtk-cell-renderer-get-size">gtk_cell_renderer_get_size</link>      (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="gint">gint</link> *x_offset,
                                             <link linkend="gint">gint</link> *y_offset,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height);
<link linkend="void">void</link>        <link linkend="gtk-cell-renderer-render">gtk_cell_renderer_render</link>        (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GdkWindow">GdkWindow</link> *window,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *background_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *expose_area,
                                             <link linkend="GtkCellRendererState">GtkCellRendererState</link> flags);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-cell-renderer-activate">gtk_cell_renderer_activate</link>      (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GdkEvent">GdkEvent</link> *event,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *path,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *background_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="GtkCellRendererState">GtkCellRendererState</link> flags);
<link linkend="GtkCellEditable">GtkCellEditable</link>* <link linkend="gtk-cell-renderer-start-editing">gtk_cell_renderer_start_editing</link>
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GdkEvent">GdkEvent</link> *event,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *path,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *background_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="GtkCellRendererState">GtkCellRendererState</link> flags);
<link linkend="void">void</link>        <link linkend="gtk-cell-renderer-editing-canceled">gtk_cell_renderer_editing_canceled</link>
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell);
<link linkend="void">void</link>        <link linkend="gtk-cell-renderer-get-fixed-size">gtk_cell_renderer_get_fixed_size</link>
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height);
<link linkend="void">void</link>        <link linkend="gtk-cell-renderer-set-fixed-size">gtk_cell_renderer_set_fixed_size</link>
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----GtkCellRenderer
               +----<link linkend="GtkCellRendererPixbuf">GtkCellRendererPixbuf</link>
               +----<link linkend="GtkCellRendererText">GtkCellRendererText</link>
               +----<link linkend="GtkCellRendererToggle">GtkCellRendererToggle</link>
</synopsis>

</refsect1>





<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkCellRenderer--cell-background">cell-background</link>&quot;      <link linkend="gchararray">gchararray</link>           : Write
  &quot;<link linkend="GtkCellRenderer--cell-background-gdk">cell-background-gdk</link>&quot;  <link linkend="GdkColor">GdkColor</link>             : Read / Write
  &quot;<link linkend="GtkCellRenderer--cell-background-set">cell-background-set</link>&quot;  <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkCellRenderer--height">height</link>&quot;               <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkCellRenderer--is-expanded">is-expanded</link>&quot;          <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkCellRenderer--is-expander">is-expander</link>&quot;          <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkCellRenderer--mode">mode</link>&quot;                 <link linkend="GtkCellRendererMode">GtkCellRendererMode</link>  : Read / Write
  &quot;<link linkend="GtkCellRenderer--visible">visible</link>&quot;              <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkCellRenderer--width">width</link>&quot;                <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkCellRenderer--xalign">xalign</link>&quot;               <link linkend="gfloat">gfloat</link>               : Read / Write
  &quot;<link linkend="GtkCellRenderer--xpad">xpad</link>&quot;                 <link linkend="guint">guint</link>                : Read / Write
  &quot;<link linkend="GtkCellRenderer--yalign">yalign</link>&quot;               <link linkend="gfloat">gfloat</link>               : Read / Write
  &quot;<link linkend="GtkCellRenderer--ypad">ypad</link>&quot;                 <link linkend="guint">guint</link>                : Read / Write
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GtkCellRenderer-editing-canceled">editing-canceled</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
The <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link> is a base class of a set of objects used for
rendering a cell to a <link linkend="GdkDrawable"><type>GdkDrawable</type></link>.  These objects are used primarily by
the <link linkend="GtkTreeView"><type>GtkTreeView</type></link> widget, though they aren't tied to them in any
specific way.  It is worth noting that <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link> is not a
<link linkend="GtkWidget"><type>GtkWidget</type></link> and cannot be treated as such.
</para>

<para>
The primary use of a <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link> is for drawing a certain graphical
elements on a <link linkend="GdkDrawable"><type>GdkDrawable</type></link>.  Typically, one cell renderer is used to
draw many cells on the screen.  To this extent, it isn't expected that a
CellRenderer keep any permanent state around.  Instead, any state is set
just prior to use using <link linkend="GObject"><type>GObject</type></link><!-- -->s property system.  Then, the
cell is measured using <parameter>gtk_cell_renderer_get_size</parameter>.  Finally, the cell
is rendered in the correct location using <parameter>gtk_cell_renderer_render</parameter>.
</para>

<para>
There are a number of rules that must be followed when writing a new
<link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>.  First and formost, it's important that a certain set
of properties will always yield a cell renderer of the same size,
barring a <link linkend="GtkStyle"><type>GtkStyle</type></link> change.  The <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link> also has a number of
generic properties that are expected to be honored by all children.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkCellRendererState"/>enum GtkCellRendererState</title>
<indexterm><primary>GtkCellRendererState</primary></indexterm><programlisting>typedef enum
{
  GTK_CELL_RENDERER_SELECTED    = 1 &lt;&lt; 0,
  GTK_CELL_RENDERER_PRELIT      = 1 &lt;&lt; 1,
  GTK_CELL_RENDERER_INSENSITIVE = 1 &lt;&lt; 2,
  /* this flag means the cell is in the sort column/row */
  GTK_CELL_RENDERER_SORTED      = 1 &lt;&lt; 3,
  GTK_CELL_RENDERER_FOCUSED     = 1 &lt;&lt; 4
} GtkCellRendererState;
</programlisting>
<para>
Tells how a cell is to be rendererd.
</para><variablelist role="enum">
<varlistentry>
<term><literal>GTK_CELL_RENDERER_SELECTED</literal></term>
<listitem><simpara>The cell is currently selected, and
probably has a selection colored background to render to.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_CELL_RENDERER_PRELIT</literal></term>
<listitem><simpara>The mouse is hovering over the cell.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_CELL_RENDERER_INSENSITIVE</literal></term>
<listitem><simpara>The cell is drawn in an insensitive manner
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_CELL_RENDERER_SORTED</literal></term>
<listitem><simpara>The cell is in a sorted row
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_CELL_RENDERER_FOCUSED</literal></term>
<listitem><simpara>

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkCellRendererMode"/>enum GtkCellRendererMode</title>
<indexterm><primary>GtkCellRendererMode</primary></indexterm><programlisting>typedef enum
{
  GTK_CELL_RENDERER_MODE_INERT,
  GTK_CELL_RENDERER_MODE_ACTIVATABLE,
  GTK_CELL_RENDERER_MODE_EDITABLE
} GtkCellRendererMode;
</programlisting>
<para>
Identifies how the user can interact with a particular cell.
</para><variablelist role="enum">
<varlistentry>
<term><literal>GTK_CELL_RENDERER_MODE_INERT</literal></term>
<listitem><simpara>The cell is just for display
and cannot be interacted with.  Note that this doesn't mean that eg. the
row being drawn can't be selected -- just that a particular element of
it cannot be individually modified.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_CELL_RENDERER_MODE_ACTIVATABLE</literal></term>
<listitem><simpara>The cell can be clicked.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_CELL_RENDERER_MODE_EDITABLE</literal></term>
<listitem><simpara>The cell can be edited or otherwise modified.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkCellRenderer-struct"/>struct GtkCellRenderer</title>
<indexterm><primary>GtkCellRenderer</primary></indexterm><programlisting>struct GtkCellRenderer;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-get-size"/>gtk_cell_renderer_get_size ()</title>
<indexterm><primary>gtk_cell_renderer_get_size</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_cell_renderer_get_size      (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="gint">gint</link> *x_offset,
                                             <link linkend="gint">gint</link> *y_offset,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height);</programlisting>
<para>
Obtains the width and height needed to render the cell. Used by view widgets
to determine the appropriate size for the cell_area passed to
<link linkend="gtk-cell-renderer-render"><function>gtk_cell_renderer_render()</function></link>.  If <parameter>cell_area</parameter> is not <literal>NULL</literal>, fills in the x and y
offsets (if set) of the cell relative to this location.  Please note that the
values set in <parameter>width</parameter> and <parameter>height</parameter>, as well as those in <parameter>x_offset</parameter> and <parameter>y_offset</parameter>
are inclusive of the xpad and ypad properties.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget the renderer is rendering to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell_area</parameter>&nbsp;:</term>
<listitem><simpara> The area a cell will be allocated, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_offset</parameter>&nbsp;:</term>
<listitem><simpara> location to return x offset of cell relative to <parameter>cell_area</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_offset</parameter>&nbsp;:</term>
<listitem><simpara> location to return y offset of cell relative to <parameter>cell_area</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> location to return width needed to render a cell, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> location to return height needed to render a cell, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-render"/>gtk_cell_renderer_render ()</title>
<indexterm><primary>gtk_cell_renderer_render</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_cell_renderer_render        (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GdkWindow">GdkWindow</link> *window,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *background_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *expose_area,
                                             <link linkend="GtkCellRendererState">GtkCellRendererState</link> flags);</programlisting>
<para>
Invokes the virtual render function of the <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>. The three
passed-in rectangles are areas of <parameter>window</parameter>. Most renderers will draw within
<parameter>cell_area</parameter>; the xalign, yalign, xpad, and ypad fields of the <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
should be honored with respect to <parameter>cell_area</parameter>. <parameter>background_area</parameter> includes the
blank space around the cell, and also the area containing the tree expander;
so the <parameter>background_area</parameter> rectangles for all cells tile to cover the entire
<parameter>window</parameter>.  <parameter>expose_area</parameter> is a clip rectangle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkDrawable"><type>GdkDrawable</type></link> to draw to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> the widget owning <parameter>window</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>background_area</parameter>&nbsp;:</term>
<listitem><simpara> entire cell area (including tree expanders and maybe padding on the sides)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell_area</parameter>&nbsp;:</term>
<listitem><simpara> area normally rendered by a cell renderer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expose_area</parameter>&nbsp;:</term>
<listitem><simpara> area that actually needs updating
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> flags that affect rendering
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-activate"/>gtk_cell_renderer_activate ()</title>
<indexterm><primary>gtk_cell_renderer_activate</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_cell_renderer_activate      (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GdkEvent">GdkEvent</link> *event,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *path,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *background_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="GtkCellRendererState">GtkCellRendererState</link> flags);</programlisting>
<para>
Passes an activate event to the cell renderer for possible processing.  Some
cell renderers may use events; for example, <link linkend="GtkCellRendererToggle"><type>GtkCellRendererToggle</type></link> toggles
when it gets a mouse click.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkEvent"><type>GdkEvent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> widget that received the event
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> widget-dependent string representation of the event location; e.g. for <link linkend="GtkTreeView"><type>GtkTreeView</type></link>, a string representation of <link linkend="GtkTreePath"><type>GtkTreePath</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>background_area</parameter>&nbsp;:</term>
<listitem><simpara> background area as passed to <parameter>gtk_cell_renderer_render</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell_area</parameter>&nbsp;:</term>
<listitem><simpara> cell area as passed to <parameter>gtk_cell_renderer_render</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> render flags
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the event was consumed/handled
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-start-editing"/>gtk_cell_renderer_start_editing ()</title>
<indexterm><primary>gtk_cell_renderer_start_editing</primary></indexterm><programlisting><link linkend="GtkCellEditable">GtkCellEditable</link>* gtk_cell_renderer_start_editing
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="GdkEvent">GdkEvent</link> *event,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *path,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *background_area,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *cell_area,
                                             <link linkend="GtkCellRendererState">GtkCellRendererState</link> flags);</programlisting>
<para>
Passes an activate event to the cell renderer for possible processing.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkEvent"><type>GdkEvent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> widget that received the event
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> widget-dependent string representation of the event location; e.g. for <link linkend="GtkTreeView"><type>GtkTreeView</type></link>, a string representation of <link linkend="GtkTreePath"><type>GtkTreePath</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>background_area</parameter>&nbsp;:</term>
<listitem><simpara> background area as passed to <parameter>gtk_cell_renderer_render</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cell_area</parameter>&nbsp;:</term>
<listitem><simpara> cell area as passed to <parameter>gtk_cell_renderer_render</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> render flags
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A new <link linkend="GtkCellEditable"><type>GtkCellEditable</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-editing-canceled"/>gtk_cell_renderer_editing_canceled ()</title>
<indexterm><primary>gtk_cell_renderer_editing_canceled</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_cell_renderer_editing_canceled
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell);</programlisting>
<para>
Causes the cell renderer to emit the "editing-canceled" signal.  This
function is for use only by implementations of cell renderers that need to
notify the client program that an editing process was canceled and the
changes were not committed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-get-fixed-size"/>gtk_cell_renderer_get_fixed_size ()</title>
<indexterm><primary>gtk_cell_renderer_get_fixed_size</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_cell_renderer_get_fixed_size
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height);</programlisting>
<para>
Fills in <parameter>width</parameter> and <parameter>height</parameter> with the appropriate size of <parameter>cell</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> location to fill in with the fixed width of the widget, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> location to fill in with the fixed height of the widget, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-cell-renderer-set-fixed-size"/>gtk_cell_renderer_set_fixed_size ()</title>
<indexterm><primary>gtk_cell_renderer_set_fixed_size</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_cell_renderer_set_fixed_size
                                            (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *cell,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height);</programlisting>
<para>
Sets the renderer size to be explicit, independent of the properties set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cell</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkCellRenderer"><type>GtkCellRenderer</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width of the cell renderer, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the height of the cell renderer, or -1
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkCellRenderer--cell-background"/>&quot;<literal>cell-background</literal>&quot; (<link linkend="gchararray">gchararray</link> : Write)</term>
<listitem>
<para>Cell background color as a string.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--cell-background-gdk"/>&quot;<literal>cell-background-gdk</literal>&quot; (<link linkend="GdkColor">GdkColor</link> : Read / Write)</term>
<listitem>
<para>Cell background color as a GdkColor.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--cell-background-set"/>&quot;<literal>cell-background-set</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Whether this tag affects the cell background color.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--height"/>&quot;<literal>height</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>The fixed height.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--is-expanded"/>&quot;<literal>is-expanded</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Row is an expander row, and is expanded.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--is-expander"/>&quot;<literal>is-expander</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Row has children.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--mode"/>&quot;<literal>mode</literal>&quot; (<link linkend="GtkCellRendererMode">GtkCellRendererMode</link> : Read / Write)</term>
<listitem>
<para>Editable mode of the CellRenderer.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--visible"/>&quot;<literal>visible</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Display the cell.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--width"/>&quot;<literal>width</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>The fixed width.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--xalign"/>&quot;<literal>xalign</literal>&quot; (<link linkend="gfloat">gfloat</link> : Read / Write)</term>
<listitem>
<para>The x-align.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--xpad"/>&quot;<literal>xpad</literal>&quot; (<link linkend="guint">guint</link> : Read / Write)</term>
<listitem>
<para>The xpad.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--yalign"/>&quot;<literal>yalign</literal>&quot; (<link linkend="gfloat">gfloat</link> : Read / Write)</term>
<listitem>
<para>The y-align.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkCellRenderer--ypad"/>&quot;<literal>ypad</literal>&quot; (<link linkend="guint">guint</link> : Read / Write)</term>
<listitem>
<para>The ypad.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GtkCellRenderer-editing-canceled"/>The &quot;editing-canceled&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkCellRenderer">GtkCellRenderer</link> *,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
This signal gets emitted when the user cancels the process of editing a
cell.  For example, an editable cell renderer could be written to cancel
editing when the user presses Escape.
</para>
<para>
See also: <link linkend="gtk-cell-renderer-editing-canceled"><function>gtk_cell_renderer_editing_canceled()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<link linkend="GtkCellRendererText"><type>GtkCellRendererText</type></link>,<link linkend="GtkCellRendererPixbuf"><type>GtkCellRendererPixbuf</type></link>,<link linkend="GtkCellRendererToggle"><type>GtkCellRendererToggle</type></link>
</para>
</refsect1>

</refentry>
