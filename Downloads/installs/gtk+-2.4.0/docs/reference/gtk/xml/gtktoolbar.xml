<refentry id="GtkToolbar">
<refmeta>
<refentrytitle>GtkToolbar</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkToolbar</refname><refpurpose>Create bars of buttons and other widgets.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkToolbar-struct">GtkToolbar</link>;
enum        <link linkend="GtkToolbarChildType">GtkToolbarChildType</link>;
enum        <link linkend="GtkToolbarSpaceStyle">GtkToolbarSpaceStyle</link>;
struct      <link linkend="GtkToolbarChild">GtkToolbarChild</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-new">gtk_toolbar_new</link>                 (void);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-insert">gtk_toolbar_insert</link>              (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolItem">GtkToolItem</link> *item,
                                             <link linkend="gint">gint</link> pos);
<link linkend="gint">gint</link>        <link linkend="gtk-toolbar-get-item-index">gtk_toolbar_get_item_index</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolItem">GtkToolItem</link> *item);
<link linkend="gint">gint</link>        <link linkend="gtk-toolbar-get-n-items">gtk_toolbar_get_n_items</link>         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="GtkToolItem">GtkToolItem</link>* <link linkend="gtk-toolbar-get-nth-item">gtk_toolbar_get_nth_item</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> n);
<link linkend="gint">gint</link>        <link linkend="gtk-toolbar-get-drop-index">gtk_toolbar_get_drop_index</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-set-drop-highlight-item">gtk_toolbar_set_drop_highlight_item</link>
                                            (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolItem">GtkToolItem</link> *tool_item,
                                             <link linkend="gint">gint</link> index);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-set-show-arrow">gtk_toolbar_set_show_arrow</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gboolean">gboolean</link> show_arrow);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-set-orientation">gtk_toolbar_set_orientation</link>     (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkOrientation">GtkOrientation</link> orientation);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-set-tooltips">gtk_toolbar_set_tooltips</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gboolean">gboolean</link> enable);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-unset-icon-size">gtk_toolbar_unset_icon_size</link>     (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-toolbar-get-show-arrow">gtk_toolbar_get_show_arrow</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="GtkOrientation">GtkOrientation</link> <link linkend="gtk-toolbar-get-orientation">gtk_toolbar_get_orientation</link>  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="GtkToolbarStyle">GtkToolbarStyle</link> <link linkend="gtk-toolbar-get-style">gtk_toolbar_get_style</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="GtkIconSize">GtkIconSize</link> <link linkend="gtk-toolbar-get-icon-size">gtk_toolbar_get_icon_size</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="gboolean">gboolean</link>    <link linkend="gtk-toolbar-get-tooltips">gtk_toolbar_get_tooltips</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="GtkReliefStyle">GtkReliefStyle</link> <link linkend="gtk-toolbar-get-relief-style">gtk_toolbar_get_relief_style</link> (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-append-item">gtk_toolbar_append_item</link>         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-prepend-item">gtk_toolbar_prepend_item</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-insert-item">gtk_toolbar_insert_item</link>         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="gint">gint</link> position);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-append-space">gtk_toolbar_append_space</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-prepend-space">gtk_toolbar_prepend_space</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-insert-space">gtk_toolbar_insert_space</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> position);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-append-element">gtk_toolbar_append_element</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarChildType">GtkToolbarChildType</link> type,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-prepend-element">gtk_toolbar_prepend_element</link>     (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarChildType">GtkToolbarChildType</link> type,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-insert-element">gtk_toolbar_insert_element</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarChildType">GtkToolbarChildType</link> type,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="gint">gint</link> position);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-append-widget">gtk_toolbar_append_widget</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-prepend-widget">gtk_toolbar_prepend_widget</link>      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-insert-widget">gtk_toolbar_insert_widget</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="gint">gint</link> position);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-set-style">gtk_toolbar_set_style</link>           (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarStyle">GtkToolbarStyle</link> style);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-toolbar-insert-stock">gtk_toolbar_insert_stock</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="gchar">gchar</link> *stock_id,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="gint">gint</link> position);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-set-icon-size">gtk_toolbar_set_icon_size</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkIconSize">GtkIconSize</link> icon_size);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-remove-space">gtk_toolbar_remove_space</link>        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> position);
<link linkend="void">void</link>        <link linkend="gtk-toolbar-unset-style">gtk_toolbar_unset_style</link>         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----GtkToolbar
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GtkToolbar implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkToolbar--orientation">orientation</link>&quot;          <link linkend="GtkOrientation">GtkOrientation</link>       : Read / Write
  &quot;<link linkend="GtkToolbar--show-arrow">show-arrow</link>&quot;           <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkToolbar--toolbar-style">toolbar-style</link>&quot;        <link linkend="GtkToolbarStyle">GtkToolbarStyle</link>      : Read / Write
</synopsis>
</refsect1>
<refsect1>
<title>Child Properties</title>
<synopsis>

  &quot;<link linkend="GtkToolbar--expand">expand</link>&quot;               <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="GtkToolbar--homogeneous">homogeneous</link>&quot;          <link linkend="gboolean">gboolean</link>             : Read / Write
</synopsis>
</refsect1>
<refsect1>
<title>Style Properties</title>
<synopsis>

  &quot;<link linkend="GtkToolbar--button-relief">button-relief</link>&quot;        <link linkend="GtkReliefStyle">GtkReliefStyle</link>       : Read
  &quot;<link linkend="GtkToolbar--internal-padding">internal-padding</link>&quot;     <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkToolbar--shadow-type">shadow-type</link>&quot;          <link linkend="GtkShadowType">GtkShadowType</link>        : Read
  &quot;<link linkend="GtkToolbar--space-size">space-size</link>&quot;           <link linkend="gint">gint</link>                 : Read
  &quot;<link linkend="GtkToolbar--space-style">space-style</link>&quot;          <link linkend="GtkToolbarSpaceStyle">GtkToolbarSpaceStyle</link> : Read
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GtkToolbar-focus-home-or-end">focus-home-or-end</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="gboolean">gboolean</link> focus_home,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkToolbar-move-focus">move-focus</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="GtkDirectionType">GtkDirectionType</link> dir,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkToolbar-orientation-changed">orientation-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="GtkOrientation">GtkOrientation</link> orientation,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkToolbar-popup-context-menu">popup-context-menu</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="gint">gint</link> x,
                                            <link linkend="gint">gint</link> y,
                                            <link linkend="gint">gint</link> button,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GtkToolbar-style-changed">style-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="GtkToolbarStyle">GtkToolbarStyle</link> style,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
A toolbar is created with a call to <link linkend="gtk-toolbar-new"><function>gtk_toolbar_new()</function></link>.
</para>
<para>
A toolbar can contain instances of a subclass of <link linkend="GtkToolItem"><type>GtkToolItem</type></link>. To add
a <link linkend="GtkToolItem"><type>GtkToolItem</type></link> to the a toolbar, use <link linkend="gtk-toolbar-insert"><function>gtk_toolbar_insert()</function></link>. To remove
an item from the toolbar use <link linkend="gtk-container-remove"><function>gtk_container_remove()</function></link>. To add a button
to the toolbar, add an instance of <link linkend="GtkToolButton"><type>GtkToolButton</type></link>.
</para>
<para>
Toolbar items can be visually grouped by adding instances of
<link linkend="GtkSeparatorToolItem"><type>GtkSeparatorToolItem</type></link> to the toolbar. If a <link linkend="GtkSeparatorToolItem"><type>GtkSeparatorToolItem</type></link> has
the "expand" property set to <link linkend="TRUE-CAPS"><type>TRUE</type></link> and the "draw" property set to
<link linkend="FALSE-CAPS"><type>FALSE</type></link> the effect is to force all following items to the end of the
toolbar.
</para>
<para>
Creating a context menu for the toolbar can be done by connecting to
the <link linkend="GtkToolbar"><type>GtkToolbar</type></link>::popup-context-menu signal.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkToolbar-struct"/>struct GtkToolbar</title>
<indexterm><primary>GtkToolbar</primary></indexterm><programlisting>struct GtkToolbar {
  gint             num_children;
  GList           *children;
  GtkOrientation   orientation;
  GtkToolbarStyle  style;
  GtkIconSize      icon_size;
  
  GtkTooltips     *tooltips;
  
};
</programlisting>
<para>
The <link linkend="GtkToolbar"><type>GtkToolbar</type></link> struct only contains private data and should only be
accessed through the function described below.
</para></refsect2>
<refsect2>
<title><anchor id="GtkToolbarChildType"/>enum GtkToolbarChildType</title>
<indexterm><primary>GtkToolbarChildType</primary></indexterm><programlisting>typedef enum
{
  GTK_TOOLBAR_CHILD_SPACE,
  GTK_TOOLBAR_CHILD_BUTTON,
  GTK_TOOLBAR_CHILD_TOGGLEBUTTON,
  GTK_TOOLBAR_CHILD_RADIOBUTTON,
  GTK_TOOLBAR_CHILD_WIDGET
} GtkToolbarChildType;
</programlisting>
<warning><para><literal>GtkToolbarChildType</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
<link linkend="GtkToolbarChildType"><type>GtkToolbarChildType</type></link> is used to set the type of new elements that are added 
to a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</para><variablelist role="enum">
<varlistentry>
<term><literal>GTK_TOOLBAR_CHILD_SPACE</literal></term>
<listitem><simpara>a space in the style of the toolbar's <link linkend="GtkToolbarSpaceStyle"><type>GtkToolbarSpaceStyle</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_TOOLBAR_CHILD_BUTTON</literal></term>
<listitem><simpara>a <link linkend="GtkButton"><type>GtkButton</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_TOOLBAR_CHILD_TOGGLEBUTTON</literal></term>
<listitem><simpara>a <link linkend="GtkToggleButton"><type>GtkToggleButton</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_TOOLBAR_CHILD_RADIOBUTTON</literal></term>
<listitem><simpara>a <link linkend="GtkRadioButton"><type>GtkRadioButton</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_TOOLBAR_CHILD_WIDGET</literal></term>
<listitem><simpara>a standard <link linkend="GtkWidget"><type>GtkWidget</type></link>.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GtkToolbarSpaceStyle"/>enum GtkToolbarSpaceStyle</title>
<indexterm><primary>GtkToolbarSpaceStyle</primary></indexterm><programlisting>typedef enum
{
  GTK_TOOLBAR_SPACE_EMPTY,
  GTK_TOOLBAR_SPACE_LINE
} GtkToolbarSpaceStyle;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GtkToolbarChild"/>struct GtkToolbarChild</title>
<indexterm><primary>GtkToolbarChild</primary></indexterm><programlisting>struct GtkToolbarChild {

  GtkToolbarChildType type;
  GtkWidget *widget;
  GtkWidget *icon;
  GtkWidget *label;
};
</programlisting>
<warning><para><literal>GtkToolbarChild</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-new"/>gtk_toolbar_new ()</title>
<indexterm><primary>gtk_toolbar_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_new                 (void);</programlisting>
<para>
Creates a new toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the newly-created toolbar.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-insert"/>gtk_toolbar_insert ()</title>
<indexterm><primary>gtk_toolbar_insert</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_insert              (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolItem">GtkToolItem</link> *item,
                                             <link linkend="gint">gint</link> pos);</programlisting>
<para>
Insert a <link linkend="GtkToolItem"><type>GtkToolItem</type></link> into the toolbar at position <parameter>pos</parameter>. If <parameter>pos</parameter> is
0 the item is prepended to the start of the toolbar. If <parameter>pos</parameter> is
negative, the item is appended to the end of the toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolItem"><type>GtkToolItem</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&nbsp;:</term>
<listitem><simpara> the position of the new item
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-item-index"/>gtk_toolbar_get_item_index ()</title>
<indexterm><primary>gtk_toolbar_get_item_index</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_toolbar_get_item_index      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolItem">GtkToolItem</link> *item);</programlisting>
<para>
Returns the position of <parameter>item</parameter> on the toolbar, starting from 0.
It is an error if <parameter>item</parameter> is not a child of the toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolItem"><type>GtkToolItem</type></link> that is a child of <parameter>toolbar</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the position of item on the toolbar.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-n-items"/>gtk_toolbar_get_n_items ()</title>
<indexterm><primary>gtk_toolbar_get_n_items</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_toolbar_get_n_items         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Returns the number of items on the toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the number of items on the toolbar

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-nth-item"/>gtk_toolbar_get_nth_item ()</title>
<indexterm><primary>gtk_toolbar_get_nth_item</primary></indexterm><programlisting><link linkend="GtkToolItem">GtkToolItem</link>* gtk_toolbar_get_nth_item       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> n);</programlisting>
<para>
Returns the <parameter>n</parameter><!-- -->'s item on <parameter>toolbar</parameter>, or <literal>NULL</literal> if the
toolbar does not contain an <parameter>n</parameter><!-- -->'th item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara> A position on the toolbar
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The <parameter>n</parameter><!-- -->'th <link linkend="GtkToolItem"><type>GtkToolItem</type></link> on <parameter>toolbar</parameter>, or <literal>NULL</literal> if there
isn't an <parameter>n</parameter><!-- -->th item.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-drop-index"/>gtk_toolbar_get_drop_index ()</title>
<indexterm><primary>gtk_toolbar_get_drop_index</primary></indexterm><programlisting><link linkend="gint">gint</link>        gtk_toolbar_get_drop_index      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);</programlisting>
<para>
Returns the position corresponding to the indicated point on
<parameter>toolbar</parameter>. This is useful when dragging items to the toolbar:
this function returns the position a new item should be
inserted.
</para>
<para>
<parameter>x</parameter> and <parameter>y</parameter> are in <parameter>toolbar</parameter> coordinates.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate of a point on the toolbar
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate of a point on the toolbar
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The position corresponding to the point (<parameter>x</parameter>, <parameter>y</parameter>) on the toolbar.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-set-drop-highlight-item"/>gtk_toolbar_set_drop_highlight_item ()</title>
<indexterm><primary>gtk_toolbar_set_drop_highlight_item</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_set_drop_highlight_item
                                            (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolItem">GtkToolItem</link> *tool_item,
                                             <link linkend="gint">gint</link> index);</programlisting>
<para>
Highlights <parameter>toolbar</parameter> to give an idea of what it would look like
if <parameter>item</parameter> was added to <parameter>toolbar</parameter> at position indicated by <parameter>index</parameter>. If <parameter>item</parameter>
is <literal>NULL</literal>, highlighting is turned off. In that case <parameter>index</parameter> is ignored.
</para>
<para>
The <parameter>tool_item</parameter> passed to this function must not be part of any widget
hierarchy. When an item is set as drop highlight item it can not
added to any widget hierarchy or used as highlight item for another
toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tool_item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolItem"><type>GtkToolItem</type></link>, or <literal>NULL</literal> to turn of highlighting
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&nbsp;:</term>
<listitem><simpara> a position on <parameter>toolbar</parameter>
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-set-show-arrow"/>gtk_toolbar_set_show_arrow ()</title>
<indexterm><primary>gtk_toolbar_set_show_arrow</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_set_show_arrow      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gboolean">gboolean</link> show_arrow);</programlisting>
<para>
Sets whether to show an overflow menu when
<parameter>toolbar</parameter> doesn't have room for all items on it. If <literal>TRUE</literal>,
items that there are not room are available through an
overflow menu.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>show_arrow</parameter>&nbsp;:</term>
<listitem><simpara> Whether to show an overflow menu
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-set-orientation"/>gtk_toolbar_set_orientation ()</title>
<indexterm><primary>gtk_toolbar_set_orientation</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_set_orientation     (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkOrientation">GtkOrientation</link> orientation);</programlisting>
<para>
Sets whether a toolbar should appear horizontally or vertically.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> a new <link linkend="GtkOrientation"><type>GtkOrientation</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-set-tooltips"/>gtk_toolbar_set_tooltips ()</title>
<indexterm><primary>gtk_toolbar_set_tooltips</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_set_tooltips        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gboolean">gboolean</link> enable);</programlisting>
<para>
Sets if the tooltips of a toolbar should be active or not.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enable</parameter>&nbsp;:</term>
<listitem><simpara> set to <literal>FALSE</literal> to disable the tooltips, or <literal>TRUE</literal> to enable them.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-unset-icon-size"/>gtk_toolbar_unset_icon_size ()</title>
<indexterm><primary>gtk_toolbar_unset_icon_size</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_unset_icon_size     (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<warning><para><literal>gtk_toolbar_unset_icon_size</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Unsets toolbar icon size set with <link linkend="gtk-toolbar-set-icon-size"><function>gtk_toolbar_set_icon_size()</function></link>, so that
user preferences will be used to determine the icon size.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-show-arrow"/>gtk_toolbar_get_show_arrow ()</title>
<indexterm><primary>gtk_toolbar_get_show_arrow</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_toolbar_get_show_arrow      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Returns whether the toolbar has an overflow menu.
See <link linkend="gtk-toolbar-set-show-arrow"><function>gtk_toolbar_set_show_arrow()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-orientation"/>gtk_toolbar_get_orientation ()</title>
<indexterm><primary>gtk_toolbar_get_orientation</primary></indexterm><programlisting><link linkend="GtkOrientation">GtkOrientation</link> gtk_toolbar_get_orientation  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Retrieves the current orientation of the toolbar. See
<link linkend="gtk-toolbar-set-orientation"><function>gtk_toolbar_set_orientation()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the orientation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-style"/>gtk_toolbar_get_style ()</title>
<indexterm><primary>gtk_toolbar_get_style</primary></indexterm><programlisting><link linkend="GtkToolbarStyle">GtkToolbarStyle</link> gtk_toolbar_get_style       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Retrieves whether the toolbar has text, icons, or both . See
<link linkend="gtk-toolbar-set-style"><function>gtk_toolbar_set_style()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the current style of <parameter>toolbar</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-icon-size"/>gtk_toolbar_get_icon_size ()</title>
<indexterm><primary>gtk_toolbar_get_icon_size</primary></indexterm><programlisting><link linkend="GtkIconSize">GtkIconSize</link> gtk_toolbar_get_icon_size       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Retrieves the icon size fo the toolbar. See <link linkend="gtk-toolbar-set-icon-size"><function>gtk_toolbar_set_icon_size()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the current icon size for the icons on the toolbar.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-tooltips"/>gtk_toolbar_get_tooltips ()</title>
<indexterm><primary>gtk_toolbar_get_tooltips</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gtk_toolbar_get_tooltips        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Retrieves whether tooltips are enabled. See
<link linkend="gtk-toolbar-set-tooltips"><function>gtk_toolbar_set_tooltips()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if tooltips are enabled
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-get-relief-style"/>gtk_toolbar_get_relief_style ()</title>
<indexterm><primary>gtk_toolbar_get_relief_style</primary></indexterm><programlisting><link linkend="GtkReliefStyle">GtkReliefStyle</link> gtk_toolbar_get_relief_style (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Returns the relief style of buttons on <parameter>toolbar</parameter>. See
<link linkend="gtk-button-set-relief"><function>gtk_button_set_relief()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The relief style of buttons on <parameter>toolbar</parameter>.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-append-item"/>gtk_toolbar_append_item ()</title>
<indexterm><primary>gtk_toolbar_append_item</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_append_item         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<warning><para><literal>gtk_toolbar_append_item</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts a new item into the toolbar. You must specify the position
in the toolbar where it will be inserted.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> give your toolbar button a label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> a string that appears when the user holds the mouse over this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> use with <link linkend="GtkTipsQuery"><type>GtkTipsQuery</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that should be used as the button's icon.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> the function to be executed when the button is pressed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to any data you wish to be passed to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new toolbar item as a <link linkend="GtkWidget"><type>GtkWidget</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-prepend-item"/>gtk_toolbar_prepend_item ()</title>
<indexterm><primary>gtk_toolbar_prepend_item</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_prepend_item        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<warning><para><literal>gtk_toolbar_prepend_item</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a new button to the beginning (top or left edges) of the given toolbar.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> give your toolbar button a label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> a string that appears when the user holds the mouse over this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> use with <link linkend="GtkTipsQuery"><type>GtkTipsQuery</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that should be used as the button's icon.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> the function to be executed when the button is pressed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to any data you wish to be passed to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new toolbar item as a <link linkend="GtkWidget"><type>GtkWidget</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-insert-item"/>gtk_toolbar_insert_item ()</title>
<indexterm><primary>gtk_toolbar_insert_item</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_insert_item         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_toolbar_insert_item</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts a new item into the toolbar. You must specify the position in the
toolbar where it will be inserted.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> give your toolbar button a label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> a string that appears when the user holds the mouse over this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> use with <link linkend="GtkTipsQuery"><type>GtkTipsQuery</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that should be used as the button's icon.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> the function to be executed when the button is pressed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to any data you wish to be passed to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> the number of widgets to insert this item after.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new toolbar item as a <link linkend="GtkWidget"><type>GtkWidget</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-append-space"/>gtk_toolbar_append_space ()</title>
<indexterm><primary>gtk_toolbar_append_space</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_append_space        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<warning><para><literal>gtk_toolbar_append_space</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a new space to the end of the toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-prepend-space"/>gtk_toolbar_prepend_space ()</title>
<indexterm><primary>gtk_toolbar_prepend_space</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_prepend_space       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<warning><para><literal>gtk_toolbar_prepend_space</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a new space to the beginning of the toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-insert-space"/>gtk_toolbar_insert_space ()</title>
<indexterm><primary>gtk_toolbar_insert_space</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_insert_space        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_toolbar_insert_space</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts a new space in the toolbar at the specified position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> the number of widgets after which a space should be inserted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-append-element"/>gtk_toolbar_append_element ()</title>
<indexterm><primary>gtk_toolbar_append_element</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_append_element      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarChildType">GtkToolbarChildType</link> type,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<warning><para><literal>gtk_toolbar_append_element</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a new element to the end of a toolbar.
</para>
<para>
If <parameter>type</parameter> == <literal>GTK_TOOLBAR_CHILD_WIDGET</literal>, <parameter>widget</parameter> is used as the new element.
If <parameter>type</parameter> == <literal>GTK_TOOLBAR_CHILD_RADIOBUTTON</literal>, <parameter>widget</parameter> is used to determine
the radio group for the new element. In all other cases, <parameter>widget</parameter> must
be <literal>NULL</literal>.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> a value of type <link linkend="GtkToolbarChildType"><type>GtkToolbarChildType</type></link> that determines what <parameter>widget</parameter> will be.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link>, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> the element's label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> the element's tooltip.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> used for context-sensitive help about this toolbar element.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that provides pictorial representation of the element's function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> the function to be executed when the button is pressed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> any data you wish to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new toolbar element as a <link linkend="GtkWidget"><type>GtkWidget</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-prepend-element"/>gtk_toolbar_prepend_element ()</title>
<indexterm><primary>gtk_toolbar_prepend_element</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_prepend_element     (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarChildType">GtkToolbarChildType</link> type,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<warning><para><literal>gtk_toolbar_prepend_element</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a new element to the beginning of a toolbar.
</para>
<para>
If <parameter>type</parameter> == <literal>GTK_TOOLBAR_CHILD_WIDGET</literal>, <parameter>widget</parameter> is used as the new element.
If <parameter>type</parameter> == <literal>GTK_TOOLBAR_CHILD_RADIOBUTTON</literal>, <parameter>widget</parameter> is used to determine
the radio group for the new element. In all other cases, <parameter>widget</parameter> must
be <literal>NULL</literal>.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> a value of type <link linkend="GtkToolbarChildType"><type>GtkToolbarChildType</type></link> that determines what <parameter>widget</parameter> will be.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> the element's label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> the element's tooltip.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> used for context-sensitive help about this toolbar element.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that provides pictorial representation of the element's function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> the function to be executed when the button is pressed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> any data you wish to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new toolbar element as a <link linkend="GtkWidget"><type>GtkWidget</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-insert-element"/>gtk_toolbar_insert_element ()</title>
<indexterm><primary>gtk_toolbar_insert_element</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_insert_element      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarChildType">GtkToolbarChildType</link> type,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *text,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkWidget">GtkWidget</link> *icon,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_toolbar_insert_element</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts a new element in the toolbar at the given position. 
</para>
<para>
If <parameter>type</parameter> == <literal>GTK_TOOLBAR_CHILD_WIDGET</literal>, <parameter>widget</parameter> is used as the new element.
If <parameter>type</parameter> == <literal>GTK_TOOLBAR_CHILD_RADIOBUTTON</literal>, <parameter>widget</parameter> is used to determine
the radio group for the new element. In all other cases, <parameter>widget</parameter> must
be <literal>NULL</literal>.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> a value of type <link linkend="GtkToolbarChildType"><type>GtkToolbarChildType</type></link> that determines what <parameter>widget</parameter>
  will be.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link>, or <literal>NULL</literal>. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> the element's label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> the element's tooltip.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> used for context-sensitive help about this toolbar element.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that provides pictorial representation of the element's function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> the function to be executed when the button is pressed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> any data you wish to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> the number of widgets to insert this element after.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new toolbar element as a <link linkend="GtkWidget"><type>GtkWidget</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-append-widget"/>gtk_toolbar_append_widget ()</title>
<indexterm><primary>gtk_toolbar_append_widget</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_append_widget       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text);</programlisting>
<warning><para><literal>gtk_toolbar_append_widget</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a widget to the end of the given toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> to add to the toolbar. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> the element's tooltip.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> used for context-sensitive help about this toolbar element.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-prepend-widget"/>gtk_toolbar_prepend_widget ()</title>
<indexterm><primary>gtk_toolbar_prepend_widget</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_prepend_widget      (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text);</programlisting>
<warning><para><literal>gtk_toolbar_prepend_widget</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a widget to the beginning of the given toolbar.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> to add to the toolbar. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> the element's tooltip.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> used for context-sensitive help about this toolbar element.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-insert-widget"/>gtk_toolbar_insert_widget ()</title>
<indexterm><primary>gtk_toolbar_insert_widget</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_insert_widget       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_toolbar_insert_widget</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts a widget in the toolbar at the given position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> to add to the toolbar. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> the element's tooltip.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> used for context-sensitive help about this toolbar element.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> the number of widgets to insert this widget after.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-set-style"/>gtk_toolbar_set_style ()</title>
<indexterm><primary>gtk_toolbar_set_style</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_set_style           (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkToolbarStyle">GtkToolbarStyle</link> style);</programlisting>
<para>
Alters the view of <parameter>toolbar</parameter> to display either icons only, text only, or both.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> the new style for <parameter>toolbar</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-insert-stock"/>gtk_toolbar_insert_stock ()</title>
<indexterm><primary>gtk_toolbar_insert_stock</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_toolbar_insert_stock        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="gchar">gchar</link> *stock_id,
                                             const <link linkend="char">char</link> *tooltip_text,
                                             const <link linkend="char">char</link> *tooltip_private_text,
                                             <link linkend="GtkSignalFunc">GtkSignalFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_toolbar_insert_stock</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Inserts a stock item at the specified position of the toolbar.  If
<parameter>stock_id</parameter> is not a known stock item ID, it's inserted verbatim,
except that underscores used to mark mnemonics are removed.
</para>
<para>
<parameter>callback</parameter> must be a pointer to a function taking a <link linkend="GtkWidget"><type>GtkWidget</type></link> and a gpointer as
arguments. Use the <link linkend="GTK-SIGNAL-FUNC-CAPS"><function>GTK_SIGNAL_FUNC()</function></link> to cast the function to <link linkend="GtkSignalFunc"><type>GtkSignalFunc</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stock_id</parameter>&nbsp;:</term>
<listitem><simpara> The id of the stock item you want to insert
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_text</parameter>&nbsp;:</term>
<listitem><simpara> The text in the tooltip of the toolbar button
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip_private_text</parameter>&nbsp;:</term>
<listitem><simpara> The private text of the tooltip
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> The callback called when the toolbar button is clicked.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data passed to callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> The position the button shall be inserted at.
           -1 means at the end.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the inserted widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-set-icon-size"/>gtk_toolbar_set_icon_size ()</title>
<indexterm><primary>gtk_toolbar_set_icon_size</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_set_icon_size       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="GtkIconSize">GtkIconSize</link> icon_size);</programlisting>
<warning><para><literal>gtk_toolbar_set_icon_size</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This function sets the size of stock icons in the toolbar. You
can call it both before you add the icons and after they've been
added. The size you set will override user preferences for the default
icon size.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_size</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkIconSize"><type>GtkIconSize</type></link> that stock icons in the toolbar shall have.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-remove-space"/>gtk_toolbar_remove_space ()</title>
<indexterm><primary>gtk_toolbar_remove_space</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_remove_space        (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             <link linkend="gint">gint</link> position);</programlisting>
<warning><para><literal>gtk_toolbar_remove_space</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Removes a space from the specified position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> the index of the space to remove.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-toolbar-unset-style"/>gtk_toolbar_unset_style ()</title>
<indexterm><primary>gtk_toolbar_unset_style</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_toolbar_unset_style         (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Unsets a toolbar style set with <link linkend="gtk-toolbar-set-style"><function>gtk_toolbar_set_style()</function></link>, so that
user preferences will be used to determine the toolbar style.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkToolbar"><type>GtkToolbar</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkToolbar--orientation"/>&quot;<literal>orientation</literal>&quot; (<link linkend="GtkOrientation">GtkOrientation</link> : Read / Write)</term>
<listitem>
<para>The orientation of the toolbar.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--show-arrow"/>&quot;<literal>show-arrow</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>If an arrow should be shown if the toolbar doesn't fit.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--toolbar-style"/>&quot;<literal>toolbar-style</literal>&quot; (<link linkend="GtkToolbarStyle">GtkToolbarStyle</link> : Read / Write)</term>
<listitem>
<para>How to draw the toolbar.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>
<refsect1>
<title>Child Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkToolbar--expand"/>&quot;<literal>expand</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Whether the item should receive extra space when the toolbar grows.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--homogeneous"/>&quot;<literal>homogeneous</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para>Whether the item should be the same size as other homogeneous items.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>
<refsect1>
<title>Style Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkToolbar--button-relief"/>&quot;<literal>button-relief</literal>&quot; (<link linkend="GtkReliefStyle">GtkReliefStyle</link> : Read)</term>
<listitem>
<para>Type of bevel around toolbar buttons.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--internal-padding"/>&quot;<literal>internal-padding</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Amount of border space between the toolbar shadow and the buttons.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--shadow-type"/>&quot;<literal>shadow-type</literal>&quot; (<link linkend="GtkShadowType">GtkShadowType</link> : Read)</term>
<listitem>
<para>Style of bevel around the toolbar.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--space-size"/>&quot;<literal>space-size</literal>&quot; (<link linkend="gint">gint</link> : Read)</term>
<listitem>
<para>Size of spacers.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkToolbar--space-style"/>&quot;<literal>space-style</literal>&quot; (<link linkend="GtkToolbarSpaceStyle">GtkToolbarSpaceStyle</link> : Read)</term>
<listitem>
<para>Whether spacers are vertical lines or just blank.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GtkToolbar-focus-home-or-end"/>The &quot;focus-home-or-end&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="gboolean">gboolean</link> focus_home,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
A keybinding signal used internally by GTK+. This signal can't
be used in application code</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkToolbar"><type>GtkToolbar</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>focus_home</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> if the first item should be focused
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the signal was handled, <literal>FALSE</literal> if not
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkToolbar-move-focus"/>The &quot;move-focus&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="GtkDirectionType">GtkDirectionType</link> dir,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
A keybinding signal used internally by GTK+. This signal can't
be used in application code.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkToolbar"><type>GtkToolbar</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkDirection"><type>GtkDirection</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the signal was handled, <literal>FALSE</literal> if not
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkToolbar-orientation-changed"/>The &quot;orientation-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="GtkOrientation">GtkOrientation</link> orientation,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the orientation of the toolbar changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> the object which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> the new <link linkend="GtkOrientation"><type>GtkOrientation</type></link> of the toolbar
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkToolbar-popup-context-menu"/>The &quot;popup-context-menu&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="gint">gint</link> x,
                                            <link linkend="gint">gint</link> y,
                                            <link linkend="gint">gint</link> button,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the user right-clicks the toolbar or uses the
keybinding to display a popup menu.
</para>
<para>
Application developers should handle this signal if they want
to display a context menu on the toolbar. The context-menu should
appear at the coordinates given by <parameter>x</parameter> and <parameter>y</parameter>. The mouse button
number is given by the <parameter>button</parameter> parameter. If the menu was popped
up using the keybaord, <parameter>button</parameter> is -1.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkToolbar"><type>GtkToolbar</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the point where the menu should appear
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the point where the menu should appear
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>button</parameter>&nbsp;:</term>
<listitem><simpara> the mouse button the user pressed, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> return <literal>TRUE</literal> if the signal was handled, <literal>FALSE</literal> if not
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkToolbar-style-changed"/>The &quot;style-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                            <link linkend="GtkToolbarStyle">GtkToolbarStyle</link> style,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the style of the toolbar changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GtkToolbar"><type>GtkToolbar</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> the new <link linkend="GtkToolbarStyle"><type>GtkToolbarStyle</type></link> of the toolbar
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<variablelist>

<varlistentry>
<term><link linkend="GtkToolItem"><type>GtkToolItem</type></link></term>
<listitem><para>Base class of widgets that can be added to a toolbar.</para></listitem>
</varlistentry>

</variablelist>
</para>
</refsect1>

</refentry>
