<refentry id="GtkImage">
<refmeta>
<refentrytitle>GtkImage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkImage</refname><refpurpose>A widget displaying an image</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;


struct      <link linkend="GtkImage-struct">GtkImage</link>;
enum        <link linkend="GtkImageType">GtkImageType</link>;
<link linkend="void">void</link>        <link linkend="gtk-image-get-icon-set">gtk_image_get_icon_set</link>          (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GtkIconSet">GtkIconSet</link> **icon_set,
                                             <link linkend="GtkIconSize">GtkIconSize</link> *size);
<link linkend="void">void</link>        <link linkend="gtk-image-get-image">gtk_image_get_image</link>             (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> **gdk_image,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="gtk-image-get-pixbuf">gtk_image_get_pixbuf</link>            (<link linkend="GtkImage">GtkImage</link> *image);
<link linkend="void">void</link>        <link linkend="gtk-image-get-pixmap">gtk_image_get_pixmap</link>            (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixmap">GdkPixmap</link> **pixmap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask);
<link linkend="void">void</link>        <link linkend="gtk-image-get-stock">gtk_image_get_stock</link>             (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="gchar">gchar</link> **stock_id,
                                             <link linkend="GtkIconSize">GtkIconSize</link> *size);
<link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link>* <link linkend="gtk-image-get-animation">gtk_image_get_animation</link> (<link linkend="GtkImage">GtkImage</link> *image);
<link linkend="GtkImageType">GtkImageType</link> <link linkend="gtk-image-get-storage-type">gtk_image_get_storage_type</link>     (<link linkend="GtkImage">GtkImage</link> *image);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-file">gtk_image_new_from_file</link>         (const <link linkend="gchar">gchar</link> *filename);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-icon-set">gtk_image_new_from_icon_set</link>     (<link linkend="GtkIconSet">GtkIconSet</link> *icon_set,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-image">gtk_image_new_from_image</link>        (<link linkend="GdkImage">GdkImage</link> *image,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-pixbuf">gtk_image_new_from_pixbuf</link>       (<link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-pixmap">gtk_image_new_from_pixmap</link>       (<link linkend="GdkPixmap">GdkPixmap</link> *pixmap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-stock">gtk_image_new_from_stock</link>        (const <link linkend="gchar">gchar</link> *stock_id,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new-from-animation">gtk_image_new_from_animation</link>    (<link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link> *animation);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-file">gtk_image_set_from_file</link>         (<link linkend="GtkImage">GtkImage</link> *image,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-icon-set">gtk_image_set_from_icon_set</link>     (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GtkIconSet">GtkIconSet</link> *icon_set,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-image">gtk_image_set_from_image</link>        (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> *gdk_image,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-pixbuf">gtk_image_set_from_pixbuf</link>       (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-pixmap">gtk_image_set_from_pixmap</link>       (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixmap">GdkPixmap</link> *pixmap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-stock">gtk_image_set_from_stock</link>        (<link linkend="GtkImage">GtkImage</link> *image,
                                             const <link linkend="gchar">gchar</link> *stock_id,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);
<link linkend="void">void</link>        <link linkend="gtk-image-set-from-animation">gtk_image_set_from_animation</link>    (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link> *animation);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gtk-image-new">gtk_image_new</link>                   (void);
<link linkend="void">void</link>        <link linkend="gtk-image-set">gtk_image_set</link>                   (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> *val,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);
<link linkend="void">void</link>        <link linkend="gtk-image-get">gtk_image_get</link>                   (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> **val,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkMisc">GtkMisc</link>
                     +----GtkImage
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GtkImage implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GtkImage--file">file</link>&quot;                 <link linkend="gchararray">gchararray</link>           : Write
  &quot;<link linkend="GtkImage--icon-set">icon-set</link>&quot;             <link linkend="GtkIconSet">GtkIconSet</link>           : Read / Write
  &quot;<link linkend="GtkImage--icon-size">icon-size</link>&quot;            <link linkend="gint">gint</link>                 : Read / Write
  &quot;<link linkend="GtkImage--image">image</link>&quot;                <link linkend="GdkImage">GdkImage</link>             : Read / Write
  &quot;<link linkend="GtkImage--mask">mask</link>&quot;                 <link linkend="GdkPixmap">GdkPixmap</link>            : Read / Write
  &quot;<link linkend="GtkImage--pixbuf">pixbuf</link>&quot;               <link linkend="GdkPixbuf">GdkPixbuf</link>            : Read / Write
  &quot;<link linkend="GtkImage--pixbuf-animation">pixbuf-animation</link>&quot;     <link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link>   : Read / Write
  &quot;<link linkend="GtkImage--pixmap">pixmap</link>&quot;               <link linkend="GdkPixmap">GdkPixmap</link>            : Read / Write
  &quot;<link linkend="GtkImage--stock">stock</link>&quot;                <link linkend="gchararray">gchararray</link>           : Read / Write
  &quot;<link linkend="GtkImage--storage-type">storage-type</link>&quot;         <link linkend="GtkImageType">GtkImageType</link>         : Read
</synopsis>
</refsect1>



<refsect1>
<title>Description</title>
<para>
The <link linkend="GtkImage"><type>GtkImage</type></link> widget displays an image. Various kinds of object 
can be displayed as an image; most typically, you would load a 
<link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> ("pixel buffer") from a file, and then display that. 
There's a convenience function to do this, <link linkend="gtk-image-new-from-file"><function>gtk_image_new_from_file()</function></link>,
used as follows:
<informalexample><programlisting>
  GtkWidget *image;
  image = gtk_image_new_from_file ("myfile.png");
</programlisting></informalexample>
If the file isn't loaded successfully, the image will contain a
"broken image" icon similar to that used in many web browsers.
If you want to handle errors in loading the file yourself, 
for example by displaying an error message, then load the image with
<link linkend="gdk-pixbuf-new-from-file"><function>gdk_pixbuf_new_from_file()</function></link>, then create the <link linkend="GtkImage"><type>GtkImage</type></link> with 
<link linkend="gtk-image-new-from-pixbuf"><function>gtk_image_new_from_pixbuf()</function></link>.
</para>
<para>
The image file may contain an animation, if so the <link linkend="GtkImage"><type>GtkImage</type></link> will 
display an animation (<link linkend="GdkPixbufAnimation"><type>GdkPixbufAnimation</type></link>) instead of a static image.
</para>
<para>
<link linkend="GtkImage"><type>GtkImage</type></link> is a subclass of <link linkend="GtkMisc"><type>GtkMisc</type></link>, which implies that you can 
align it (center, left, right) and add padding to it, using 
<link linkend="GtkMisc"><type>GtkMisc</type></link> methods.
</para>
<para>
<link linkend="GtkImage"><type>GtkImage</type></link> is a "no window" widget (has no <link linkend="GdkWindow"><type>GdkWindow</type></link> of its own), 
so by default does not receive events. If you want to receive events
on the image, such as button clicks, place the image inside a 
<link linkend="GtkEventBox"><type>GtkEventBox</type></link>, then connect to the event signals on the event box.
<example>
<title>Handling button press events on a 
<structname>GtkImage</structname>.</title>
<programlisting>
  static gboolean
  button_press_callback (GtkWidget      *event_box, 
                         GdkEventButton *event,
                         gpointer        data)
  {
    g_print ("Event box clicked at coordinates &percnt;f,&percnt;f\n", 
             event->x, event->y);

    /* Returning TRUE means we handled the event, so the signal 
     * emission should be stopped (don't call any further 
     * callbacks that may be connected). Return FALSE
     * to continue invoking callbacks.
     */
    return TRUE;
  }

  static GtkWidget*
  create_image (void)
  {
    GtkWidget *image;
    GtkWidget *event_box;

    image = gtk_image_new_from_file ("myfile.png");

    event_box = gtk_event_box_new (<!-- -->);

    gtk_container_add (GTK_CONTAINER (event_box), image);

    g_signal_connect (G_OBJECT (event_box), 
                      "button_press_event",
                      G_CALLBACK (button_press_callback),
                      image);

    return image;
  }
</programlisting>
</example>
</para>
<para>
When handling events on the event box, keep in mind that coordinates
in the image may be different from event box coordinates due to 
the alignment and padding settings on the image (see <link linkend="GtkMisc"><type>GtkMisc</type></link>). 
The simplest way to solve this is to set the alignment to 0.0
(left/top), and set the padding to zero. Then the origin of 
the image will be the same as the origin of the event box.
</para>

<para>
Sometimes an application will want to avoid depending on external data
files, such as image files. GTK+ comes with a program to avoid this,
called <application>gdk-pixbuf-csource</application>. This program
allows you to convert an image into a C variable declaration, which
can then be loaded into a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> using
<link linkend="gdk-pixbuf-new-from-inline"><function>gdk_pixbuf_new_from_inline()</function></link>.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GtkImage-struct"/>struct GtkImage</title>
<indexterm><primary>GtkImage</primary></indexterm><programlisting>struct GtkImage;</programlisting>
<para>
This struct contain private data only and should be accessed by the functions
below.
</para></refsect2>
<refsect2>
<title><anchor id="GtkImageType"/>enum GtkImageType</title>
<indexterm><primary>GtkImageType</primary></indexterm><programlisting>typedef enum
{
  GTK_IMAGE_EMPTY,
  GTK_IMAGE_PIXMAP,
  GTK_IMAGE_IMAGE,
  GTK_IMAGE_PIXBUF,
  GTK_IMAGE_STOCK,
  GTK_IMAGE_ICON_SET,
  GTK_IMAGE_ANIMATION
} GtkImageType;
</programlisting>
<para>
Describes the image data representation used by a <link linkend="GtkImage"><type>GtkImage</type></link>. If you
want to get the image from the widget, you can only get the
currently-stored representation. e.g.  if the
<link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link> returns <link linkend="GTK-IMAGE-PIXBUF-CAPS"><type>GTK_IMAGE_PIXBUF</type></link>, then you can
call <link linkend="gtk-image-get-pixbuf"><function>gtk_image_get_pixbuf()</function></link> but not <link linkend="gtk-image-get-stock"><function>gtk_image_get_stock()</function></link>.  For empty
images, you can request any storage type (call any of the "get"
functions), but they will all return <literal>NULL</literal> values.
</para><variablelist role="enum">
<varlistentry>
<term><literal>GTK_IMAGE_EMPTY</literal></term>
<listitem><simpara>there is no image displayed by the widget
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_IMAGE_PIXMAP</literal></term>
<listitem><simpara>the widget contains a <link linkend="GdkPixmap"><type>GdkPixmap</type></link>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_IMAGE_IMAGE</literal></term>
<listitem><simpara>the widget contains a <link linkend="GdkImage"><type>GdkImage</type></link>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_IMAGE_PIXBUF</literal></term>
<listitem><simpara>the widget contains a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_IMAGE_STOCK</literal></term>
<listitem><simpara>the widget contains a stock icon name (see <xref linkend="gtk-Stock-Items"/>)
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_IMAGE_ICON_SET</literal></term>
<listitem><simpara>the widget contains a <link linkend="GtkIconSet"><type>GtkIconSet</type></link>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GTK_IMAGE_ANIMATION</literal></term>
<listitem><simpara>the widget contains a <link linkend="GdkPixbufAnimation"><type>GdkPixbufAnimation</type></link>

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-icon-set"/>gtk_image_get_icon_set ()</title>
<indexterm><primary>gtk_image_get_icon_set</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_get_icon_set          (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GtkIconSet">GtkIconSet</link> **icon_set,
                                             <link linkend="GtkIconSize">GtkIconSize</link> *size);</programlisting>
<para>
Gets the icon set and size being displayed by the <link linkend="GtkImage"><type>GtkImage</type></link>.
The storage type of the image must be <literal>GTK_IMAGE_EMPTY</literal> or
<literal>GTK_IMAGE_ICON_SET</literal> (see <link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_set</parameter>&nbsp;:</term>
<listitem><simpara> location to store a <link linkend="GtkIconSet"><type>GtkIconSet</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> location to store a stock icon size
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-image"/>gtk_image_get_image ()</title>
<indexterm><primary>gtk_image_get_image</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_get_image             (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> **gdk_image,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask);</programlisting>
<para>
Gets the <link linkend="GdkImage"><type>GdkImage</type></link> and mask being displayed by the <link linkend="GtkImage"><type>GtkImage</type></link>.
The storage type of the image must be <literal>GTK_IMAGE_EMPTY</literal> or
<literal>GTK_IMAGE_IMAGE</literal> (see <link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>).
The caller of this function does not own a reference to the
returned image and mask.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gdk_image</parameter>&nbsp;:</term>
<listitem><simpara> return location for a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara> return location for a <link linkend="GdkBitmap"><type>GdkBitmap</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-pixbuf"/>gtk_image_get_pixbuf ()</title>
<indexterm><primary>gtk_image_get_pixbuf</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  gtk_image_get_pixbuf            (<link linkend="GtkImage">GtkImage</link> *image);</programlisting>
<para>
Gets the <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> being displayed by the <link linkend="GtkImage"><type>GtkImage</type></link>.
The storage type of the image must be <literal>GTK_IMAGE_EMPTY</literal> or
<literal>GTK_IMAGE_PIXBUF</literal> (see <link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>).
The caller of this function does not own a reference to the
returned pixbuf.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the displayed pixbuf, or <literal>NULL</literal> if the image is empty
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-pixmap"/>gtk_image_get_pixmap ()</title>
<indexterm><primary>gtk_image_get_pixmap</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_get_pixmap            (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixmap">GdkPixmap</link> **pixmap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask);</programlisting>
<para>
Gets the pixmap and mask being displayed by the <link linkend="GtkImage"><type>GtkImage</type></link>.
The storage type of the image must be <literal>GTK_IMAGE_EMPTY</literal> or
<literal>GTK_IMAGE_PIXMAP</literal> (see <link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>).
The caller of this function does not own a reference to the
returned pixmap and mask.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixmap</parameter>&nbsp;:</term>
<listitem><simpara> location to store the pixmap, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara> location to store the mask, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-stock"/>gtk_image_get_stock ()</title>
<indexterm><primary>gtk_image_get_stock</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_get_stock             (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="gchar">gchar</link> **stock_id,
                                             <link linkend="GtkIconSize">GtkIconSize</link> *size);</programlisting>
<para>
Gets the stock icon name and size being displayed by the <link linkend="GtkImage"><type>GtkImage</type></link>.
The storage type of the image must be <literal>GTK_IMAGE_EMPTY</literal> or
<literal>GTK_IMAGE_STOCK</literal> (see <link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>).
The returned string is owned by the <link linkend="GtkImage"><type>GtkImage</type></link> and should not
be freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stock_id</parameter>&nbsp;:</term>
<listitem><simpara> place to store a stock icon name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> place to store a stock icon size
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-animation"/>gtk_image_get_animation ()</title>
<indexterm><primary>gtk_image_get_animation</primary></indexterm><programlisting><link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link>* gtk_image_get_animation (<link linkend="GtkImage">GtkImage</link> *image);</programlisting>
<para>
Gets the <link linkend="GdkPixbufAnimation"><type>GdkPixbufAnimation</type></link> being displayed by the <link linkend="GtkImage"><type>GtkImage</type></link>.
The storage type of the image must be <literal>GTK_IMAGE_EMPTY</literal> or
<literal>GTK_IMAGE_ANIMATION</literal> (see <link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>).
The caller of this function does not own a reference to the
returned animation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the displayed animation, or <literal>NULL</literal> if the image is empty
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get-storage-type"/>gtk_image_get_storage_type ()</title>
<indexterm><primary>gtk_image_get_storage_type</primary></indexterm><programlisting><link linkend="GtkImageType">GtkImageType</link> gtk_image_get_storage_type     (<link linkend="GtkImage">GtkImage</link> *image);</programlisting>
<para>
Gets the type of representation being used by the <link linkend="GtkImage"><type>GtkImage</type></link>
to store image data. If the <link linkend="GtkImage"><type>GtkImage</type></link> has no image data,
the return value will be <literal>GTK_IMAGE_EMPTY</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> image representation being used
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-file"/>gtk_image_new_from_file ()</title>
<indexterm><primary>gtk_image_new_from_file</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_file         (const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Creates a new <link linkend="GtkImage"><type>GtkImage</type></link> displaying the file <parameter>filename</parameter>. If the file
isn't found or can't be loaded, the resulting <link linkend="GtkImage"><type>GtkImage</type></link> will
display a "broken image" icon. This function never returns <literal>NULL</literal>,
it always returns a valid <link linkend="GtkImage"><type>GtkImage</type></link> widget.
</para>
<para>
If the file contains an animation, the image will contain an
animation.
</para>
<para>
If you need to detect failures to load the file, use
<link linkend="gdk-pixbuf-new-from-file"><function>gdk_pixbuf_new_from_file()</function></link> to load the file yourself, then create
the <link linkend="GtkImage"><type>GtkImage</type></link> from the pixbuf. (Or for animations, use
<link linkend="gdk-pixbuf-animation-new-from-file"><function>gdk_pixbuf_animation_new_from_file()</function></link>).
</para>
<para>
The storage type (<link linkend="gtk-image-get-storage-type"><function>gtk_image_get_storage_type()</function></link>) of the returned
image is not defined, it will be whatever is appropriate for
displaying the file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> a filename
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-icon-set"/>gtk_image_new_from_icon_set ()</title>
<indexterm><primary>gtk_image_new_from_icon_set</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_icon_set     (<link linkend="GtkIconSet">GtkIconSet</link> *icon_set,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);</programlisting>
<para>
Creates a <link linkend="GtkImage"><type>GtkImage</type></link> displaying an icon set. Sample stock sizes are
<link linkend="GTK-ICON-SIZE-MENU-CAPS"><type>GTK_ICON_SIZE_MENU</type></link>, <link linkend="GTK-ICON-SIZE-SMALL-TOOLBAR-CAPS"><type>GTK_ICON_SIZE_SMALL_TOOLBAR</type></link>. Instead of using
this function, usually it's better to create a <link linkend="GtkIconFactory"><type>GtkIconFactory</type></link>, put
your icon sets in the icon factory, add the icon factory to the
list of default factories with <link linkend="gtk-icon-factory-add-default"><function>gtk_icon_factory_add_default()</function></link>, and
then use <link linkend="gtk-image-new-from-stock"><function>gtk_image_new_from_stock()</function></link>. This will allow themes to
override the icon you ship with your application.
</para>
<para>
The <link linkend="GtkImage"><type>GtkImage</type></link> does not assume a reference to the
icon set; you still need to unref it if you own references.
<link linkend="GtkImage"><type>GtkImage</type></link> will add its own reference rather than adopting yours.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>icon_set</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIconSet"><type>GtkIconSet</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> a stock icon size
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-image"/>gtk_image_new_from_image ()</title>
<indexterm><primary>gtk_image_new_from_image</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_image        (<link linkend="GdkImage">GdkImage</link> *image,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);</programlisting>
<para>
Creates a <link linkend="GtkImage"><type>GtkImage</type></link> widget displaying a <parameter>image</parameter> with a <parameter>mask</parameter>.
A <link linkend="GdkImage"><type>GdkImage</type></link> is a client-side image buffer in the pixel format of the
current display.
The <link linkend="GtkImage"><type>GtkImage</type></link> does not assume a reference to the
image or mask; you still need to unref them if you own references.
<link linkend="GtkImage"><type>GtkImage</type></link> will add its own reference rather than adopting yours.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkImage"><type>GdkImage</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkBitmap"><type>GdkBitmap</type></link>, or <literal>NULL</literal> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-pixbuf"/>gtk_image_new_from_pixbuf ()</title>
<indexterm><primary>gtk_image_new_from_pixbuf</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_pixbuf       (<link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>
Creates a new <link linkend="GtkImage"><type>GtkImage</type></link> displaying <parameter>pixbuf</parameter>.
The <link linkend="GtkImage"><type>GtkImage</type></link> does not assume a reference to the
pixbuf; you still need to unref it if you own references.
<link linkend="GtkImage"><type>GtkImage</type></link> will add its own reference rather than adopting yours.
</para>
<para>
Note that this function just creates an <link linkend="GtkImage"><type>GtkImage</type></link> from the pixbuf.  The
<link linkend="GtkImage"><type>GtkImage</type></link> created will not react to state changes.  Should you want that, you
should use <link linkend="gtk-image-new-from-icon-set"><function>gtk_image_new_from_icon_set()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pixbuf</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-pixmap"/>gtk_image_new_from_pixmap ()</title>
<indexterm><primary>gtk_image_new_from_pixmap</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_pixmap       (<link linkend="GdkPixmap">GdkPixmap</link> *pixmap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);</programlisting>
<para>
Creates a <link linkend="GtkImage"><type>GtkImage</type></link> widget displaying <parameter>pixmap</parameter> with a <parameter>mask</parameter>.
A <link linkend="GdkImage"><type>GdkImage</type></link> is a server-side image buffer in the pixel format of the
current display. The <link linkend="GtkImage"><type>GtkImage</type></link> does not assume a reference to the
pixmap or mask; you still need to unref them if you own references.
<link linkend="GtkImage"><type>GtkImage</type></link> will add its own reference rather than adopting yours.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pixmap</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkPixmap"><type>GdkPixmap</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkBitmap"><type>GdkBitmap</type></link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-stock"/>gtk_image_new_from_stock ()</title>
<indexterm><primary>gtk_image_new_from_stock</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_stock        (const <link linkend="gchar">gchar</link> *stock_id,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);</programlisting>
<para>
Creates a <link linkend="GtkImage"><type>GtkImage</type></link> displaying a stock icon. Sample stock icon
names are <link linkend="GTK-STOCK-OPEN-CAPS"><type>GTK_STOCK_OPEN</type></link>, <link linkend="GTK-STOCK-EXIT-CAPS"><type>GTK_STOCK_EXIT</type></link>. Sample stock sizes
are <link linkend="GTK-ICON-SIZE-MENU-CAPS"><type>GTK_ICON_SIZE_MENU</type></link>, <link linkend="GTK-ICON-SIZE-SMALL-TOOLBAR-CAPS"><type>GTK_ICON_SIZE_SMALL_TOOLBAR</type></link>. If the stock
icon name isn't known, a "broken image" icon will be displayed instead.
You can register your own stock icon names, see
<link linkend="gtk-icon-factory-add-default"><function>gtk_icon_factory_add_default()</function></link> and <link linkend="gtk-icon-factory-add"><function>gtk_icon_factory_add()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>stock_id</parameter>&nbsp;:</term>
<listitem><simpara> a stock icon name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> a stock icon size
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link> displaying the stock icon
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new-from-animation"/>gtk_image_new_from_animation ()</title>
<indexterm><primary>gtk_image_new_from_animation</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new_from_animation    (<link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link> *animation);</programlisting>
<para>
Creates a <link linkend="GtkImage"><type>GtkImage</type></link> displaying the given animation.
The <link linkend="GtkImage"><type>GtkImage</type></link> does not assume a reference to the
animation; you still need to unref it if you own references.
<link linkend="GtkImage"><type>GtkImage</type></link> will add its own reference rather than adopting yours.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>animation</parameter>&nbsp;:</term>
<listitem><simpara> an animation
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="GtkImage"><type>GtkImage</type></link> widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-file"/>gtk_image_set_from_file ()</title>
<indexterm><primary>gtk_image_set_from_file</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_file         (<link linkend="GtkImage">GtkImage</link> *image,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
See <link linkend="gtk-image-new-from-file"><function>gtk_image_new_from_file()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> a filename or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-icon-set"/>gtk_image_set_from_icon_set ()</title>
<indexterm><primary>gtk_image_set_from_icon_set</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_icon_set     (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GtkIconSet">GtkIconSet</link> *icon_set,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);</programlisting>
<para>
See <link linkend="gtk-image-new-from-icon-set"><function>gtk_image_new_from_icon_set()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_set</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkIconSet"><type>GtkIconSet</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> a stock icon size
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-image"/>gtk_image_set_from_image ()</title>
<indexterm><primary>gtk_image_set_from_image</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_image        (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> *gdk_image,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);</programlisting>
<para>
See <link linkend="gtk-image-new-from-image"><function>gtk_image_new_from_image()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gdk_image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkImage"><type>GdkImage</type></link> or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkBitmap"><type>GdkBitmap</type></link> or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-pixbuf"/>gtk_image_set_from_pixbuf ()</title>
<indexterm><primary>gtk_image_set_from_pixbuf</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_pixbuf       (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>
See <link linkend="gtk-image-new-from-pixbuf"><function>gtk_image_new_from_pixbuf()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-pixmap"/>gtk_image_set_from_pixmap ()</title>
<indexterm><primary>gtk_image_set_from_pixmap</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_pixmap       (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixmap">GdkPixmap</link> *pixmap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);</programlisting>
<para>
See <link linkend="gtk-image-new-from-pixmap"><function>gtk_image_new_from_pixmap()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixmap</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkPixmap"><type>GdkPixmap</type></link> or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkBitmap"><type>GdkBitmap</type></link> or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-stock"/>gtk_image_set_from_stock ()</title>
<indexterm><primary>gtk_image_set_from_stock</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_stock        (<link linkend="GtkImage">GtkImage</link> *image,
                                             const <link linkend="gchar">gchar</link> *stock_id,
                                             <link linkend="GtkIconSize">GtkIconSize</link> size);</programlisting>
<para>
See <link linkend="gtk-image-new-from-stock"><function>gtk_image_new_from_stock()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stock_id</parameter>&nbsp;:</term>
<listitem><simpara> a stock icon name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> a stock icon size
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set-from-animation"/>gtk_image_set_from_animation ()</title>
<indexterm><primary>gtk_image_set_from_animation</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set_from_animation    (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link> *animation);</programlisting>
<para>
Causes the <link linkend="GtkImage"><type>GtkImage</type></link> to display the given animation (or display
nothing, if you set the animation to <literal>NULL</literal>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkImage"><type>GtkImage</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>animation</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkPixbufAnimation"><type>GdkPixbufAnimation</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-new"/>gtk_image_new ()</title>
<indexterm><primary>gtk_image_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gtk_image_new                   (void);</programlisting>
<para>
Creates a new empty <link linkend="GtkImage"><type>GtkImage</type></link> widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a newly created <link linkend="GtkImage"><type>GtkImage</type></link> widget. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-set"/>gtk_image_set ()</title>
<indexterm><primary>gtk_image_set</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_set                   (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> *val,
                                             <link linkend="GdkBitmap">GdkBitmap</link> *mask);</programlisting>
<warning><para><literal>gtk_image_set</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the <link linkend="GtkImage"><type>GtkImage</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkPixmap"><type>GdkPixmap</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkBitmap"><type>GdkBitmap</type></link> that indicates which parts of the image should be transparent.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-image-get"/>gtk_image_get ()</title>
<indexterm><primary>gtk_image_get</primary></indexterm><programlisting><link linkend="void">void</link>        gtk_image_get                   (<link linkend="GtkImage">GtkImage</link> *image,
                                             <link linkend="GdkImage">GdkImage</link> **val,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask);</programlisting>
<warning><para><literal>gtk_image_get</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Gets the <link linkend="GtkImage"><type>GtkImage</type></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>image</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkPixmap"><type>GdkPixmap</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkBitmap"><type>GdkBitmap</type></link> that indicates which parts of the image should be transparent.


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GtkImage--file"/>&quot;<literal>file</literal>&quot; (<link linkend="gchararray">gchararray</link> : Write)</term>
<listitem>
<para>Filename to load and display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--icon-set"/>&quot;<literal>icon-set</literal>&quot; (<link linkend="GtkIconSet">GtkIconSet</link> : Read / Write)</term>
<listitem>
<para>Icon set to display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--icon-size"/>&quot;<literal>icon-size</literal>&quot; (<link linkend="gint">gint</link> : Read / Write)</term>
<listitem>
<para>Size to use for stock icon or icon set.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--image"/>&quot;<literal>image</literal>&quot; (<link linkend="GdkImage">GdkImage</link> : Read / Write)</term>
<listitem>
<para>A GdkImage to display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--mask"/>&quot;<literal>mask</literal>&quot; (<link linkend="GdkPixmap">GdkPixmap</link> : Read / Write)</term>
<listitem>
<para>Mask bitmap to use with GdkImage or GdkPixmap.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--pixbuf"/>&quot;<literal>pixbuf</literal>&quot; (<link linkend="GdkPixbuf">GdkPixbuf</link> : Read / Write)</term>
<listitem>
<para>A GdkPixbuf to display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--pixbuf-animation"/>&quot;<literal>pixbuf-animation</literal>&quot; (<link linkend="GdkPixbufAnimation">GdkPixbufAnimation</link> : Read / Write)</term>
<listitem>
<para>GdkPixbufAnimation to display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--pixmap"/>&quot;<literal>pixmap</literal>&quot; (<link linkend="GdkPixmap">GdkPixmap</link> : Read / Write)</term>
<listitem>
<para>A GdkPixmap to display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--stock"/>&quot;<literal>stock</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>Stock ID for a stock image to display.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GtkImage--storage-type"/>&quot;<literal>storage-type</literal>&quot; (<link linkend="GtkImageType">GtkImageType</link> : Read)</term>
<listitem>
<para>The representation being used for image data.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>



<refsect1>
<title>See Also</title>
<para>
<link linkend="GdkPixbuf"><type>GdkPixbuf</type></link>
</para>
</refsect1>

</refentry>
